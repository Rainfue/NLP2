Для написания сайта первым делом нужно подготовить программы.
Первой и самой важно программой будет OpenServer, данная программа
позволяет создавать сервер на компьютере и тем самым открывать файлы с
расширением .php. Данную программу можно скачать с официального сайта
https://ospanel.io/. Следующая немало важная программа это Sublime Text,
которая позволяет редактировать такие файлы с расширением как: .php .js
.css .html и тд. Скачать данную программу можно с официально сайта
https://www.sublimetext.com/. Если вы планируете разрабатывать сайт в
команде, то тогда вам понадобится репозиторий. Отличным решением будет
программа GitHub Desktop. Скачать ее можно так же с официального сайта
https://desktop.github.com/. Последней установкой будет библиотека
RedBeanPHP которая значительно упрощает работу с базой данных. Скачать
ее можно с официально сайта https://redbeanphp.com/index.php/.
После скачивания и установки всех приложений нужно открыть
настройки OpenServer сделать это можно перейдя в панель задач и нажать
правой кнопке по иконке с флажком как это показано на рисунке 1.
После перехода в настройки открываем вкладку модули и выбираем:
HTTP – Apache_24 – PHP_8.8
PHP – PHP_8.0
MySQL – MySQL – 8.2 – win10
Подробно показано на рисунке 2.
Нажимаем кнопку сохранить.
Если разработка ведется в команде, то обязательно нужно занести все
файлы в репозиторий GitHub Desktop.
Теперь переходим к созданию файлов. Переходим по пути
C:\openserver\domains и создаем папку с названием «site». Открываем папку
«site» и создаем папку «libs». Скаченную библиотеку RedBeanPHP
распаковываем из архива и переносим в папку «libs». Теперь создаем сразу
несколько файлов для нашего сайта:
db.php – для связи с базой данных
index.php – главная страница сайта
login.php – авторизации пользователей
signup.php – регистрация пользователей
logout.php – выход из сессии
Должно получиться как на рисунке 3.
Теперь нужно создать базу данных и с этим нам поможет программа
OpenServer. Переходим в меню задач и запускаем программу как показано на
рисунке 4.
Теперь переходим во вкладку дополнительно и запускаем
phpMyAdmin.
Отвеется браузер и вводим в строку пользователь root, а строку пароль
оставляем пустым. Нажимаем вперед как показано на рисунке 5.
Переходим во вкладку базы данных и создаем новую. Для этого вводим
название новой базы данных на английском языке. Таблицы создавать не
нужно, они будут создаваться автоматически через библиотеку RedBeanPHP.
Связываем базу данных и наш сайт. Для этого открываем уже
созданный файл db.php и прописываем код как на рисунке 6.
Пробуем запустить сайт через OpenServer и если у вас не появилась
надпись «No DB connection!», то база данных успешно подключена.
Создаем основной файл header.php. Вписываем в нем подключение
стилей CSS которые мы будем использовать в будущем как на рисунке 7.
Обратите внимание на $title – сюда будет автоматически вписываться
название страницы.
Теперь настроим файл login.php. пишем код как на рисунке 8. Здесь мы
используем HTML форму и при нажатии на кнопку авторизоваться
выполняется PHP код, который проверяет есть ли такой пользователь в
таблице users. Обратите внимание на 5 строку «require "db.php";» эта строка
нужна для подключения базы данных, таким образом мы вставляем код из
файла db.php при помощи функции «require».
Для проверки созданной страницы нужно перейти по адресу
http://site/login.php и если никаких ошибок не выявлено, то все сделано верно.
Форма авторизации должно выглядеть следующим образом как показано на
рисунке 9.
Если мы попробуем войти, то не сможем так как мы еще не
зарегистрированы. Для регистрации нужно оформить файл signup.php.
Оформляется он похожим образом, как и файл login.php, так же создается
форма и при нажатии на кнопку выполняется php код. Единственным
отличием, что в этом файле мы делаем проверку написанного текста
пользователем будь это логин или пароль. Так же проверяется существует ли
пользователь с таким же логином, если да, то выдает ошибку. Также запись в
базу данных осуществляется через библиотеку RedBeanPHP. Помимо всего
вышеперечисленного в этом файле мы хешируем пароль, нужно это для
защиты данных пользователей. Оформление кода показано на рисунке 10 и
11.
Проверяем регистрацию, переходим по ссылке http://site/signup.php и
если никаких ошибок не появилось то все правильно.
Проходим регистрацию и сверху появилось сообщение о том, что вы
успешно зарегистрированы как на рисунке 12, то все сделано верно.
Проверка:
Первый способ. Нажимаем авторизоваться, вводим логин и пароль,
который мы указывали при регистрации и нажимаем войти. Если открылась
главная страница, то все сделано правильно, так как мы указывали редирект
на главную страницу.
Второй способ. Открываем базу данных и у нас появилась таблица
users, в ней есть одна запись — это наш пользователь, которого мы
зарегистрировали как на рисунке 13.
Так же мы видим, что пароль хешируется MD5 и просто так взломать
пользователя почти невозможно.
Теперь создадим главную страницу, обычно главная страница - это
файл index.php, переходим к редактированию. Выведем приветствие и
кнопку для выхода из сессии которую мы пропишем чуть позже. Для вывода
логина нужно обратиться либо к сессии и узнать логин пользователя, либо к
базе данных. Воспользуемся базой данных. Узнаем id пользователя через
сессию и отправляем запрос в базу данных на вывод логина. Подробный код
показан на рисунке 14.
После написания кода обязательно нужно проверить его
работоспособность, для этого просто обновим страницу или перейдем по
пути http://site/index.php. Должна быть надпись добро пожаловать на сайт и
привет, логин пользователя. Как на рисунке 15.
Следующий шаг — это прописать выход из сессии, делается это либо
просто кодом на этой же странице, либо через отдельный файл. Мы создали
файл logout.php в самом начале и будем редактировать именно его. При
нажатии на кнопку выйти пользователя будет перебрасывать сначала на
страницу logout.php, после чего редирект на главную страницу уже без куки
авторизации. Подробный код показана на рисунке 16.
Этот код регистрации и авторизации можно модифицировать, добавить
всплывающие окна и изменить данные которые нужны для записи в таблицу
users и добавление восстановление пароля. Так, например, на моем сайте
имеется точно такая же регистрация в усовершенствованном виде рисунок 17
и 18.
В заключении можно сказать что в данной статье были рассмотрен
способ создания авторизации и регистрации, а также работа с библиотекой
RedBeanPHP, которая помогает быстро и качественно работать с базой
данных.