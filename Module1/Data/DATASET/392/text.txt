Развитие современного информационного общества характеризуется
тем, что информационные технологии проникают практически во все сферы
деятельности человека. Эти изменения требуют умелого ориентирования в
потоках информации, адаптации в быстро меняющихся условиях
информационной среды, умения оперировать информацией, связанной с
жизненной и профессиональной деятельностью.
Федеральный закон «Об образовании в Российской Федерации» [5],
Федеральный государственный образовательный стандарт среднего общего
образования (ФГОС СОО) [2] также декларируют образовательный процесс
как единый целенаправленный процесс обучения, воспитания и развития,
цели которого – формирование образованной, компетентной личности,
способной к самостоятельному проектированию жизненных и
профессиональных задач.
Международный научный журнал «Синергия наук»
В связи с этим возникает необходимость использования
информационно-коммуникационных технологий в образовании, которые
должны стать не только прерогативой уроков информатики и ИКТ, но и
интегрироваться в образовательный процесс во всех областях научного
знания. Наиболее логичной и естественной становится проблема
использования информационно-коммуникационных технологий при
изучении математики в средней школе. Перед педагогом встает задача
профессиональной компетентности – разработки учебных пособий и
методических материалов к занятиям. На сегодняшний день педагог имеет
огромный выбор технологий проектирования и разработки интерактивных
пособий с помощью разнообразных языков программирования. Таким
образом, наиболее простым и доступным для этих целей является язык
программирования JavaScript.
На основе теоретического материала из курса геометрии, произведем
реализацию алгоритма иллюстративного материала для доказательства
теоремы Брианшона.
Реализация алгоритма интерактивного пособия средствами JavaScpipt
начинается с создания html-документа в простом текстовом редакторе,
например, с помощью программы PSPad.
Тег <html> является контейнером, который заключает в себе
содержимое web-страницы, включая тег <head> который предназначен для
хранения информации предназначенной для браузеров и поисковых систем.
Содержимое данного тега не отображается напрямую на web-странице, за
исключением тега <title>, который устанавливает заголовок окна webстраницы [4]. Тега <meta> с помощью атрибута charset указываем кодировку
документа, а тег <link> с помощью атрибута rel устанавливает связь с
внешним документом вроде файла со стилями.
Международный научный журнал «Синергия наук»
<html>
<head>
<title>Интерактивное пособие</title>
<meta charset="windows-1251">
<link rel="stylesheet" type="text/css" href="style.css">
Тег <script> предназначен для определения стилей элементов webстраниц, в котором обрабатывается событие window.onload, которое
происходит после полной загрузки страницы браузером, после чего код
получает объект холста и создает контекст рисования.
<script>
window.onload = function() {
pic1();
pic2();
pic3();
pic4();
}
</script>
Текстовая составляющая, раскрывающая сущность одного из
доказательства представлена в следующем виде:
<p><b>Доказательство:</b></p>
Международный научный журнал «Синергия наук»
<p><b><font color=red>I. &rArr;</font></b> Пусть вершины 1,...,6
&isin; ОКВП &gamma;. Докажем, что x,y,z &isin; одной прямой. По обратной
теореме Штейнера можно установить прективное отображение пучка (1) на
пучок (5).</p>
<p>f : </p>
<p>(1,2) &rarr; (5,2)</p>
<p>(1,3) &rarr; (5,3)</p>
<p>(1,4) &rarr; (5,4)</p>
<p>(1,6) &rarr; (5,6)</p>
Помимо текстовой информации, иллюстративный материал для
доказательства теорем предполагает содержание графического элемента с
помощью тега <canvas>, который предоставляет рабочее пространство для
рисования и включает в себя: атрибут id присваивает холсту однозначное
имя, требуемое для его идентификации кодом, атрибут width и height
устанавливают ширину и высоту холста в пикселях.
<canvas id="pic1" width="200" height="200" ></canvas>
Для того чтобы нарисовать на холсте, необходимо написать
определённый код, первым делом находим элемент pic1 с помощью команды
document.getElementById(), метод getElementById возвращает объект DOM
для элемента с указанным id, после чего сохраним этот объект в переменной
с именем drawingCanvas:
var drawingCanvas = document.getElementById('pic1');
Международный научный журнал «Синергия наук»
Для подготовки элемента canvas к рисованию необходимо получить
контекст рисования – это JavaScript-объект, обладающий методами и
свойствами, при помощи которых можно рисовать на холсте. Чтобы
получить данный объект необходимо вызвать метод getContext() для pic1,
передавая ему строку '2d' – двухмерное изображение. Затем сохраняем
контекст в переменной context с помощью команды:
var context = drawingCanvas.getContext('2d');
Вызов метода beginPath() определяет начало рисования нового пути,
который хранится в context. После вызываем метод ellipse в котором
указываем координаты центра эллипса (100, 100), горизонтальный (75) и
вертикальный радиус (50), угол обзора (80 * Math.PI/180), начинами рисовать
с угла в 0 радиан и заканчиваем углом в 2 * Math.PI. Холст по-прежнему
пуст, так как мы лишь описали то, что собираемся нарисовать. Поэтому
вызываем метод stroke(), благодаря которому линии появятся на экране.
Метод closePath() автоматически строит линию между последней
нарисованной точкой и начальной точкой.
context.beginPath();
context.ellipse(100, 100, 50, 75, 80 * Math.PI/180, 0, 2 * Math.PI);
context.closePath();
context.stroke();
Таким образом, разработанное нами интерактивное пособие предлагает
последовательное преобразование графического изображения в процессе
доказательства теоремы Брианшона. Внешний вид страниц интерактивного
пособия приводится на рис. 1.
Международный научный журнал «Синергия наук»


Рис. 1. Страницы интерактивного пособия
Результатом реализации кода стали четыре последовательных
графических изображения доказываемой теоремы (рис. 2.).
Международный научный журнал «Синергия наук»


Рис. 2. Графические изображения доказываемой теоремы
Такой подход к доказательству дает возможность более подробно
пояснить ход доказательства не только на словах и с помощью формул, но и
графически. Использование JavaScript позволяет реализовать любые
иллюстративные материалы для курса геометрии. 