Последние пятнадцать лет характеризуются активным ростом количества средств массовой информации в русскоязычном сегменте сети Интернет, которые, в свою очередь, представляют собой огромный массив данных для изучения структурных изменений норм русского литературного языка в пуб- лицистических текстах. Из-за скорости создания, распространения и копирования информации на подобных ресурсах для
анализа изменений в языке публицистических текстов целесообразно применять статистический компьютерный анализ [1],
одной из важных составляющей которого является так называемый парсинг данных — процесс отделения нужной информации посредством синтаксического и лексического анализа содержимого текста [2].
В сфере цифровой гуманитаристики в России как правило
для этого используются программы, написанные на объектноориентированном языке программирования Python, поскольку
считается, что он хорошо подходит для статистического анализа таблиц и массивов [3]. Однако при всех преимуществах
Python в работе со статистикой, у этого языка есть ряд серьезных недостатков при сборе и обработке текстовых данных из
сетевых источников. Так, например, у Python нет нативной
интерпретации текстов в кодировке UTF-8, которая на текущий момент является стандартом для использования в вебстраницах. Также стоит отметить необходимость подключения
большего количества библиотек при разработке программы
для парсинга JSON-данных, чем того требует, например,
платформа Node.js для тех же целей [4]. Значимым минусом
является и то, что в Python гораздо сложнее выстраивается алгоритм вывода списка ссылок для дальнейшего их парсинга на
предмет наличия текста [5].
Решение вышеуказанных проблем, возникающих при работе с Python, предлагает программная платформа Node.js, поскольку в языке программирования JavaScript есть ряд инструментов, позволяющих гораздо быстрее без подключения
большого количества библиотек запрашивать, сохранять и обрабатывать текстовую информацию с интернет-ресурсов. Так,
например, в Node.js, в отличие от Python, есть нативная интерпретация текстов в UTF-8, имеется более простая в работе
библиотека для работы с файловой системой, а при помощи
библиотеки Axios процесс запроса гиперссылок для парсинга
проходит в среднем гораздо быстрее. 