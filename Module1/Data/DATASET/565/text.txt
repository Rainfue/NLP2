В данной статье рассмотрено применение web технологий для отображения и
сохранения отчетов ГАК по результатам выпускных квалификационных работ отделения
"Моделирование и конструирование швейных изделий" колледжа инновационных технологий и
экономики.
Эту работу мы разрабатываем для систематизации, упорядочения и сохранения данных о
выпускниках и их выпускных квалификационных работ (ВКР) и исключения дублирования и
повтора (плагиата) в других ВКР последующих выпусках данного направления . Так же эта система
нужна для представления отчетов в наикратчайшие сроки по востребованию. На сайте выложена
следующая информация:
1. приказы о допуске выпускников, распределение тем ВКР, Ф.И.О. руководителей и рецензентов;
2. пояснительная записка ВКР;
3. приложения к пояснительной записке;
4. графическая часть ВКР;
5. видео показы проектируемых моделей ВКР;
6. отчеты ГАК.
Для организации безопасности информации применяем систему шифрования данных,
история которых приведена ниже. Первый период (приблизительно с 3-го тысячелетия до н. э.)
характеризуется господством моноалфавитных шифров (основной принцип — замена алфавита
исходного текста другим алфавитом через замену букв другими буквами или символами). Второй
период (хронологические рамки — с IX века на Ближнем Востоке (Ал-Кинди) и сXV века в Европе
(Леон Баттиста Альберти) — до начала XX века) ознаменовался введением в обиход
полиалфавитных шифров. Третий период (с начала и до середины XX века) характеризуется
внедрением электромеханических устройств в работу шифровальщиков. При этом продолжалось
использование полиалфавитных шифров. Четвёртый период — с середины до 70-х годов XX века —
период перехода к математической криптографии. В работе Шеннона появляются строгие
математические определения количества информации, передачи данных, энтропии, функций
шифрования. Обязательным этапом создания шифра считается изучение его уязвимости к
различным известным атакам — линейному и дифференциальному криптоанализу. Однако до 1975
года криптография оставалась «классической» или же, более корректно, криптографией с
секретным ключом[1].
В нашем случае мы, также будем использовать секретный ключ. Но каждый раз он будет
произвольный и он не будет фиксироваться не на каком либо носителе.
А передаваться путем радио данных или любым другим способом исключая интернет
передачу. Это позволит исключить перехват ключа.
И дальше в осуществлении нашего замысла подключаем информационные web-технологии.
На базе PHP My Admin и языка программирования PHP.
Разработку осуществляем путем создания ряда формы для ввода данных и формы
получения результата, а также создания промежуточных рабочих файлов.
Разработаем план осуществления замысла:
1 Разрабатываем базу данных для ввода зашифрованной информации: shifr
2 Разрабатываем рабочие формы, начиная с главной формы
3 Разрабатываем файлы обработки данных принимаемых с форм
4 Разрабатываем инструкцию пользователя по работе для получения корректного результата
Используем базу данных, как источник для безопасного хранения данных.
2. Разрабатываем рабочие формы, начиная с главной формы:
Исходный код формы:
<html>
 <head>
 <title>Форма приема данных для криптографии</title>
 </head>
 <body>
<br>
 <h1 align="center">Форма приема данных для криптографии </h1>
<br>
<table align="center" border="1" >
 <form action="form_cript1.php" method="post">
 <table align="center">
 <tr>
 <td colspan=2>
 <input type="submit" value="сервер" name="send"/>
 </td>
</tr>
</table>
</form>
 <form action="form_client.php" method="post">
 <table align="center">
 <tr>
 <td colspan=2>
 <input type="submit" value=" клиент" name="send"/>
 </td>
</tr>
</table>
</form>
</table>
</body>
</html>
2.1 Разрабатываем рабочую форму ввода данных для сервера:
Исходный код формы
передачи данных:
<html>
 <head>
 <title>Форма для криптографии</title>
 </head>
 <body>
 <form action="shifr_in.php" method="post">
 <table>
 <tr>
<td>ключ передачи:</td> <td><input type="text" size="5" value=""
name="name" /><br/></td>
 </tr>
<tr>
<td>Сообщение для шифрования:</td> <br/>
 <td><textarea rows="5" cols="40" name="message"> </textarea><br/></td>
 </tr>
 <tr>
 <td colspan=2>
 <input type="submit" value="Отправить" name="send"/>
 </td>
</tr>
</table>
</form>
 </body>
</html
2.3 Исходный код файла обработки передаваемых данных для шифрования:
<?php
$text = $_POST['message'];
$key = $_POST['name'];
$iv = mcrypt_create_iv(mcrypt_get_iv_size(MCRYPT_DES, MCRYPT_MODE_ECB),
MCRYPT_RAND);
$enc = mcrypt_encrypt(MCRYPT_DES, $key, $text, MCRYPT_MODE_ECB, $iv);
include("file_per.php");
?>
2.4 продолжение Исходный код файла обработки передаваемых данных для шифрования в файле
include("file_per.php").
<?php
include("config.php");
$q1=mysql_query("TRUNCATE TABLE `message");
$q="INSERT INTO `message` (`enc`,`iv`)VALUES ('$enc','$iv')";
$q1=mysql_query($q);
echo'Cообщение отправлено';
echo"<br>";
mysql_query("SET NAMES utf8");
$query = "SELECT * from message";
$sort=@mysql_query($query);
$row = @mysql_fetch_array($sort);
echo$row[enc];
echo"<br>";
echo$row[iv];
echo"<br>";
$dctext = mcrypt_decrypt(MCRYPT_DES, $key, $enc, MCRYPT_MODE_ECB, $iv);
$v=$dctext;
echo'$v='.$v;
?>
<form action="index.php" method="post">
 <table>
 <tr>
 <td colspan=2>
 <input type="submit" value="сервер" name="send"/>
 </td>
</tr>
</table>
</form>
Результат передачи данных:
3. Разрабатываем файлы обработки данных принимаемых с форм
 форма приема данных:
Исходный код файла
<html>
 <head>
 <title>Форма приема данных для криптографии</title>
 </head>
 <body>
 <form action="priem_mess.php" method="post">
 <table>
 <tr>
<td>ключ передачи:</td> <td><input type="text" value="" name="name"
/><br/></td>
 </tr>
 <td colspan=2>
 <input type="submit" value="Отправить" name="send"/>
 </td>
</tr>
</table>
</form>
</body>
</html>
Результат расшифровки переданного сообщения:
Исходный код файла приема сообщения:
<?php
$key="";
include("config.php");
$query = "SELECT * from message";
$sort=@mysql_query($query);
$row = @mysql_fetch_array($sort);
$key = $_POST['name'];
$enc=$row[enc];
echo'Зашифрованное сообщение:';
echo"&nbsp&nbsp&nbsp&nbsp";
echo'$enc='.$enc;
echo"&nbsp&nbsp&nbsp&nbsp";
$iv=$row[iv];
echo'$iv='.$iv;
echo"<br>";
$dctext = mcrypt_decrypt(MCRYPT_DES, $key, $enc, MCRYPT_MODE_ECB, $iv);
echo'Расшифрованное сообщение:';
echo"&nbsp";
echo$dctext;
?>
<form action="index.php" method="post">
 <table>
 <tr>
 <td colspan=2>
 <input type="submit" value="сервер" name="send"/>
 </td>
</tr>
</table>
</form>
Выводы по статье работа с функциями шифрования:
В результате работы было выявлен ряд положительных свойств функций шифрования:
$iv = mcrypt_create_iv(mcrypt_get_iv_size(MCRYPT_DES, MCRYPT_MODE_ECB),
MCRYPT_RAND);
$enc = mcrypt_encrypt(MCRYPT_DES, $key, $text, MCRYPT_MODE_ECB, $iv);
И дешифрования:
$dctext = mcrypt_decrypt(MCRYPT_DES, $key, $enc, MCRYPT_MODE_ECB, $iv);
Которые способствуют функциональности надежного шифрования и дешифровки отправленных
данных, хранение осуществлено в базе данных.
И хранимая зашифрованная информация не отображается в базе, за счет применения типа данных
BLOB.