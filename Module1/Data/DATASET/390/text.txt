В современном мире информатизация и автоматизация процессов – залог успешного существования и развития любого предприятия. Даже небольшой магазин, сервисный центр или бюро ремонта стараются идти в ногу со временем,
информатизировать и автоматизировать свою деятельность. Особенно это относится к компаниям, работающим с клиентами, ведь удовлетворенность клиентов, сохранение имиджа компании и ее конкурентоспособность на рынке являются ключевыми факторами.
Магазины либо фирмы, продающие оборудование, ставят перед собой задачу
обеспечения надежной и эффективной службы сервисной поддержки проданного оборудования.
Таким образом, возникла необходимость разработки автоматизированной
информационной системы, предназначенной для компаний, занимающихся
продажей и ремонтом технического оборудования, которая бы предоставила
возможность эффективного оказания поддержки клиентам в случае возникновения проблем или неисправностей с приобретенным оборудованием.
Важным аспектом разработки и реализации такой системы является анализ
требований и потребностей клиентов, чтобы система максимально соответствовала их ожиданиям и обеспечивала эффективное решение их проблем.
Также необходимо учесть особенности конкретного вида оборудования и его
технические характеристики при разработке функционала системы.
Система должна обеспечивать следующие функции:
– регистрация запросов на поддержку от клиентов;
– организация и управление процессом обработки запросов;
– отслеживание статуса запросов;
– учет информации о клиентах и истории запросов;
– предоставление доступа администратору к базе данных;
– взаимодействие с клиентами через различные каналы связи (телефон,
электронная почта и т. д.).
При созданиях системы планируется решить ряд задач: принять решение по
системному программному обеспечению; принять решение по техническому
обеспечению; спроектировать компоненты информационной системы;
реализовать интерфейс системы.
В ходе проектирования применяем CASE-средства (Computer - Aided
Software Engineering) – это методы и технологии, которые позволяют проектировать различные информационные системы (в частности, базы данных)
и автоматизировать их создание [1].
Для разработки автоматизированной системы необходимо выбрать инструменты.
Для начала определимся с приложением для администрирования системы
управления базами данных (СУБД), рассмотрим некоторые – MySQL Workbench, phpMyAdmin, Ar-wik Builder.
MySQL Workbench [2] – официальная система как для проектирования, так и
для администрирования баз данных MySQL. Удобный графический интерфейс
позволяет легко создавать структуру базы любой сложности, а наглядность позволит легко ориентироваться. Плюсами при проектировании являются наглядность и простота редактирования, а также разработка не требует подключения к
серверу. Кроме того, для администрирования это самый удобный инструмент с
хорошо развитым графическим интерфейсом. Однако у данной системы недостаточно развит буфер обмена, да и запросы необходимо писать самому, потому
что отсутствует конструктор запросов.
PhpMyAdmin [3] – программа, которая позволяет управлять базами данных
через удобный графический интерфейс. Ее устанавливают на сервер, где хранится сайт, а затем открывают в браузере для удаленного администрирования
СУБД. Проще говоря, можно отдавать команды путем нажатия на кнопки в
пользовательском веб-интерфейсе, а не вручную расписывать их в терминале
Плюсами при администрировании является возможность запускать программу
непосредственно на сервере, что удобно при хостинге и когда хостер запрещает
удаленный доступ к базе, ну а минус – в сравнении с MySQL Workbench менее
удобный интерфейс.
Ar-wik Builder [4] – онлайн-сервис для разработки структуры баз данных
и для работы по созданию запросов с использованием конструкторов. Как и в случае с предыдущим инструментом, графический интерфейс позволяет
легко манипулировать таблицами, их полями и связями между ними. Также
этот сервис позволяет внедрять PHP код непосредственно в запросы, не заботясь о необходимости проверки данных. Все проверки выполняются автоматически.
Достоинства сервиса: наглядность, простота редактирования, не требует подключения к серверу, удобный конструктор запросов с возможностью внедрения
PHP-функций, удобный импорт/экспорт проекта и его частей, возможность обмена проектами с другими пользователями сервиса. Однако хранимые процедуры и триггеры необходимо писать разработчику самостоятельно, для них
конструкторы не предусмотрены, кроме того, не предусмотрено непосредственное администрирование.
Анализируя перечисленные инструменты, делаем выбор в пользу приложения PHPMyAdmin, которое позволяет администрировать СУБД MySQL [5].
MySQL из самых популярных СУБД для веб-приложений и фактически является стандартом для веб-серверов, которые работают под управлением операционной системы Linux. MySQL – это бесплатный пакет программ, однако новые версии выходят постоянно, расширяя функционал и улучшая безопасность. В бесплатной версии наибольший упор делается на скорость
и надежность, а не на полноту функционала, который может стать и достоинством, и недостатком – в зависимости от области внедрения. Существуют специальные платные версии, предназначенные для коммерческого использования.
Для разработки клиентской части сайта планируется использовать язык
программирования JavaScript (JS) [6] – мультипарадигменный язык, который
поддерживает объектно ориентированный, императивный и функциональный
стили.
Adobe Photoshop [7] – условно бесплатный растровый графический редактор,
будем использовать для создания и редактирования изображений.
В качестве текстового редактора выбираем Visual Studio Code [8] – редактор
исходного кода, разработанный Microsoft для Windows, Linux и macOS, который можно использовать с различными языками программирования, включая
C, C #, C ++, Fortran, Go, Java, JavaScript, Node.js, Питон, Раст и Джулия. Visual
Studio Code позиционируется как «легкий» редактор кода для кроссплатформенной разработки веб и облачных приложений.
Для сбора информации о проекте, написания сервиса и тестирования предлагается использовать браузер Google Chrome. Также планируется протестировать
сайт в браузерах Mozilla Firefox и Яндекс Браузер.
При разработке программной части системы определена структура, построена логическая и физическая модель базы данных. Затем создана веб-страница и
ее элементы, указаны стили с помощью CSS и написан код на JavaScript для
создания «живости» сайта. Последним этапом программной разработки являлось написание backend-код на PHP для того, чтобы связать клиентскую и серверную части системы. 
Для верстки сайтов в современном веб-программировании используется
блочная верстка, то есть контент разбивается на блоки с помощью тега <div>. В
нашем случае использовалась бесплатная css-библиотека Bootstrap [9], в которой уже написаны основные блоки, а также она обеспечивает высокую скорость
и легкость разработки так называемой front-end части сайта, то что видит пользователь. Библиотека включает в себя HTML- и CSS-шаблоны оформления для
форм, кнопок, блоков навигации и прочих компонентов веб-интерфейса.
Для написания скриптов использовался встраиваемый язык программирования JavaScript, были реализованы функции открытия и закрытия блоков «Регистрации» и «Авторизации» на сайте.
Серверная часть или back-end сайта была написан с помощью PHPскриптового языка общего назначения, интенсивно применяемого для разработки веб-приложений [10]. С его помощью реализуется обращение к базе данных, манипулирование ею – добавление, удаление, изменение или вывод данных. Регистрация, авторизация, администрирование таблиц базы данных – это
все PHP.
На этапе составления пользовательских сценариев установили количество
экранов, их краткое содержание и положение в общей структуре. Разработаны
следующие экранные формы: регистрация пользователя, авторизация пользователя, главная страница сайта, админ-панель, личный профиль пользователя.
В ходе следующего этапа разработки интерфейса – прототипирования – было
проверено, насколько последователен путь оператора при пользовании сайтом,
также были выявлены и устранены препятствия, которые возникли в процессе
взаимодействия с продуктом.
Система была протестирована, для имитации работы сервера на локальном
компьютере использовалась OpenServer – это портативная серверная платформа
и программная среда, созданная специально для веб-разработчиков с учетом их
рекомендаций и пожеланий [11].
Особое внимание было уделено защите системы от внешних угроз. Как правило, это один из наиболее острых вопросов в контексте информационной
безопасности.
Для безопасности используется Брандмауэр (Firewall), входящий в состав
операционной системы, антивирус, а также идентификация пользователей.
В процессе идентификации используется традиционно аутентификация
(Authentication) – использование уязвимостей в механизмах проверки идентификатора пользователя, службы или приложения, которые направлены на обход
системы и авторизация (Authorization) – определения уровня прав доступа
пользователя, службы или приложения.
Чтобы исключить неправомерный доступ к информации на сайте, используются парольная защита и разграничение прав пользователей по статусу
в системе.
Таким образом, результатом работы является автоматизированная информационная система, позволяющая фирмам по продаже и ремонту оборудования обеспечивать качественную сервисную поддержку клиентов и
улучшать качество их обслуживания.
Это позволит компаниям стать более конкурентоспособными на рынке
и укрепить свою репутацию как надежного поставщика оборудования
с качественной сервисной поддержкой. 
