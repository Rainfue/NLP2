Все языки программирования предоставляют механизм 
для реализации взаимодействия между сервером и клиентом, 
называемых сокетом. Обычно сервер работает на определенном 
компьютере, и имеет сокет, который привязан к определенному 
номеру порта.
Когда соединение с клиентом устанавливается, сервер 
ожидает запрос клиента, прослушивая сокет. Если все идет 
хорошо, сервер принимает соединение. После принятия сервер 
получает новый сокет, привязанный к тому же локальному порту, 
а также устанавливает для своей удаленной конечной точки адрес 
и порт клиента. Ему нужен новый сокет, чтобы он мог 
продолжать прослушивать исходный сокет для запросов на 
соединение, одновременно удовлетворяя потребности 
подключенного клиента. На стороне клиента, если соединение 
принято, сокет успешно создан, и клиент может использовать 
сокет для связи с сервером.
В соответствии с этим механизмом приложение позволяет 
серверу и клиенту обмениваться данными между ними. Подобно 
другим языкам программирования, PHP также предоставляет 
возможность реализовать механизм сокетов. 
Язык PHP имеет встроенный подключаемый модуль 
«socket», который реализует низкоуровневый интерфейс для 
функции связи сокетов, основанными на популярных сокетах 
BSD, обеспечивая возможность действовать как сервер сокетов, 
так и клиент.
В модуле сокетов можно выделить 5 основных функций:
socket_create (int $domain, int $type, int $protocol) – функция 
создает сокет и возвращает дескриптор сокета, который можно 
использовать в других сетевых командах.
Функция 1. Создание сокета
 Параметр domain определяет семейство протоколов, 
используемых сокетами.
 Параметр type определяет тип обмена данными, который 
будет использоваться сокетом.
 Параметр protocol указывает конкретный протокол в 
заданном семействе протоколов domain, который будет 
использоваться в обмене данными с созданным сокетом.
В листинге 1 показан пример создания сокета с 
использованием проверки корректности дескриптора.
socket_connect(Socket $socket, string $address, ?int $port = 
null) – функция для соединение с сокетом.
Функция 2. Подключение к сокету
Параметр address может быть IPv4-адресом в записи, 
разделённой точками (например, 127.0.0.1).
socket_send (Socket $socket, string $data, int $length, int
$flags) – функция для отправки данных в подсоединенный сокет.
Функция 3. Отправка данных в сокет
Параметр data содержит буфер с данными, которые будут 
отправлены на сокет.
Параметр length содержит число байт, отправляемых на сокет 
(количество байт в строке data).
socket_recv (Socket $socket, ?string &$data, int $length, int
$flags) – функция для получение данных из подсоединенного 
сокета.
Функция 4. Получение данных из сокета
Полученные данные будут переданы в переменную, указанную в 
параметре data. Если происходит ошибка, если соединение 
сброшено, или если данные недоступны, параметр data будет 
установлен в null.
socket_close(Socket $socket) – закрывает экземпляр Socket
Функция 5. Закрытие соединения с сокетом
Язык программирования PHP, как и многие другие языки, 
позволяет разработчику реализовывать сокет-систему для 
взаимодействия удаленного сервера и пользователя. В данной 
статье были описаны основные функции для взаимодействия 
сервера и клиента, позволяющие понять логику связи PHP с 
удаленным сокетом.