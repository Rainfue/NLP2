Рост серверного JavaScript за последние годы привел к появлению различных CMS,
построенных на платформе Node.js из-за ее быстрой скорости. Эти CMS имеют открытый
исходный код, благодаря чему разработчики могут анализировать его и улучшать CMS,
внося свои изменения с согласия авторов.
На данный момент существует большое количество исследований, посвященных
сравнительному анализу систем управления контентом, где рассмотрены классификации
систем управления контентом, выделены критерии для сравнения CMS, а также разработаны
рекомендации для применения той или иной системы для определенного вида веб-ресурса
(интернет-магазин, блог и т.д.). Однако в этих работах объектами исследования являются
CMS только на платформе PHP [1]. CMS на платформе Node.js мало изучены в силу своей
новизны.
Вышесказанное подтверждает недостаточную изученность в научных исследованиях
проблемы выбора CMS на платформе Node.js для разработки сайтов и определяет
актуальность работы.
Согласно рейтингу и рекомендациям различных интернет-сообществ можно выделить
наиболее популярные CMS для дальнейшего исследования: Ghost, KeystoneJS, Apostrophe и
Pencilblue.
Проанализировав критерии для сравнения систем управления контентом [2, 3], а также
определив функциональные свойства CMS, способствующие комфортной и продуктивной
разработке того или иного интернет-ресурса, были выделены следующие критерии для
сравнения CMS на платформе Node.js: популярность, активность разработки,
пользовательские типы записей, дополнительные поля, плагины, на основе MVC,
документация для разработки темы, поддержка сообщества, документация.
1. Популярность. Критерий популярности можно считать одним из самых показательных в
оценке качества CMS, так как он основывается на отзывах пользователей, которые
тестировали систему в реальных проектах. В исследовании была использована оценка
популярности от 0 до 10, взятая из ресурса «Awesome JS», где предоставляется актуальная
информация о частоте использования различных CMS на Node.js.2. Активность разработки. Данный критерий характеризует степень активности сообщества
разработчиков в создании CMS. По этому показателю можно выявить, насколько активно
развивается проект. В исследовании была использована оценка активности разработки от
0 до 10, взятая из ресурса «Awesome JS», где предоставляется актуальная информация об
интенсивности коммитов в репозиториях проектов на GitHub.
3. Пользовательские типы записей. Как правило, в CMS существует возможность создания
записи, формат которой предусмотрен в базовом функционале системы. Однако иногда
возникает необходимость разместить контент в формате, который не предусмотрен CMS
«из коробки». Тогда и появляется необходимость создания кастомизированной записи,
имеющей нестандартное представление. Примером предоставления подобного
функционала могут стать пользовательские типы записей (Custom Post Types) в CMS
Wordpress [4]. Для оценки данного показателя будет применяться система оценки, где 0 –
отсутствие возможности добавления пользовательского типа записи, 1 – наличие, 0,5 –
функциональность CMS отличается концептуально.
4. Дополнительные поля. Во многих системах управления контентом предусмотрены
стандартные поля, с помощью которых можно публиковать записи. Однако не всегда этих
полей достаточно, поскольку иногда требуются дополнительные поля для более
расширенной информации. В этой связи очень полезно и удобно, когда в CMS есть
возможность добавить пользовательские поля, которые могут представлять собой
текстовую область, стандартную форму для ввода текста, выпадающие опции, календарь,
форму выбора цвета или загрузки изображений. Например, в CMS Wordpress для этих
целей используется плагин Advanced Custom Fields, а в CMS Joomla! есть уже встроенная
возможность использования пользовательских полей (Custom fields). Для оценки данного
показателя будет применяться система оценки, где 0 – отсутствие возможности
добавления дополнительного поля, 1 – наличие, 0,5 – функциональность CMS отличается
концептуально.
5. Плагины. Поддержка различных плагинов для дополнительного функционала системы
делает CMS более гибкой и пригодной для большего ряда задач. Во многих популярных
CMS, реализованных на языке PHP, имеется такая возможность. Таким образом, система с
поддержкой плагинов будет в преимуществе. Для оценки данного показателя будет
применяться следующая система оценки: 0 – отсутствие поддержки плагинов, 1 – наличие
небольшого количества плагинов, 2 – наибольшее количество плагинов.
6. На основе MVC. Шаблон проектирования MVC предполагает разделение данных
приложения, пользовательского интерфейса и управляющей логики на три отдельных
компонента: Модель, Представление и Контроллер – таким образом, что модификация
каждого компонента может осуществляться независимо [5]. CMS, основанная на MVC,
сделает разработку более стандартной и отлаженной. Для оценки данного показателя
будет применяться двоичная система оценки, где 0 – отсутствие шаблона MVC в основе, а
1 – наличие.
7. Документация для разработки темы. Как правило, в системе управления контентом
присутствует набор готовых дизайнерских решений для оформления сайта. Однако не
всегда бывает достаточно базовых предложений. Для этого разработчикам
предоставляется возможность создания собственной темы и соответствующая
документация для реализации идей на данной платформе. Оценка данного параметра
будет производиться в соответствии со следующими правилами: 0 – отсутствие
документации для разработки темы, 0,5 – неполная документация/отсутствие
документации компенсируется, 1 – наличие документации.
8. Поддержка сообщества. При возникновении той или иной проблемы с CMS, разработчик
может задать вопрос людям, которые тоже использовали данную систему и, возможно,
сталкивались с подобной проблемой, и знают, как ее решить. Таким образом, важно
выяснить, есть ли у CMS поддержка сообщества. Для оценки данного показателя будет Из результатов анализа CMS по 9 отобранным критериям можно сделать следующие
выводы. Наиболее популярной CMS среди разработчиков является CMS Ghost. Также эта
система выделилась самым высоким показателем активности разработки. Следующими по
популярности соответственно располагаются KeystoneJS, Apostrophe и Pencilblue. Несмотря
на то, что KeystoneJS оказалась второй по популярности, активность ее разработки ниже, чем
у CMS Apostrophe. Наименьшая активность разработки наблюдается у Pencilblue. Все четыре
CMS одинаково обладают следующими характеристиками: основаны на шаблоне
проектирования MVC, имеют качественную документацию на официальном сайте. Однако
только у Ghost и Apostrophe есть надлежащая документация для разработки тем.
Полноценная настройка дополнительных полей, а также большой набор плагинов есть в
Pencilblue, однако только у данной системы самая слабая поддержка сообщества среди
конкурентов. Возможность настройки пользовательских типов записей есть у систем
KeystoneJS и Pencilblue. Несмотря на самую высокую популярность, Ghost имеет наибольшее
количество «нулей» в оценке критериев исследуемых систем, тогда как следующая за ней
KeystoneJS и Pencilblue имеют только одну нулевую оценку, а у Apostrophe «нули» и вовсе
отсутствуют.
Исходя из итоговой оценки CMS, состоящей из суммы всех оценок, можно заметить,
что Ghost и KeystoneJS лидируют, а Pencilblue имеет наименьшую оценку. Однако если в
данном сравнении CMS не учитывать популярность и активность разработки, которые не
отражают функциональных характеристик CMS, итоговая оценка окажется примерно
одинаковой для всех исследуемых CMS.
Большинство из исследуемых CMS имеют аспекты управления контентом,
отличающиеся от традиционных систем, такие как WordPress, Joomla или Drupal. Ghost
специализируется на блогах. KeystoneJS и Pencilblue являются полнофункциональными
CMS. Apostrophe поднимает редактирование интерфейса на следующий уровень.
Ghost не имеет дополнительных плагинов, возможности добавления
кастомизированных типов записей и полей, поэтому идеально подойдет для создания и
ведения блога, где эти функции не являются необходимыми.KeystoneJS подойдет для разработчиков сайтов или людей, которые собираются
заказать создание и настройку системы у профессиональных разработчиков. Многие идеи и
характеристики данной CMS представляются интересными и свежими, а автоматически
генерируемый интерфейс администратора упрощает создание сложных веб-сайтов и
приложений.
Apostrophe имеет все необходимые характеристики для создания достойного сайта. Она
подойдет для разработчиков сайтов и клиентов, лидирующих на рынке какой-либо услуги,
которые готовы выделить из своего бюджета средства на разработку легко редактируемой
CMS. Однако нужно быть уверенным в том, что WYSIWYG, лежащее в основе Apostrophe,
будет использоваться клиентом правильно.
Pencilblue выглядит и работает очень похоже на WordPress и в некотором смысле
данная CMS лучше организована. Система имеет процветающую систему плагинов, что
может оказаться очень полезным качеством для разработки. Pencilblue имеет широкую
целевую аудиторию, поскольку это полнофункциональная платформа, и ее можно
использовать для разных типов сайтов.