Анализ и сравнение существующих средств для разработки веб-приложений – это необходимость при разработке любого сервиса или продукта, взаимодействующего с сетью. От выбранного языка, платформы, аппаратного обеспечения зависит жизненный цикл работы сервиса. С каждым годом
одни средства разработки появляются (или снимают с себя статус «экспериментальных»), другие устаревают (и получают статус «deprecated», т.е. «нежелательные»). Node.js– это технология, с которой
только несколько лет назад сняли статус экспериментальной и сейчас она активно имплементируется
(вводится в эксплуатацию) повсеместно. Но язык PHP и веб-сервер Apache (которые являются самыми
распространенными в мире) так же активно развиваются и совершенствуются [1, с. 40].
Статистика – это важный инструмент управления. В частности, данные, полученные из результатов можно использовать в контекстной рекламе, которая подбирается персонально для каждого человека, группы, региона, страны [2, с. 120]. Данные, полученные на основе личных страницах людей из
социальных сетей очень эффективна при рекламе определенных товаров, услуг или политических партий. Опыт компании Cambridge Analytica, которая использовала данные, которые ей предоставили
пользователи, для политической компании Дональда Трампа в 2017-м году. Например, для одних пользователей выводились (в рекламных блоках сайта) хорошие новости о кандидате, если они поддерживали его (исходя из сообщений на своей странице) и негативные о оппоненте, если они негативно относились к Трампу. Составление цифрового портрета пользователя позволяет «продать» не только
политику, но и любые товары или услуги вообще. На основе представленной работы можно построить
нейросеть, которая не только выдает определенные рекламные блоки конкретному человеку, но и модифицировать текст, который будет основываться на основе лексики и диалектики (в широком смысле)
этого человека. Таким образом, эффективность рекламы будет максимальной.
Уже сейчас в некоторых рекламных блоках в социальной сети Вконтакте можно использовать
имя пользователя, который в данный момент просматривает страницу с этим рекламным блоком. Обращение по имени сильно повышает эффективность рекламы, делает ее более персональной. Однако
если у нас в распоряжении будет не только имя, но пол, возраст, место проживания (страна, город,
район, улица), возможный достаток? Но самое главное: что будет, если у нас будет лексический аппа-
EUROPEAN RESEARCH 111
XVI International scientific conference | www.naukaip.ru
рат человека и его интересы? Основываясь на этих данных можно как косвенно, так и напрямую манипулировать поведением человека в определенных ситуациях. Чтобы собрать эти данные, не нужно заполнять длинные анкеты (как это делают сейчас крупные компании) за вознаграждение. Нам нужен
лишь легитимный доступ, с правом передачи третьим лицам, к профилю в социальной сети: к постам, к
музыке, к анкете (например, ВКонтакте) и, конечно, к списку друзей.
Человек по ходу своей жизнедеятельности оставляет сотни, тысячи, иногда десятки тысяч сообщений в публичном доступе, которые характеризуют его как личность. Пожиная плоды этой деятельности, можно как раз составить «цифровой портрет».
Твиттер (англ. Twitter) был выбран в качестве отправной точки потому, что формат общения
пользователей в данной социальной сети максимально прост. Пользователи размещают короткое сообщение в 280 (ранее в 140) символов, другие пользователи ставят «лайки», выражая одобрение и
комментируют эту запись. Основной момент в том, что все комментарии пользователя тоже являются
сообщениями, которые размещаются на личной странице комментирующих, что упрощает анализ и
построение «сети». А анализ «лайков» и комментариев поможет вывести рейтинг популярности пользователя, что тоже немаловажно. К тому же, Твиттер имеет официальный API (англ. Application
programming interface), которые без каких либо трудозатрат позволяет получить все эти данные. Но в
дальнейшем, через такие же интерфейсы можно будет подключаться и к ВКонтакте, Одноклассникам и
другим социальным сетям.
Немаловажным аспектом такого сервиса является правовой. Вышеупомянутая компания Cambridge Analytica получала доступ к информации пользователя за определенную награду (деньги на
счет). Однако в пользовательском соглашении (который явно был просто скопирован с других сервисов) был пункт, что все данные не могут быть переданы третьим лицам. Данные и правда не передавались третьим лицам, однако использовались в их интересах на коммерческой основе. Чтобы избежать таких неопределенных ситуаций, коллизий, следует внимательно составлять пользовательское
соглашение совместно с большой командой юристов. Так же можно не собирать конкретную информацию о персоне: телефон, фамилия, конкретный адрес проживания.
Для такого огромного массива данных необходимо было выбрать технологию, которая должна
эффективно работать с анализом массива, с вводом/выводом данных и иметь возможность быстрого
масштабирования.
Во-первых, асинхронность: в худшем случае одновременно будут обрабатываться несколько
миллионов «анкет», данных должны вводиться во внутреннюю базу данных асинхронно, обрабатываться асинхронно и результат должен выводиться асинхронно, иначе обработка будет занимать преступно много времени. Поскольку запросов к базе данных будет очень много, не выгодно реализовывать популярную многопоточную модель, асинхронная модель справится лучше. Многопоточная система с блокирующими операциями имеет большое время простоя. Чрезмерное количество потоков может создать много накладных расходов, недостаточное же количество может привести к замедлению
работы при большом количестве медленных запросов. Асинхронное приложение с неблокирующими
операциями использует процессорное время эффективнее, но более сложно при проектировании.
Во-вторых, так же необходимо масштабирование, поскольку количество данных будет очень
быстро расти, а при модификации системы (под новые социальные сети, например) будет расти
нагрузка на процессор и память сервера. Вместе с «подключением» определенной социальной сети
разумней будет выделять под обработку данных отдельный сервер, а не наращивать мощности одного. Таким образом, верным выходом будет не вертикальное, а горизонтальное масштабирование.
Node.js отвечает всем заявленным требованиям.
Технология Node.js позволяет легко масштабировать системы в отдельные кластеры. Это разумно по той причине, что запись данных из одной социальной сети одного пользователя не будет влиять
на запись данных из другой социальной сети, поэтому можно «разнести» нагрузку на разные ядра процессора или вообще на другой экземпляр. Для базы данных необходимо будет использовать SQL, а
для веб-интерфейса React, которые также поддерживают асинхронность.
Таким образом, такое приложение будет эффективным средством для бизнеса, политики, социологии и многих других сфер