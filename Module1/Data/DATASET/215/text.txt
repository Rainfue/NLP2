DDoS – это распределённая атака на вычислительную систему с целью довести её до отказа. DDoS-атаки можно разделить на атаки уровня инфраструктуры и атаки уровня приложения. Для уровня инфраструктур используются атаки по протоколам IPv4/6, ICMP, IGMP IPsec, RIP, OSPF, а также TCP и UDP, 
целями таких атак являются сетевые устройства, серверы и интернет-сервисы. 
Для уровня приложения используется воздействия на прикладные протоколы, 
например, HTTP/HTTPS, цели таких атак также являются конечные серверы и 
сервисы.
Существует несколько разновидностей DDoS-атак в зависимости от того, 
на что они воздействуют. Основными являются UDP-флуд, фрагментированный 
UDP-флуд, TCP SYN-флуд и HTTP/HTTPS-флуд.
Так как UDP работает поверх IP, и в нём нет установки соединения как такового, данные просто отсылаются безо всякого контроля целостности и доставки данных. Поэтому злоумышленники осуществляют подмену IP-адреса 
источника, что позволяет использовать одно устройство для отправления запросов. При этом получатель будет обрабатывать не один запрос, а несколько, от 
подменённых IP-адресов источника.
При такой атаке злоумышленник создает множество пакетов максимального размера и отправляет на устройство жертвы (сервер). При этом фильтрация 
трафика firewall’ом сервера не среагирует на такие пакеты, так как они заполнят 
полосу пропускания между граничным маршрутизатором и сетевым интерфейсом. 
Проблемой в защите от данной атаки является то, что блокировать запросы 
по IP будет неэффективным, так как используется подмена IP-адреса источника. 
К тому же, если жертвой используются UDP-порты, то защищаться от такой 
атаки становится сложнее, так как их запрет нарушит работу сервиса.
Фрагментированный UDP-флуд отличается от обычного тем, что злоумышленник, присылая на устройство жертвы пакет, указывает что это только его 
часть. Из-за чего устройство резервирует у себя ресурс, чтобы собрать пакет, но 
новые фрагменты не приходят.
От таких атак можно защититься с помощью отбрасывания слишком больших пакетов. Обычно для этого используется ПО, которое позволяет анализировать использование сети устройством и выявлять аномальные запросы и трафик.
При SYN-флуд атаке подменяется заголовок пакета таким образом, чтобы 
несуществующие IP-адреса отображались в системе. Такие атаки в основном 
используют протокол TCP. Если при обычной ситуации при получении SYNзапроса сервер отвечает подтверждением (SYN-ACK) получателю, то при атаке 
данное соединение «клиент-сервер» не может быть установлено из-за избыточного количества пакетов, которые сервер добавляет в очередь, тем самым легитимный пользователь не имеет возможности отправить свой запрос на сервер. 
Таким образом данная атака одновременно переполняет канал передачи данных 
и позволяет использовать большое количество ресурсов атакуемого сервера.
Защититься от SYN-флуд атаки можно с помощью блокировки SYNпакетов выше их допустимого лимита. Это даст возможность легитимным 
пользователям воспользоваться ресурсами сервера, так как они, в большинстве 
случаев, не отправляют большое количество запросов на сервер, в отличие от 
злоумышленников.
Самым распространённым видом атак на уровень приложения является 
HTTP/HTTPS-флуд, поскольку основное общение клиент-сервера с веб-сайтами осуществляется именно по этим протоколам. Такие атаки являются объёмными, 
обычно для их реализации используется ботнет – сеть, состоящая из некоторого 
количества устройств, заражённых автономным программным обеспечением. В 
большинстве случаев, заражённые пользователи даже не подозревают о том, что 
их устройства используются злоумышленниками для распределённых атак.
Атаки с использованием протоколов HTTP/HTTPS можно разделить по основным методам запросов – GET и POST.
При HTTP GET-флуде целью является отправление на сервер большого потока запросов, в результате которых происходит переполнение ресурсов, и как 
следствие, отказ в обслуживании.
HTTP POST-флуд чаще всего требует от сервера выполнения трудоемкой 
работы, так как в POST запросе передаются данные в теле сообщения для дальнейшей их обработки или хранении на сервере. Поэтому данный вид атаки увеличивает нагрузку на сервер для каждого запроса.
Отличием атаки по протоколу HTTPS является то, что происходит шифрование и расшифрование трафика. Это в свою очередь приводит к еще большим 
нагрузкам на сервер, быстрее вызывая отказ в обслуживании.
Для защиты от атак таких видов существуют различные способы. По возможности стоит отказаться от использования HTTP и использовать только 
HTTPS. Несмотря на то, что при HTTPS-флуде атаке можно быстрее вызвать 
отказ в обслуживании, использование HTTPS повышает безопасность трафика и 
затрудняет злоумышленнику просмотр пакетов и понять, как они формируются, 
чтобы затем их подменить.
Одним из способов затруднить осуществление DDoS-атак может быть обновление программного обеспечения на устройствах интернета вещей, так как в 
большинстве случаев именно они используются для создания ботнет сети, с последующим использованием в DDoS-атаках, но этот способ требует от производителей поставить безопасность таких устройств одной из основных задач. Поэтому данный способ предотвращения не является эффективным, скорее на него 
должны ориентироваться производители при создании своих устройств.
Иногда для защиты от DDoS-атак можно использовать фильтрацию запросов на основе GeoIP. Это является не лучшим методом защиты, но если организация знает из какой страны в основном приходят запросы от пользователей, то 
это позволяет быстро ограничить большое количество запросов из другого региона, хотя при этом часть легитимных пользователей, которые находятся за 
пределами допустимых стран, не смогут получить доступ к сервису.
Также можно заметить, что обычно для понимания является запрос легитимным или нет, используется анализ трафика. Для того, чтобы облегчить данную задачу, можно использовать программное обеспечение с технологией искусственного интеллекта. Это позволит создавать динамические правила фильтрации на анализе использования сетевого трафика и обработки запросов пользователей. Тем самым запросы, которые отличаются от обычных, не будут обработаны, но в редких случаях могут происходить ложные срабатывания фильтрации, и легитимного пользователя система посчитает за злоумышленника. 
Однако, чем дольше искусственный интеллект будет анализировать запросы и 
трафик, тем точнее будет фильтрация. К тому же существует возможность ручного добавления пользовательских фильтров.

