Существует огромная разница между такими платформами, как React Native и Flutter по сравнению с Ionic. Создатели Ionic считают, что открытая технология, которая обеспечивает сегодняшнюю
сеть, является будущим и должна использоваться для создания мобильных приложений. Благодаря
такому подходу Ionic является единственной популярной платформой, которая позволяет повторно использовать одну и ту же кодовую базу для веб разработки и мобильных устройств. Flutter и React
Native, с другой стороны, заменяют стек технологий. Flutter делает это при помощи своего движка рендеринга [1, с. 115] и «хуков» React Native в родных движках iOS и Android [2, с. 228]. Преимущество Ionic заключается в том, что при разработке используют открытые веб-технологии и могут повторно использовать одну кодовую базу. Flutter и React Native не позволяет их многократно использовать, но их
производительность намного ближе к нативным приложениям.
Чтобы начать работу с Ionic, необходимо загрузить Ionic CLI при помощи npm. NPM (первоначально сокращение от Node Package Manager) - это менеджер пакетов для языка программирования
JavaScript. После установки необходимо войти в Ionic из командной строки, используя установленный
CLI при помощи команды: $ ionic login. Подобно тому, как был установлен Ionic, нужно установить
Create React App (CRA) глобально, используя npm. Create React App — это инструмент для быстрого
запуска React. При помощи него разработчики не тратят время на настройку Webpack, Babel и других
инструментов разработки, все они заранее настроены и упакованы, так что разработчики могут сфокусироваться на коде и бизнес-логике приложения. Далее необходимо установить зависимости для будущего приложения при помощи команды показанной на рис.1.
Для запуска приложения необходимо установить симулятор мобильного устройства, как для iOS,
так и для Android. Их можно скачать на официальном сайте Android Studio для Android, а также XCode,
для iOS. XCode поставляется в комплекте с iOS Simulator по умолчанию.
Аннотация: В данной статье автором рассматриваются основные аспекты по созданию мобильного
приложения на основе Ionic при помощи технологий React.js и Stream Chat.
Ключевые слова: цифровизация, информационные технологии, цифровая экономика, обработка данных, технологические платформы.
CREATING IONIC CHAT FOR MOBILE DEVICE WITH REACT.JS
Dunaevsky Alexander Sergeevich
Abstract: In this article, the author discusses the main aspects of creating a mobile application based on Ionic
chat using React.js and Stream Chat technologies.
Key words: digitalization, information technology, digital economy, data processing, technological platforms.
НАУЧНЫЕ ДОСТИЖЕНИЯ И ОТКРЫТИЯ СОВРЕМЕННОЙ МОЛОДЁЖИ 59
VIII International scientific conference | www.naukaip.ru
Рис. 1. Команда по установке зависимостей для приложения
После того как всё установлено и настроено нужно добавить необходимые файлы в проект. В
корне программы в файле App.js, заменить код, на тот, который показан на рис. 2.
Рис. 2. Компонент App.js
Данный компонент импортирует пакет ‘react-router-dom’, который позаботится о маршрутизации
между компонентами, а также сами компоненты «Chat» и «Login» и два HOCa «UnauthedRoute» и
«AuthedRoute». HOC (High Order Components) — это продвинутая техника в React для повторного использования логики компонента. Этот паттерн определяет метод, который принимает компонент в качестве аргумента, а затем возвращает тот же компонент, но с некоторыми дополнительными функциями. Далее необходимо создать эти компоненты и поместить в корень каталога проекта. Нужно создать
файл с именем AuthedRoute.js и поместить содержимое, которое показано на рис. 3.
Рис. 3. HOC AuthedRoute
60 НАУЧНЫЕ ДОСТИЖЕНИЯ И ОТКРЫТИЯ СОВРЕМЕННОЙ МОЛОДЁЖИ
VIII международная научно-практическая конференция | МЦНС «НАУКА И ПРОСВЕЩЕНИЕ»
В данном компоненте импортируются пакеты для маршрутизации, а сам компонент принимает
через свойства другой компонент и производит проверку аутентифицирован ли пользователь, по средству токена и, если токена у него нет, то пользователь будет переадресован на страницу входа. Теперь
нужно создать компонент с именем UnauthedRoute.js для пользователей, которые входят без аутентификации. Он очень похож на компонент АuthedRoute, но с отличиями на переадресацию по компонентам см рис.4.
Рис. 4. HOC UnauthedRoute
Затем необходимо создать компонент под именем Login.js, этот компонент добавит аутентификацию приложению см.рис.5.
Рис. 5. Компонент Login.js
НАУЧНЫЕ ДОСТИЖЕНИЯ И ОТКРЫТИЯ СОВРЕМЕННОЙ МОЛОДЁЖИ 61
VIII International scientific conference | www.naukaip.ru
Данный компонент отправляет в API информацию о входе и, если ошибок не было, записывает
информацию в localStorage. Теперь необходимо создать самый главный компонент с именем Chat.js, в
котором будет вся логика чата см. рис. 6.
Рис. 6. Компонент Chat
Компонент Chat импортирует стили из предустановленного пакета Ionic, а также установленные
раннее компоненты из «stream-chat-react», а впоследствии их рендерит. В конечном итоге необходимо
создать компонент с именем withSession.js для пользователей, которые не авторизовались см. рис.7.
Рис. 7. Компонент withSession
Для запуска самого приложение React необходимо воспользоваться следующей командой из корневого каталога: $ yarn start. Симулятор iOS должен запуститься с установленным приложением, и должен отобразиться экран входа см. рис 8. Если войти под своим именем и адресом электронной почты,
отобразиться экран чата. Вся информация будет храниться только в локальном хранилище см. рис. 9.