Статический веб-сайт: на статических веб-сайтах сервер возвращает веб-страницы, которые
представляют собой предварительно созданные файлы исходного кода, созданные с использованием
простых языков, таких как HTML, CSS или JavaScript. На статических веб-сайтах обработка контента на
сервере (по словам пользователя) не производится. Веб-страницы возвращаются сервером без изменений, поэтому статические веб-сайты работают быстро. Нет взаимодействия с БД.
Если главная цель заключается в том, чтобы веб-сайт стал визитной карточкой, тогда такого варианта веб-сайта достаточно. HTML-документы с необходимой информацией создаются и хранятся под
собственным URL-адресом на веб-сервере. Когда пользователь вводит веб-адрес, ему предоставляется
статический HTML-документ, который выглядит так же, как хранящиеся на сервере. Но когда веб-сайту
необходимо добавлять новую информацию, то изменения вносятся вручную в HTML-код каждой отдельной под страницы веб-проекта. В случае динамических веб-сайтов внесение данных собственноручно
можно избежать, так как веб-сервер заново генерирует веб-сайты каждый раз, когда они вызываются.
Вместо того, чтобы постоянно выдавать статические HTML-страницы без изменений, сервер автоматически корректирует содержимое страницы в соответствии с последним обновлением.
Динамический веб-сайт основан на строгом разделении контента и макета. Оба аспекта собираются при входе на сайт в браузере. Поэтому динамические веб-сайты требуют более высокопроизводительных серверов, чем статические веб-сайты, а также базы данных, такой как MySQL, с
помощью которой сервер может управлять элементами веб-сайта. Как правило, динамические вебсайты полагаются на заранее определенные макеты и шаблоны дизайна, которые наполнены соответствующим контентом. Из-за своей гибкости динамические веб-сайты являются более предпочтительными. Динамические веб-сайты используются поверх статических веб-сайтов, поскольку обновления
могут быть выполнены очень легко в сравнении со статическими веб-сайтами (где требуется изменение каждой страницы), но на динамических веб-сайтах можно сделать общее изменение один раз, и
оно будет отражено во всей сети страницы.
Статический веб-сайт не значит, что он не будет откликаться на действия пользователя сети.
Они называются статическими, потому что с ними нельзя взаимодействовать на сервере или взаимодействовать с БД (как с динамическими веб-сайтами).
Плюсы статического веб-сайта: статические сайты недороги в обслуживании. HTML-документы
создаются 1 раз и остаются без изменений. Если статический веб-сайт используется для предоставления вневременной информации, то он будет требовать меньше обслуживания, чем динамический. Статические веб-сайты работают быстрее, так как веб-сайты загружаются сервером без каких-либо изменений. Статические веб-сайты обычно дешевле размещать, потому что у сервера нет дополнительных
требований, кроме варианта хранения. Недостатки: неактульную информацию заменяют вручную на
HTML-страницах статического веб-сайта, что требует больших усилий. Это требует соответствующих
знаний в области программирования. Также необходима ПО FTP для передачи HTML-документов на
веб-сервер.
В настоящее время сложно представить жизнь без интернета, ведь с момен-та появления
всемирной паутины интернет стремительно развивается и всё большее количество людей используют
данный ресурс. И, разумеется, уве-личивается число желающих научиться создавать их.
Веб-сайты – являются центральным элементом сети интернет. Центральная страница веб-сайта
называется домашней страницей.
Веб-сайт – это набор веб-страниц (рис.1). Веб-страница содержит информацию любого формата,
таких как анимация, текст, цвет, графика и звук [1].
Плюсы динамического сайта: динамические веб-сайты более гибкие в своей эксплуатации. Из-за
чёткого деления веб-содержимого и макета, изменения содержимого могут вноситься пользователями
сети без необходимых технических знаний в области программирования. Текстовый редактор обычно
доступен. Динамические веб-сайты также имеют преимущество – они могут реагировать на ввод пользователя. Недостатки: для разработки динамического веб-сайта необходима система управления (CMS
или система интернет-магазина). Кроме базовых знаний HTML, для настройки системы также потребуется язык программирования, таких как Perl или PHP. Сервер, на котором размещена система, должен
иметь БД (рис.2). В зависимости от размера проекта динамическим веб-сайтам необходимо большее
количество ресурсов сервера, чем проектам статических веб-сайтов [2].