В настоящий момент к учебным языкам программирования относятся
языки программирования высокого уровня Паскаль (PascalABC) и С++. Именно
эти языки учитываются при составлении заданий единого государственного
экзамена. Методики изучения основ программирования в рамках средней
школы с использованием этих языков описаны и проработаны.
Однако в современном мире разработчиков набирает популярность язык
программирования Python. Это простой и лаконичный язык программирования,
возможности которого позволяют создавать приложения любой сложности. С
другой стороны, Python обладает всеми возможностями указанных выше
устоявшихся языков, им пользуются для разработки программных продуктов
такие корпорации как Google, IBM, NASA, Xerox и др. Все больше учащихся
интересуются этим языком. Проведем сравнительный анализ основных
вопросов методики изучения языков программирования в школьном курсе
информатики.
Стандартный план изучения части алгоритмизации и программирования
школьного курса информатики включает последовательное изучение
следующих разделов: понятие переменной; имя, тип и значение переменной;
условные и циклические конструкции; типы данных, определяемые
пользователем (массивы) и подпрограммы (процедуры и функции).
Модель памяти для введения понятия переменной и сопутствующих ему
понятий в языке программирования С++ как и в языке программирования
Паскаль одинакова. Под переменной понимают поименованный участок
памяти, в котором хранится значение определенного типа. Другими словами,
переменная – это именованная область памяти для хранения данных, которые
могут изменяться в процессе выполнения программы. Переменная имеет свой
тип, идентификатор (то есть имя) и значение. Имена и типы переменных
150
указываются в разделе описаний и не могут изменяться в процессе выполнения
программы.Созданная переменная, пусть в ней даже ничего не хранится, в С++
и Паскаль уже занимает определенный объем оперативной памяти компьютера.
Этот объем, в свою очередь, зависит от типа переменной.
Таким образом, в обоих языках каждая используемая переменная должна
быть описана, а значит, занимает некоторый объем памяти, даже если не
используется.
Стоит указать, что язык программирования Python наследует синтаксис
от языка программирования С++.
В языке программирования Python переменная является простейшим
указателем на значение определенного типа. Поэтому переменная в Python
инициализируется присваиванием некоторому идентификатору значения при
помощи оператора присваивания.
Значительным отличием переменных в языке Python является то, что они
не занимают столько места в оперативной памяти компьютера. Тип
переменных в языке Python не объявляется, он определяется автоматически.
Переменные в Python похожи на переменные типа void (неопределенный) языка
С++, заданные в неявном виде. Единственное, за чем необходимо следить
программисту на Python, это преобразование к соответствующему типу.
Например, строка rent=input("Съем квартиры на Манхеттене:") позволяет
пользователю определить свое значение переменной rent. Однако, это значение
передается интерпретатором в программу как строка. Для преобразования
используется простая функция int():
rent=int(input("Съем квартиры на Манхеттене:")).
Итак, использование языка Python позволяет сократить время изучения
полного объема понятия переменной. Однако такая интерпретация понятия
переменной и отсутствия довольно сложной модели памяти в языке Python
позволяет упростить изучение таких понятий как локальные и глобальные
переменные в разделе Подпрограммы (процедуры и функции). Изучение этого
раздела не отличается никакими методическими особенностями в языке Python
от языков Паскаль и С++.
Эволюция языков программирования идет в направлении упрощения
конструкций и синтаксиса языка. Так операторные скобки begin…end в Паскале
заменяются на {…} – блоки в С++ и отступы от основной строки кода в Python.
Возвращаясь к плану изучения основ программирования, простейшей
конструкцией языка является условная конструкция, которая теоретически
делится на ветвление и конструкцию выбора. Такое деление остается в Паскале
и С++, однако обе эти разновидности условий совмещены в одной конструкции
в Python: if …else: или if …elif...
Изучение циклических конструкций в любом из рассматриваемых языков
начинается с цикла с известным числом повторений for. Особенности методики
изучения языка программирования состоят в том, что изучение этой
конструкции рассматривается на примерах строковых значений переменных.
При этом, учащиеся изучают приемы обращения со строками: нумерация
151
символов в строке справа налево и слева направо, склейки строк, выделения
символа в строке, работу со срезом строки и собственные функции работы со
строками.
Методически это оправдывается тем, что все приемы и некоторые
функции являются универсальными для всех остальных составных типов
данных (списков и словарей).
К типам данных, заданным пользователем, относятся массивы и
структуры. Самой распространенной структурой, реализованной во всех языках
программирования, является массив. Массивы состоят из ограниченного числа
компонент, причем все компоненты массива имеют один и тот же тип,
называемый базовым. По своей структуре массив однороден.
Массивы в Паскаль и С++ похожи тем, что требуют инициализации всех
используемых переменных и указания типов этих переменных, причем в С++
их можно описывать не только в начале программы, но и сразу в цикле. Также
требуется указывать точный диапазон использования элементов массива.
Классифицируются типы данных, заданных пользователем на
изменяемые и неизменяемые. К неизменяемым относятся кортежи, к
изменяемым – списки и словари. Кортеж используется для представления
неизменяемой последовательности разнородных объектов. Его элементы
записываются в круглых скобках.
В Python отсутствует понятие массива в традиционном понимании этого
термина. Вместо них для хранения однородных объектов используются списки.
Список представляет собой последовательность элементов, пронумерованных
от 0, как символы в строке. Список можно задать перечислением элементов в
квадратных скобках, в остальном стандартные действия с кортежами
правомерны и для списков.
Большим достоинством языка программирования Python является то, что
к его изменяемым структурам данных, то есть к спискам и словарям,
применяется определенный ряд методов. Среди них можно выделить
следующие: добавление элемента в конец последовательности, вывод
количества элементов, равных заданному значению, добавление к концу
последовательности другой последовательности, вставка элемента в
определенную позицию, возврат элемента с указанным номером и удаление его
из последовательности, смена порядка элементов на обратный и сортировка
элементов последовательности. Перечисленные методы реализуются и в языках
Паскаль и С++, только с помощью написания отдельного программного кода.
Итак, с точки зрения методики изучения основ программирования
выстраивается следующий план. Изучение понятия переменной как ссылки на
значение перетекает в изучение основных методов и функций работы со
строковыми данными, в ходе которого изучаются конструкции: условные
(ветвление и выбор) и цикл с известным числом повторений. На основе
изученных методов и конструкций рассматривается новая структура данных –
кортежи и новая конструкция – цикл «пока». Методика изучения кортежей
такова, что проверяется возможность применения строковых методов и
152
функций, а также рассматриваются новые возможности. Далее выясняются в
ходе практической работы недостатки кортежей и вводится новая структура –
списки. Далее изучение идет по плану изучения раздела Кортежей.
Описанный план изучения основ программирования был успешно
опробован в работе Школы юных программистов при ФГБОУ ВО «Брянский
государственный университет имени академика И.Г. Петровского» на учащихся
7-10 классов. Уже во второй половине учебного года учащиеся школы перешли
на проектное обучение и подошли к изучения основ объектноориентированного программирования.