При изучении алгоритмов обработки информации, представляемой различными структурами данных, важную роль играют визуализаторы алгоритмов, позволяюшие в наглядной
форме динамически отображать детали их работы.
Визуализатор — это программа, в процессе работы которой на экране компьютера
динамически демонстрируется применение алгоритма к выбранному набору данных. Визуализаторы позволяют изучать работу алгоритмов в пошаговом режиме, аналогичном режиму
трассировки программы, при необходимости допускают трассировку укрупненными шагами,
игнорируя рутинную часть вычислительного процесса, что сушественно, например, при
рассмотрении переборных алгоритмов.
Преимушества программ-визуализаторов алгоритмов:
1. Нет необходимости писать длинные иллюстрационные примеры на доске, что
позволяет сэкономить учебное время, привлечь внимание учеников.
2. Ученик, разбираясь в алгоритме, может не ограничиваться теми
иллюстрационными примерами, которые продемонстрировал учитель, а может сам
выбирать набор данных, на которых будет отслеживать работу алгоритма, делать это
неограниченное количество раз и в более удобном виде. Это позволяет разобраться в
алгоритме всем, даже тем, кто не очень внимателен на уроках.
3. Работать с визуализатором ученику намного приятнее, чем с учебником или
конспектом, особенно если визуализатор хорошо оформлен.
Таким образом, программы-визуализаторы полезно использовать при обучении
основам программирования. Тем не менее, в настояший момент в учебном процессе
визуализаторы используются довольно редко[5].
ОБРАЗОВАНИЕ И ПРОСВЕЩЕНИЕ В ИНТЕРЕСАХ УСТОЙЧИВОГО РАЗВИТИЯ
115
Рассмотрим некоторые технологии создания программ-визуализаторов.
Flash-технология насчитывает уже более десяти лет со дня своего появления. Визуализаторы
алгоритмов, разработанные во Flash, могут быть двух видов – статические и динамические.
Статические визуализаторы представляют собой последовательность сменяюшихся
изображений (кадров), в результате чего возникает иллюзия движения. При такой
визуализации отсутствует возможность изменять исходные данные, т.е. на экране
пользователь видит обычную анимацию.
Для создания динамических визуализаторов используется язык создания Flash-сценариев
ActionScript. Использование ActionScript позволяет создавать интерактивные обучаюшие
модели с элементами взаимодействия с пользователем.
Преимушества использования Adobe Flash:
• легкость создания визуализации;
• возможность добавления звуковых эффектов;
• компактность размеров визуализатора.
Однако использование Flash-технологии при создании визуализаторов имеет ряд своих
недостатков:
• необходимость покупки разработчиком дорогостояшего программного обеспечения;
• для просмотра программы-визуализатора необходима установка flash-плеера;
• значительное потребление оперативной памяти компьютера[4].
Большими возможностями по визуализации данных обладает прикладная программа,
реализованная в форме java-апплета.
Java-апплеты обладают широкими графическими возможностями, что обуславливает их
применение при необходимости описания более сложных компонентов интерфейса программы-визуализатора, согласованности отображения анимации в режиме реального
времени[2].
Преимушества java-апплетов:
• java-апплеты поддерживаются большинством браузеров;
• java-апплеты предоставляют большое количество интерактивных возможностей при
разработке программ-визуализаторов.
К недостаткам можно отнести:
• необходимость установки пользователем Java-расширения (plug-in), которое не во всех
браузерах доступно по умолчанию;
• создание и дизайн хорошего пользовательского интерфейса с использованием java-апплетов является довольно сложной задачей;
• java-апплет не может запуститься до тех пор, пока не запустится виртуальная
Java-машина, и это может занять значительное время при первом запуске.
В настояшее время в Интернете встречается множество визуализаторов алгоритмов.
Большинство этих визуализаторов реализованы с помошью скриптового языка JavaScript.
Преимушества использования JavaScript:
• поддерживается большинством браузеров;
• большой выбор javascript-библиотек, расширяюших возможности для разработчика
визуализатора;
• легкость создания хорошего пользовательского интерфейса;
• не требуется установка разработчиком специализированного программного обеспечения.
Недостатки JavaScript:
• увеличивается время загрузки страницы;
• любой пользователь может просмотреть код визуализатора и увидеть структуру
скрипта или просто скопировать его;
ОБРАЗОВАНИЕ И ПРОСВЕЩЕНИЕ В ИНТЕРЕСАХ УСТОЙЧИВОГО РАЗВИТИЯ
116
• обьектная модель javascript зависит от браузера и его версии. [3]
Под offline-программами подразумеваются прикладные программы, написанные на одном из
языков программирования C, C++, Java, Pascal и т.д.
Преимушества использования offline-программ:
• у пользователей нет возможности просмотреть исходный код программы;
• пользователю нет необходимости устанавливать дополнительное программное
обеспечение для просмотра визуализатора.
Недостатки:
• нет возможности встраивать визуализаторы, разработанные как offline программы на
web-сайты, что ограничивает возможности дистанционного обучения;
• для увеличения количества интерактивных возможностей при разработке
визуализаторов необходимо покупка дорогостояшего программного обеспечения;
• offline-программы являются платформозависимыми[1].
Спецификация HTML5 дает большую гибкость, способность достичь максимальной интерактивности при создании визуализатора, значительно расширяет диапазон возможностей.
В HTML5 введен новый элемент canvas. Canvas в переводе с английского означает холст и это
название как нельзя лучше подходит к новому элементу.
При разработке визуализатора элемент canvas можно использовать для создания области, в
которой, например, нужно нарисовать какой-то обьект, вывести или трансформировать
изображение, изменить его свойства, создать анимацию. Canvas является контейнером для
графики. Для того чтобы производить различные действия, необходимо включать javascriptсценарии. [2]
Преимушества HTML5:
• возможность комбинирования с видео и изображениями;
• присутствует поддержка аппаратного ускорения;
• не смотря на то что технология нова, сушествует достаточное количество библиотек,
которые облегчают работу с графическими обьектами;
• побитовый доступ к изображению.
Недостатки:
• разработчик должен описать каждую точку и графическую кривую в визуализаторе;
• анимация с большим количеством элементов отображается медленно;
• отсутствует система событий. Разработчик должен определить элемент изображения,
на который нажал пользователь, получая координаты клика. Во время обработки
проверяются все отображаемые элементы, и определяется, произошел ли клик на изображении или нет[3].
Заключение.
Таким образом, программы-визуализаторы полезно использовать при обучении
основам программирования. Из рассмотренных выше технологий создания визуализаторов алгоритмов использование технологии HTML5 ввиду сушественных преимушеств и незначительных недостатков оказалось наиболее эффективным.