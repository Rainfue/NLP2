Язык JavaScript уверенно набирает популярность среди frontend-разработчиков. С помощью него можно
реализовывать интересные решения интерфейсов, создавать интерактивные и эргономичные сайты, а также
разрабатывать веб-приложения более просто и понятно.
Существует множество фреймворков, которые регулярно обновляются и совершенствуются. И выбрать
наиболее подходящий фреймворк оказывается нетривиальной задачей.
На начальном этапе создания проекта будет целесообразно произвести анализ, который поможет выбрать
подходящую технологию. Фреймворк — это платформа, определяющая структуру веб-приложения. Его
функционал позволяет осуществить взаимодействие веб-ресурса с сервером.
На веб-сайтах, которые написаны без использования фреймворка, первоначальный контент хранится на
сервере. Поэтому при загрузке нового материала на сайт требуется перезагрузка страницы. Преимуществом же
фреймворка являются неизменные блоки, которые сохраняются от одной конфигурации к другой. Это позволяет
добиваться мгновенной обратной связи с пользователем при добавлении нового контента.
Данный принцип можно наблюдать при создании одностраничных веб-приложений, электронной
коммерции, облачных сервисов и многих социальных сетей. Так, переход пользователя из одного раздела в другой
осуществляется мгновенно. Перегрузки страницы не происходит, так как неизменно остается каркас – постоянная
часть проекта.
Преимущества использования фреймворка:
? фреймворки являются полностью бесплатными и имеют открытый исходный код;
? использование встроенных шаблонов помогает создавать проекты более высокого качества, при этом
задействуется меньше строчек кода;
? высокая скорость разработки, которая достигается за счет открытого доступа к документации и
множества форумов.
За реализацией проектов на классическом JS и HTML скрывается много трудностей, что приводит к
появлению большого числа фреймворков на рынке. Но наиболее популярными среди веб-разработчиков остаются
Angular, React и Vue (рис.1).
Angular — это кроссплатформенный фреймворк, разработанный компанией Google. Он придерживается
строгой иерархии и представляет собой большую инфраструктуру для комплексных решений. Часть серверной
службы фреймворка переносится на клиентскую сторону, что уменьшает нагрузку на сервер [1].
Благодаря строгой типизации языка TypeScript, который используется на Angular, разработка становится
удобнее и проще для понимания. При компиляции код переводится в JavaScript, то есть TS необходим только на
этапе разработки.
К дополнительным преимуществам Angular следует отнести:
? доступную документацию;
? мощные инструменты для разработки;
? поддержку сообщества;
? актуальность;
? стабильность.
Слабой стороной фреймворка является высокий порог вхождения, поскольку нужно быть знакомым с
подмножеством языка JS – TypeScript (рис.2). 
Другой проблемой становится регулярный выход новых версий – в 2020 году был представлен Angular 9 [2].
То есть необходимо систематически совершенствовать знания для работы с данным фреймворком. Также за
большие возможности, предусмотренные в Angular, приходится платить нагрузкой на производительность. 
React – это библиотека функций с открытым исходным кодом, которая используется для разработки
пользовательских интерфейсов [3]. Стоит отметить, что данный инструмент будет считаться полноценным
фреймворком лишь с подключением сторонних JavaScript библиотек.
Сильные стороны React:
? поддержка Facebook;
? высокая скорость работы;
? большое community;
? кроссплатформенность;
? разработка UI на основе отдельных компонентов;
? технология Virtual DOM (высокая производительность).
Однако необходимость в сторонних библиотеках для работы делает процесс разработки запутаннее.
Отсутствуют стандарты в написании кода на HTML и CSS, что есть у его конкурентов – Angular и Vue.JS.
Приходится прибегать к дополнительным плагинам, поскольку не все стандартные браузеры поддерживают этот
фреймворк [4].
Имеется доступ к управлению низкоуровневым функционалом, но для новичков это скорее минус. Поэтому
React подходит для более опытных разработчиков.
Vue.js — это прогрессивный JavaScript фреймворк с открытым исходным кодом, который может
использоваться и как библиотека. Он прост в освоении, в отличие от вышеупомянутых фреймворков, при этом по
производительности не уступает React.
Примечательно то, что за созданием данного инструмента стоит всего один талантливый разработчик – Эван
Ю. Из-за чего большими корпорациями данный инструмент воспринимается с долей скептицизма. Тем не менее
Vue.js пользуется спросом среди китайских компаний, в частности всем известная Xiaomi.
Данный фреймворк преимущественно отвечает за представление, тем самым позволяя упростить
взаимодействие с другими проектами и библиотеками. Кроме того, Vue.js больше подходит для небольших
проектов [6].
Сильные стороны:
? скорость;
? небольшой вес;
? лаконичность;
? приверженность стандартам HTML, CSS;
? поддержка TS, JSX;
? низкий порог входа.
Слабыми местами являются недостаточно большое community и отсутствие структуры. Однако репутация
Vue.js со временем растет.
Все чаще для создания современных веб-проектов разработчики прибегают к использованию JavaScript
фреймворков. Прежде чем сделать выбор в пользу одного из фреймворков, необходимо уточнить требования,
проанализировать преимущества каждого из инструментов.
Существуют ключевые факторы, помогающие выбрать наиболее подходящую технологию:
Если в проекте имеются такие технологии, как TypeScript или JSX, то стоит остановиться на Angular и React.
Однако для проекта, который пишется с нуля или изменяется, однозначно подходит Vue.js без ущерба
производительности.
Все рассмотренные выше фреймворки являются популярными среди frontend-разработчиков и продолжают
развиваться, уверенно занимая ведущие места на рынке веб-разработки. Из графика можно заметить, что на
данный момент по популярности Vue вырвался вперед, немного опережая React.