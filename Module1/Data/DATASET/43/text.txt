При построении современных распределенных компьютерных 
систем широко используется сервис-ориентированная архитектура (СОА). Для практической реализации систем с СОА применяют технологии Web-сервисов (Web-служб) [1–3.
Web-сервисы предоставляют Web-услуги в рамках слабосвязанных Webприложений. К таким услугам, в частности, относятся услуги доступа к информации, 
которая хранится в базах данных (БД), созданных и поддерживаемых определенной системой управления БД (СУБД). При этом для доступа к данным используют запросы к 
соответствующей СУБД, которые, как правило, реализуют на структурированном языке запросов (Structured Query Language – SQL) в виде команд SQL.
В тоже время для повышения эффективности работы Web-приложений, которые работают с данными, вместо команд SQL применяют хранимые процедуры и функции 
СУБД 4.
В соответствии с 4 их использование, в частности, позволяет:
 Обеспечить дополнительную защиту данных СУБД.
 Минимизировать изменения кода приложения при изменении структуры БД.
 Уменьшить сетевой трафик, обусловленный обменом информации с сервером СУБД.
 Инкапсулировать логику работы с данными.
 Повысить транспортабельность приложений для работы с СУБД.
Однако при использовании хранимых процедур и функций может измениться производительность Web-приложений, работающих с информацией.
В тоже время одним из основных требований, предъявляемых к Web-сервисам, является оперативность предоставления Web-услуг, которая зависит от того, каким образом сервис программно реализуется 5; 6.
В этой связи актуальной является задача выбора оптимального программного обеспечения для реализации информационного Web-сервиса, которая тесно связана с задачей 
выбора или разработки программы-тестера, определяющей его производительность [6].
Анализ последних исследований и публикаций. Язык программирования РНР 
широко применяется для разработки распределенных приложений. При этом программные средства PHP являются эффективной платформой для СОА. С ее помощью 
разрабатываются Web-cервисы, поддерживающие различные протоколы и технологии 
[7]. В частности, cлужбы на основе РНР и протокола SOAP, которые предоставляют 
Web-услуги в виде XML-сообщений.
Современные распределенные приложения с СОА широко используют RESTful Webсервисы 7; 8, которые представляют удаленные ресурсы с помощью HTTP-протокола.
К отдаленным ресурсам, можно отнести и отдельные записи, которые хранятся в БД 
и являются доступными для сервиса. В тоже время, данные таких БД, клиент RESTful 
Web-сервиса может получать, добавлять, изменять и удалять, используя для этого 
HTTP-методы GET, PUT, POST и DELETE, соответственно, при обращении Web–
приложения к СУБД.
Платформа РНР имеет интерфейс программирования приложений достаточный для 
разработки RESTful Web-сервисов. Особенности их реализации на основе РНР API рассматриваются в [7; 8].
Web-сервисы, широко используются для доступа к информации, которая хранится в БД 
СУБД, размещенных на Web-узлах. При этом в соответствии с [9] запросы к СУБД на поиск в данных являются наиболее важным типом запросов к информационному Web-узлу.
Как известно, к наиболее распространенным и производительным СУБД, которые 
распространяют на условиях открытых исходных кодов, относят MySQL [10]. При 
этом, при работе с данными MySQL применяют как команды SQL, так и хранимые 
процедуры [10].
Особенности производительности XML-RPC РНР Web-сервисов, использующих 
при поиске в различных объемах данных MySQL команды SQL, были изучены нами 
ранее в работе 6. В тоже время подобных исследований для RESTful и SOAP РНР 
Web-сервисов не было проведено.
Кроме того не было проведено исследований производительности RESTful и SOAP 
РНР сервисов при доступе к данным MySQL с применением хранимых процедур.
Цель статьи. Цель данной работы - исследовать особенности производительности 
RESTful и SOAP РНР Web-сервисов, которые используют команды SQL и функционально подобные хранимые процедуры при поиске в данных MySQL, для выбора оптимального программного обеспечения Web-служб, работающих с СУБД MySQL. При 
этом для определения производительности сервисов предполагалось также разработать 
программу-тестер с простым интерфейсом пользователя.
Изложение основного материала. Для решения поставленной задачи было создано 
два варианта распределенных приложений, которые в своем составе имели одинаковую 
клиентскую часть (программа-тестер), и функционально подобные Web-сервисы 
(RESTful и SOAP), разработанные на основе PHP API.
Также были подготовлены объекты исследования – 7 таблиц (Data1 – Data7) БД СУБД 
MySQL, которые имели тип MyISAM. Как известно, БД MySQL с таблицами MyISAM 
обеспечивают высокую производительность операций поиска и чтения данных [11].
Кроме того, объекты исследования Data1 – Data7 имели одинаковую структуру полей (два поля – ключевое и данных), но разный объем хранимой информации V , в которой осуществлялся поиск (от 200 КБайт до 2 Мбайт, шаг – 300 КБайт).
Для определения и анализа производительности RESTful и SOAP PHP Webсервисов мы определяли их время отклика  (время, которое затрачивает сервис на 
выполнение запроса пользователя).
Согласно [9], для определения  можно использовать выражение:     t , где  –
полное время выполнения запроса в распределенном приложении; t – время обдумывания пользователя (среднее время, которое проходит между получением пользователем ответа на свой запрос и отправлением нового запроса).
Определение времени отклика  Web-сервисов осуществлялось нами с помощью 
компактной программы-тестера STochno, разработанной для решения поставленной в 
данной работе задачи. С этой целью она получала значения  и t , при последовательном выполнении распределенным приложением двух подобных алгоритмов.
Первый из них состоял из такой последовательности действий:
1.В клиентском приложении зафиксировать время начала работы распределенного 
приложения.
2.Выполнить пп. 3–8 определенное число раз (значение числа определяет пользователь).
3.Сформировать параметры запроса к Web-сервису.
4.Отправить из клиентского приложения запрос.
5.В программной реализации Web-сервиса получить параметры запроса клиента.
6.С помощью команды SQL или хранимой процедуры выполнить запрос к СУБД на 
поиск в данных с использованием параметров из п. 3.
7.Отправить результат поиска клиенту.
8.Получить в клиентском приложении результат поиска в данных.
9. Зафиксировать время.
10. Определить время работы распределенного приложения и сохранить его значение.
Второй алгоритм представлял собой сокращенную версию первого (без выполнения 
пп. 4–8).
При этом запрос к каждому сервису состоял из имени таблицы данных БД MySQL, 
параметра поиска в ней, который в ходе эксперимента менял значение случайным образом от 1 до максимально возможного для каждого объекта исследования, а также указателя на тип обращения к СУБД (команда SQL или хранимая процедура).
Программа-тестер была написана на языке программирования JavaТМ и имела простой интерфейс пользователя.
Он состоял из пяти полей ввода, трех кнопок, комбинированного списка, двух переключателей, а также трех таблиц, которые использовались аналогичным образом при 
работе, как с RESTful, так и SOAP Web-сервисом.
В тоже время программное обеспечение, использованное в данной работе, представляло собой последние версии соответствующих программных продуктов (на момент написания статьи). Оно содержало: пакет PHP 7.1.3, сервер Apache 2.4.25 и СУБД MySQL-5.7.17.
Приложения работали на персональном компьютере, частота центрального процессора которого была равна 1,2 ГГц, а объем оперативной памяти имел значение 8 ГБайт.
При подготовке к проведению исследований производительности разработанных 
приложений на сервер Apache устанавливались RESTful и SOAP Web-сервисы. Сервисы осуществляли поиск в таблицах Data1 – Data7.
В ходе измерений в программе STochno в списке “Service” выбирался тип Webсервиса (RESTful или SOAP), а переключателями “SQL” и “Procedure”, устанавливался 
тип запроса к данным СУБД, после чего формировалась таблица “Request” с именами
объектов исследования, а также максимальными значениями параметров поиска в них. 
С этой целью использовались поля ввода “Table” и ”Max”, а также кнопка “Enter” интерфейса пользователя. Затем в поля ввода “URI” и “Reapet” вводились URI Webсервиса и число его обращений N к каждой таблице при поиске в их данных, соответственно. В наших исследованиях N =2000.
Запуск тестирования осуществлялся нажатием на кнопку “Run” программы-тестера.
В процессе тестирования распределенное приложение работало с данными таблиц 
Data1 – Data7. При этом программа-тестер определяла значения полного времени выполнения запроса , времени обдумывания пользователя t , при формировании запроса, а также времени отклика  Web-сервиса при поиске в данных. После чего в таблице 
“Times” приложения STochno появлялась информация о  , t и , а в таблице “Data”, 
значение результата выполнения последнего запроса, при поиске в данных MySQL, для 
каждого объекта исследования.
С помощью кнопки “Save” результаты тестирования и его параметры сохранялись в 
текстовом файле. Имя файла для хранения данных предварительно вводилось в поле 
ввода “File”.
На рис. 1 и 2 треугольниками представлены значения  , полученные при тестировании RESTful и SOAP РНР Web-cервисов. Черные треугольники – экспериментальные 
результаты для SOAP, белые – RESTful сервиса.
Как видно из этих рисунков, время отклика Web-сервисов, при поиске в данных
MySQL с использованием, как команд SQL, так и хранимых процедур, возрастало при 
увеличении V . При этом, во всех рассматриваемых случаях, при десятикратном увеличении объема данных поиска, значения  возрастали на величину  910-3
с.
В тоже время экспериментальные значения времени отклика для SOAP сервиса превышали данные по  для RESTful сервиса, полученные при тех же объемах V и поиске с помощью как команд SQL, так и хранимых процедур, в среднем на 410-3 с и 510-3 
с, соответственно.
Кроме того, использование разработанными программами хранимых процедур,
вместо соответствующих команд SQL, приводило к росту  на 210-3
с для SOAP Webприложения и на 10-3
с для RESTful Web-службы.
Для этих целей была использована дополнительная компьютерная программа, написанная нами на языке программирования Java. Программа реализовывала метод наименьших квадратов [12] и позволяла, в частности, определять коэффициенты линейной регрессии и среднюю ошибку аппроксимации экспериментальных значений времени отклика.
При этом предполагалось, что время отклика  , для Web-сервисов при поиске в данных MySQL, может быть представлено в виде зависимости:   k V b , где k и b –
постоянные коэффициенты.
Как выяснилось, при обработке результатов тестирования Web-сервисов с помощью 
метода наименьших квадратов, для всех исследованных режимов их функционирования, средняя ошибка аппроксимации экспериментальных значений времени отклика 
имела величину порядка 1,5 %. При этом у функций регрессии  V  были положительные коэффициенты.
Зависимости  V , полученные в результате аппроксимации данных эксперимента, 
также приведены на рис. 1 и 2.
В тоже время, как приведенные на рис. 1 и 2 экспериментальные значения  , так и 
зависимости  V , полученные в результате их математической аппроксимации, указывают на то, что производительность RESTful Web-сервиса при поиске в данных MySQL 
с объемом V  2,0 МБайт, была выше, чем у SOAP Web-службы, для всех исследованных режимов их функционирования.
Выводы и предложения. Таким образом, в данной работе нами был выполнен анализ производительности RESTful и SOAP РНР Web-сервисов, которые при поиске в 
данных MySQL в одном режиме функционирования использовали команды SQL, в другом – хранимые процедуры.
Как выяснилось, время отклика сервисов  зависит от объема данных поиска V и, 
при V  2.0 Мбайт, для всех исследованных случаев удовлетворительно описывается 
линейными функциями  V  с положительными коэффициентами.
При этом применение в запросах к MySQL хранимых процедур, вместо команд 
SQL, увеличивало значение времени отклика разработанных приложений и снижало их 
производительность.
В тоже время, при поиске в исследованных объемах данных V , с использованием 
при запросах к MySQL, как команд SQL, так и хранимых процедур, RESTful Webсервис был более производительным, чем сервис на основе SOAP.
То есть для создания производительных РНР Web-сервисов для работы с данными 
MySQL целесообразно применять их реализацию на основе RESTful-технологии.
В дальнейшем предполагается провести подобные исследования с другими Webсерверами и СУБД. Кроме того, предполагается модернизировать разработанную программу-тестер для измерения производительности Web-сервисов при масштабируемых 
запросах.