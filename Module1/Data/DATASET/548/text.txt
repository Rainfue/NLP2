React – библиотека JavaScript для создания одностраничных приложений. Существует множество вспомогательных инструментов у данной технологии. Одни из популярных:
 google Chart Tools API;
 axios;
Google Charts – это бесплатный, современный и активно поддерживаемый сервис построения
графиков на JavaScript от Google, который эффективен и прост в использовании проектов. Google
Charts включает в себя обширный набор параметров настройки, а также богатую галерею диаграмм с
множеством вариантов на выбор, от простых линейных графиков до более сложных иерархических
древовидных карт. Данный инструмент включает в себя несколько типов диаграмм, например, присутствуют диаграммы Ганта, которые трудно найти в других схожих библиотеках.
Google Charts совместим со многими устройствами, в отличие от некоторых других библиотек,
которые не так щедры в этом отношении. Этот продукт поддерживает кроссбраузерность и кроссплатформенность, а это означает, что графики хорошо выглядят как на компьютере, так и на мобильных
устройствах. Google Charts использует HTML и SVG, поэтому никаких дополнительных плагинов не
требуется.
54 АКТУАЛЬНЫЕ ВОПРОСЫ СОВРЕМЕННОЙ НАУКИ И ОБРАЗОВАНИЯ
XXII международная научно-практическая конференция | МЦНС «НАУКА И ПРОСВЕЩЕНИЕ»
Размер Google Charts в минимизированном и сжатом формате составляет 43 КБ, что является
небольшим по сравнению с другими библиотеками диаграмм, такими как Chart.js, который на момент
написания данной публикации составляет 117 КБ.
Лучший вариант использования Google Charts – это когда есть желание быстро настроить визуализацию на веб-сайте без необходимости добавлять множество настроек.
Пакет react-google-charts – это современная, хорошо поддерживаемая, тонкая, типизированная
оболочка React для Google Charts, которая позволяет разработчикам очень легко использовать React с
Google Charts.
Чтобы увидеть Google Charts в действии, можно создать простую диаграмму. Во-первых, добавим новый файл с именем charts.js в каталоге src, где будут визуализироваться данные.
В данном файле пропишем код для круговой диаграммы (листинг 1).
import {Chart} from "react-google-charts"
export const info = [
 ["Задачи", "Потраченные часы"],
 ["Кодирование", 11],
 ["Дизайн", 2],
 ["Настройка среды", 2],
 ["Тестирование", 2],
 ["Планирование", 7],];
export const options = {title: "Создание приложения",};
const charts = () => {
 return (<Chart
 chartType="PieChart"
 data={info}
 options={options}
 width={"80%"}
 height={"325px"} /> )}
export default charts
Лист. 1. Код для диаграммы
Сначала импортируем react-google-charts и получаем свойство Chart. Затем создаем переменную, в которой будут храниться данные, отображаемые на круговой диаграмме.
С помощью <Chart/> можно передать параметры для обновления данных, отображаемых на диаграмме, а также изменить её внешний вид. Свойство chartType позволяет изменить тип отображаемой
диаграммы. Следовательно, если бы вместо того, что указано в коде, передавался Barchart, отобразилась бы гистограмма.
Переменная data принимает данные диаграммы, а options принимает объект, который можно дополнительно настроить. И как следует из их соответствующих названий, ширина и высота изменяют
размеры диаграммы.
Результат примера можно увидеть на рисунке 1.
Диаграмма очень интерактивна, и ее легко создать, написав всего несколько строк кода. Этот
пример охватывает только базовый вариант быстрого создания и отображения диаграммы.
Следующей важной библиотекой является axios. Это клиентская библиотека HTTP, которая позволяет отправлять запросы, используя эндпоинты, то есть конечные точки.
Существует множество различных библиотек, которые можно использовать для выполнения
HTTP-запросов, но у axios есть ряд преимуществ:
 имеются хорошие настройки по умолчанию для работы с данными JSON (JavaScript Object
Notation), то есть со структурой, которая основана на языке JavaScript и представляет из себя пару в виде
ключа и значения. В отличие от альтернатив, таких как Fetch API, не нужно часто устанавливать свои
заголовки. Или выполнять утомительные задачи, такие как преобразование тела запроса в строку JSON;
АКТУАЛЬНЫЕ ВОПРОСЫ СОВРЕМЕННОЙ НАУКИ И ОБРАЗОВАНИЯ 55
XXII International scientific conference | www.naukaip.ru
 axios имеет имена функций, которые соответствуют любым методам HTTP. Чтобы
выполнить запрос GET, используется метод .get();
 axios делает больше с меньшим количеством кода. В отличие от Fetch API, нужен только
один обратный вызов .then() для доступа к запрошенным данным JSON;
 axios имеет лучшую обработку ошибок. Он выдает ошибки диапазона 400 и 500. В отличие
от Fetch API, где необходимо проверить код состояния и выдать ошибку самостоятельно;
 axios можно использовать как на сервере, так и на клиенте.
Рис. 1. Диаграмма Google Charts
Таким образом, axios является одним из лучших решений для связи с серверной частью вебприложения.
С