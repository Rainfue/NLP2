Ни для кого не секрет, что Minecraft является самой популярной игрой 
всех школьников и студентов. Данная игра набирает более девяносто 
миллионов игроков по всему миру. Видеоигра представляет жанр виртуальной 
песочницы (sandbox) и разработана шведским программистом Маркусом 
Перссоном в 2009 году. После того как Minecraft обрел популярность многие 
общественные деятели задумались о том, возможно ли применение данной 
игры в других сферах? В 2010 году студент педагогического курса Сантери 
Койвсито предложил объединить игры и образование, и его выбор пал на 
Minecraft. 
Данную коллабарацию в последствии стали называть «геймификацией» 
в образовании. Но как же всё-таки применить Minecraft в образовании?
Для начала нам необходимо создать свой сервер для запуска игры. 
В Minecraft существует application programming interface (API), т.е. 
программный интерфейс приложения. Благодаря этому интерфейсу, после 
того как вы запускаете собственный сервер, можно запрограммировать 
игровой мир с помощью языке Python или Java. [1]
Сперва необходимо сделать базовые настройки сервера, для этого 
используется однопроцессорный экземпляр выделенного сервера Digital
Ocean объёмом 2 Гб, которого будет вполне достаточно с операционной 
системой Ubuntu 20.04, но нельзя забывать, что существуют и наиболее 
дешёвые хостинг-провайдеры. [2]
Сначала базовая настройка сервиса производится от имени пользователя 
root:
apt-get update
apt-get update
adduser <your-username>
usermod –aG sudo <your-username>
Затем необходимо поместить свой ssh-ключ в /home/<yourusername>/.ssh/authorized-keys, после чего необходимо дать своему 
пользователю разрешение использовать права супер-пользователя (sudo) без 
пароля: sudo visduo и добавить NOPASSWD: в группу sudo, по итогу это 
должно выглядеть так:
% sudo ALL = (ВСЕ: ВСЕ) NOPASSWD
Так же важно убедиться в том, что у вас получится войти в систему как 
пользователь, которого вы только что создали. Если всё работает, то 
необходимо отредактировать конфигурационный файл /etc/ssh/ssdh_config, это 
делается для того что бы отключить вход в систему с правами пользователя 
root, но не забудьте убедиться, что аунтификация по паролю тоже уже 
отключена. [3]
Теперь необходимо открыть порт, которого будет «просушивать» 
соединение от Mincraft и включить брандмауэр:
ufw allow 25565
ufw enable
Затем добавим API, с поднятым портом 4711. Это делается для того, 
чтобы никто не мог вносить изменения в Ваш код.[4]
Так как Minecraft это Java, то для обеспечения работы сервера и самой 
игры необходимо установить инструменты разработчика – OpenJDK: 
sudo apt install openjdk-17-jre-headless
Альтернативой официального классического сервера Mainecraft
является Paper MC, он поддерживает большее количество плагинов и является 
более быстрым по сравнению с официальным сервером. [5] После загрузки 
Paper MC JAR необходимо создать каталог и скопировать представленный 
ниже код туда:
mkdir minecraft-server
Теперь мы можем запустить сервер:
/usr/bin/java-Xmx1536M-Xms1536M-jar Paper<version>.jar nogui
После чего потребуется отрегулировать значения Xmx и Xms исходя из 
объёмов оперативной памяти.
Далее вернёмся к API. Наш API будет состоять из двух частей. Первая 
часть – это серверная часть, а вторая часть – библиотека Python. Первая часть 
называется Raspberry Juce. С GitHub загружаем последнюю версию JAR. 
Клиентской частью будет mcpi. 
Перед тем как продолжить необходимо удостовериться, что у Вас уже 
установлен менеджер пакетов pip Python, а уже после этого устанавливаем 
библиотеку:
sudo apt install pip3
pip3 instal mcpi
Теперь снова запускаем сервер. RaspberryJuice должен самостоятельно 
создать свой каталог. [6]
Если мы берём специальную версию для Raspberry PI, то координаты 
там относятся к точке возникновения игрока, что используется RaspberryJucie
по умолчанию. На официальном сервере эти координаты считаются 
абсолютными, поэтому, чтобы API соответствовал нашим данным 
необходимо отредактировать это [7]:
minecraft-server/plugins/RaspberryJuice/config.yml
Кроме того, изменим местоположения для чтения файлов:
location: ABSOLUTE
Теперь всё готово для запуска и игры. Однако, чтобы не просто играть, а 
ещё и учиться запустим специальный мод под названием «Час кода: побег из 
поместья». Приведем суть игровой модификации. Вы с помощью 
программирования и алгоритмов должны раскрыть все секреты замка, а также 
открыть все «потайные люки» и найти скрытые подсказки, и всё это делается 
для того, чтобы сбежать из таинственного особняка. [8]
Игра начинается за пределами поместья, где все игроки встречаются с 
Доджем Бураковски, который является доктором и просит игроков подойти к 
особняку. При приближении к входной двери особняка игроков затянет в дом, 
и они окажутся на чердаке. На этом этапе игроки будут выполнять важные 
задания с помощью интерактивных внутриигровых действий:
 Найдите потерянный дневник: Игроки будут приведены к 
потерянному дневнику. Дневник будет размещен в их горячей панели.
В дневнике они также найдут свою первую запись в дневнике. Первая запись 
в дневнике посвящена чердаку. Игроки также будут нести ответственность за 
попытки найти дополнительные потерянные записи в дневнике на 
протяжении всей игры. Всего в дневнике десять страниц.
 Спасите агента: Сразу после обнаружения потерянного дневника 
игрокам будет дано указание расследовать шум, доносящийся с пола! Они 
обнаружат Агента и встретятся с ним. Агенту понадобится их помощь —
игрокам нужно будет спасти Агента из-под люка. В качестве награды за 
помощь Агенту, Агент откроет дверь, чтобы открыть зеленую дорожку. 
Требуется дополнительное действие по кодированию, чтобы разблокировать 
желтый путь; а затем требуется другое. [9]
 Выберите свой путь: Как только двери будут разблокированы, у 
игроков будет возможность выбрать один путь, который поможет им сбежать 
из особняка. Все пути будут иметь уникальные комнаты; некоторые комнаты 
будут только действие по кодированию, чтобы разблокировать красный путь, 
увиденный / испытанный на опыте, если игроки выберут этот конкретный 
путь. 
 Подобного рода загадки является частью процесса обучения и 
обеспечивают новизну и вовлеченность для обучающихся. Кроме того, они 
всегда могут вернуться в игру, чтобы попробовать и другие способы решения. 
Теперь приведём описание игрового сценария «Пути в поместье».
Пути в пределах поместья побега
Все игроки начнут с Чердака (комната 1) и закончат в Гостиной 
(комната 4). План игровой локации представлен в таблице 1.
После завершения последней кодирующей головоломки в Гостиной 
(комната 4) начнется финальная сцена. При внезапном повороте событий 
игроки узнают тайну поместья. Игрокам нужно будет решить дополнительные 
четыре головоломки с кодированием в боковых комнатах, чтобы 
подготовиться к эпической битве с боссом, чтобы уничтожить злодея. 
Наконец, игроки завершат две дополнительные головоломки с кодированием, 
чтобы официально уничтожить злодея, спасти положение и получают 
награду.[10]
В заключении можно сказать, что использование Minecraft Education 
Edition – это отличный способ заинтересовать детей в программировании и 
обучить их основам языка кода. Благодаря популярности игры, дети могут 
легко с ней справиться и познакомиться с программированием в игровой 
форме. К тому же, Minecraft Education Edition имеет множество готовых 
уроков и модулей, что упрощает задачу учителям и родителям, которые хотят 
обучать детей программированию. 
Однако, не стоит забывать, что Minecraft Education Edition – это всего 
лишь инструмент, который помогает детям узнать об основах 
программирования. Важно, чтобы дети не ограничивались только игрой, а 
активно изучали язык кода и практиковались в написании собственного кода. 
В итоге, использование Minecraft Education Edition – это только одна из
множества возможностей для обучения программированию, но, безусловно, 
одна из самых увлекательных и эффективных.