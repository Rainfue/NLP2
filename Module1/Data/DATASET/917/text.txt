В React.js есть все для создания веб и мобильных приложений. Это быстро, безопасно и масштабируемо. Это обеспечивает фантастический опыт пользователя и разработчика. Более того, его
популярность растет, так как его поддерживают Facebook и активное сообщество. Если вам интересно,
какую технологию выбрать для вашего проекта, React.js, вероятно, будет лучшим выбором.
React.js является доминирующей технологией JavaScript, которая становится все более популярной. Некоторые разработчики программного обеспечения предпочитают не называть это «фреймворком», поскольку он дает разработчикам гораздо больше свободы, чем Angular или Vue.
Так же, как Angular поддерживается Google, React.js поддерживается Facebook и сообществом
разработчиков. Оба с открытым исходным кодом и бесплатное использование под лицензией MIT.
React.js всего шесть лет, что делает его относительно новой технологией.
С помощью JavaScript вы можете создавать динамические приложения, в которых браузер выполняет значительную часть функций, поэтому они могут работать без обращения к серверу. Это также
НАУКА И ОБРАЗОВАНИЕ: СОХРАНЯЯ ПРОШЛОЕ, СОЗДАЁМ БУДУЩЕЕ 63
XXV International scientific conference | www.naukaip.ru
позволяет независимо обновлять данные и интерфейс только в части приложения (без перезагрузки).
React - это инструмент для создания как компонентов пользовательского интерфейса, так и для
целых пользовательских интерфейсов - всего, что касается объединения визуальных элементов, привязки данных к этим элементам и определения логики.
React.js можно использовать для создания пользовательских интерфейсов в JavaScript для разных
платформ. Вы можете использовать ReactDOM для веб-приложений, React Native для разработки мобильных приложений (разделяя большую часть кода между Android и iOS) и кросс-платформенные гибридные
настольные приложения с Electron. Недавно Microsoft также выпустила React Native для Windows.
Существует два возможных подхода к использованию современных JavaScript-фреймворков -
рендеринг на стороне клиента, когда браузер загружает код и отрисовывает пользовательский интерфейс, или рендеринг на стороне сервера, где рендеринг интерфейса выполняется на бэкэнде.
Разница между решениями JavaScript (такими как React.js) и старыми технологиями заключается
в том, что JS берет на себя гораздо больше логики и манипуляций с документами, как если бы он вообще не отображался на сервере.
Основной особенностью React.js, которая отличает его от других популярных JavaScriptфреймворков, является гибкость. Вы можете взять библиотеку и использовать ее для отображения
простой страницы или представления, но вы также можете комбинировать React.js с другими инструментами и использовать ее в качестве основы, которая заложит фундамент для сложного приложения
Это больше, чем просто библиотека, поскольку она имеет динамичную экосистему, которая состоит из
инструментов, библиотек и подходов.
Разница между React.js и React Native
React Native в последнее время стал еще более популярным модным словом в деловых кругах.
Это потому, что Facebook активно продвигает его как лучший инструмент для разработки кроссплатформенных мобильных приложений.
React Native использует элементы пользовательского интерфейса, написанные в React.js, которые могут создавать собственные компоненты интерфейса iOS и Android, такие как кнопки и анимации.
С React Native вы можете создавать приложения, которые бесперебойно работают на смартфонах
iPhone и Samsung или Huawei, разделяя подавляющее большинство кода между двумя платформами.
Три ключевых термина, которые вы должны знать о React.js Их не так много, но понимание этих
основных выражений поможет вам понять, о чем идет речь
 Компоненты - это строительные блоки, которые можно объединить для создания приложения.С React.js относительно легко создавать пользовательские компоненты, что является очень важной функцией, поскольку создание пользовательских компонентов требуется в 99% случаев, а готовые
компоненты обычно составляют 10-20% компонентов в приложении React.js. Вы также можете использовать существующую полноценную библиотеку пользовательского интерфейса (например, Material UI)
и просто связать компоненты с данными и пользовательской логикой.
 JSX - это расширение JavaScript, позволяющее разработчикам писать представления с использованием синтаксиса, напоминающего HTML и XML, которые можно смешивать с JS для управления логикой.
 Redux - это библиотека управления состоянием с динамичной экосистемой, часто в сочетании с React.js.
React.js на практике
Для начала подумайте о Facebook. В 2012 году управлять рекламой Facebook стало сложно, так
как веб-приложение социальной сети стало больше и содержало больше компонентов.
Марк Цукерберг заявил, что полагаться на HTML5 было одной из самых больших ошибок их организации, и в то же время пообещал пользователям (и инвесторам), что Facebook скоро предоставит
отличные мобильные приложения. В это же время корпорация приобрела Instagram. В мае 2013 года
React.js был официально запущен. Новые продукты создаются с его использованием, и некоторые из
самых крупных и успешных цифровых продуктов включают React.js в свой стек. Это включает в себя
самые известные в мире приложения, такие как:
64 НАУКА И ОБРАЗОВАНИЕ: СОХРАНЯЯ ПРОШЛОЕ, СОЗДАЁМ БУДУЩЕЕ
XXV международная научно-практическая конференция | МЦНС «НАУКА И ПРОСВЕЩЕНИЕ»
 Социальные сети (Facebook, Instagram, Pinterest, Twitter)
 Совместное использование экономических платформ (Airbnb, Lyft, Uber)
 Медиа сайты (Yahoo!)
 Видеоплатформы (Netflix)
 Инструменты SaaS[1] (SendGrid, Asana, InVisionApp, Zapier)
Facebook создал React для своих собственных целей, большинство их веб и мобильных приложений написаны с использованием React. В данный момент социальная сеть находится в процессе перестройки всей платформы с помощью React, GraphQL и Relay.