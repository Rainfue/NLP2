Задача разработки эволюционного алгоритма оптимизации. В настоящее
время существует большой класс оптимизационных задач, которые могут быть
успешно решены с применением генетических алгоритмов. Особенностью генетических алгоритмов (ГА) является учет предметной специфики их применения путем внесения изменений в параметры алгоритма [1, 3, 4]. Проблема выбора совокупности параметров ГА, наиболее полно соответствующих решаемой задаче, осложняется отсутствием на сегодняшний день общепринятых методик, наличием
нескольких различных подходов [3, 4].
На основе анализа публикаций по тематике адаптивных генетических алгоритмов (АГА) можно сделать вывод о большей целесообразности их использования, вследствие существенно лучших характеристик.
При проектировании АГА существуют две задачи – выбор адаптируемых параметров и выбор способа проведения операции адаптации. При синтезе генетических алгоритмов применяются различные параметры, поэтому необходим поиск
некоторой группы параметров, коррекция значений которых наиболее сильно
влияет на качество работы алгоритма.
Выбор способа проведения операции адаптации не менее важен, чем определение перечня настраиваемых параметров АГА. Несмотря на кажущиеся различия большинства предлагаемых подходов они схожи в том, что используют
опыт экспертов для определения степени изменения параметров. Экспертами
формируются аналитические зависимости для пересчета параметров АГА, однако существуют и другие подходы, например основанные на аппарате нечеткой
логики [1, 2]. Выбор конкретного способа реализации адаптации параметров ГА
зависит от исследователя.
Вычислительные возможности генетических алгоритмов определяются совокупностью многих параметров, определение которых является сложной задачей. В
соответствии с методологией системного анализа, сложную задачу для удобства
решения необходимо декомпозировать на ряд более простых, представить в виде
последовательности этапов. Каждый из этапов имеет свои особенности, представляет набор определенных действий. Приведем краткую характеристику этапов.
Этап 1. Определение способа представления решений. Способ представления
решений задает схему, позволяющую кодировать и декодировать любые формальные решения, проводить их оценку. Математически доказано, что не существует
идеальной структуры представления решений, для ее поиска требуется использование анализа, эвристических методов, перебора.
Этап 2. Определение вида и параметров операторов случайных изменений.
Операторы случайных изменений предназначены для проведения процесса размножения [1, 4]. Влияние, оказываемое их видом и параметрами на качество получаемых решений, делает актуальной задачу их оптимального определения.
Этап 3. Определение формы оператора репродукции. Определения формы
оператора репродукции задает алгоритм, на основании которого определяется,
какие решения должны принять участие в процессе размножения, а какие нет. Отбор производится пропорционально значению функции приспособленности каждой конкретной хромосомы, но существуют и другие методики.
Этап 4. Определение способа оценки приспособленности хромосом. Генетические алгоритмы в процессе своей работы осуществляют направленный перебор,
преобразование имеющихся популяций решений с целью получения наиболее оптимальных. Степень оптимальности каждого конкретного решения характеризуется его функцией приспособленности, от того насколько корректно она определена
напрямую зависит успех применения ГА.
Этап 5. Определение условия остановки алгоритма. Количество итераций
осуществляемых ГА, необходимых для нахождения оптимальных решений, не
известно заранее. Для предотвращения нежелательных ситуаций, связанных с его
зацикливанием, определяют условия остановки, например по достижении определенного числа итераций, получении решений требуемой точности и т.д.
Этап 6. Определение способа создания популяции начальных решений. Работа
ГА построена на поиске и сравнении степени приспособленности существующих
решений между собой. Отсюда вытекает необходимое условие возможности его
применения, а именно наличия группы, сравниваемых между собой решений.
В тех случаях, когда популяций решений не существует, необходимо определить
способ ее генерации.
Этап 7. Определение способа отбора решений в новую популяцию. Количество генерируемых хромосом на каждой итерации ГА часто может превышать допустимый размер популяции. Необходимо задать алгоритм, позволяющий определить, какие хромосомы целесообразно использовать в дальнейшем, а какие нет.
Этап 8. Разработка общей структурной схемы генетического алгоритма.
Перечень действий, выполняемых ГА, определяется набором операторов, входящих в его состав, а последовательность их выполнения схемой алгоритма. Эффективность ГА напрямую зависит от правильности организации взаимодействия его
операторов. 
Определение вида и параметров операторов случайных изменений. Операторы случайных изменений предназначены для организации процесса генерации
новых решений на основе ранее полученных. Самыми известными операторами
случайных изменений являются: кроссинговер (скрещивание), мутация, реинициализация.
Совместное использование перечисленных операторов в одном ГА перспективно, способно внести существенное разнообразие в популяцию получаемых решений. Апробация предложенного подхода будет проведена в данной работе.
Помимо выбора перечня операторов случайных изменений, необходимо определить конкретный вид их реализации, что осложняется невозможностью с уверенностью заранее сказать, какой из них больше подходит к конкретной задаче.
Использование комбинированных операторов [1], т.е. включающих в себя несколько реализаций, способно решить проблему выбора путем динамического определения подходящей формы оператора. Рассмотрим реализацию комбинированных операторов случайных изменений.
Разработка комбинированного оператора. Оператор скрещивания проводит рандомизированный обмен генетическим материалом между хромосомами с
целью получить более приспособленное потомство, что позволяет обозревать пространство решений. К недостатку оператора относят высокую вероятность разрушения решений до того момента, как они примут участие в процессе размножения.
Классический вариант кроссинговера позволяет проводить одновременное
скрещивание только двух хромосом, однако, ограничений на количество обрабатываемых хромосом нет [1, 3]. Существуют исследования, результаты которых
показывают, что увеличение количества хромосом в процессе скрещивания способно ускорить процесс нахождения оптимальных решений.
В данной работе предлагается комбинировать три вида операторов скрещивания, т.е. одновременно использовать варианты реализации с двумя и тремя родительскими особями. Первоначально вероятность применения каждой из версий оператора кроссинговера планируется задать одинаковой, с последующей коррекцией.
Работа комбинированного оператора скрещивания может быть описана в виде последовательности действий, этапов, как показано на рис. 1. 
Этап 1. Определение формы используемого оператора. В конце каждой итерации вычисляется средняя степень приспособленности решений, полученных на основе использующихся форм кроссинговера. Далее c помощью нечеткого контроллера [2] определяются вероятности применения каждого вида оператора скрещивания.
Полученные вероятности присваиваются в качестве значений секторам рулетки. В
зависимости от того, в какой сектор рулетки попадет случайным образом генерированное число, будет зависеть вид применяемой операции скрещивания.
Этап 2. Отбор хромосом, определение точек разрыва. В зависимости от вида используемой операции скрещивания выбирается необходимое количество родительских особей, точек разрыва. Кроссинговер с двумя родителями будет иметь
одну или две точки разрыва. Кроссинговер с тремя родителями будет иметь две
точки разрыва. 
Номера генов хромосомы, в которых будет происходить ее разделение на составные части, планируется генерировать случайным образом, единственным ограничением является необходимость их принадлежности интервалу:
[L2, Ln-1], (1)
где L2 – вторая позиция в скрещиваемой хромосоме; Ln-1 – предпоследняя позиция
в скрещиваемой хромосоме.
Этап 3. Выполнение оператора скрещивания. На основе выбранной формы
оператора проводится обмен генетической информации между хромосомами. Варианты реализации операции кроссинговера с двумя и тремя родителями представлены на рис. 2. 
ь эффективность, быстродействие алгоритма [1, 3]. Вероятность проведения
операции скрещивания обычно является фиксированной величиной [1, 3], в данной
работе планируется принять ее равной 75 %.
Разработка комбинированного оператора мутации. Оператор мутации позволяет на основе родительской особи или ее части создавать потомков, является
элементом рандомизированного поиска в окрестности текущего положения популяции. Основным назначением мутации является восстановление утерянного генетического материала, добавление нового. Мутация оказывает существенное влияние на надежность, скорость работы ГА. Большего разнообразия получаемых решений можно добиться путем кардинального изменения некоторых участков хромосом, например, применяя оператор реинициализации.
На основании исследований можно говорить о схожем назначении операторов реинициализации и мутации, возможности полной замены первым оператором
второго. Реинициализация может рассматриваться как крайняя форма оператора
мутации. Реинициальзацию будет применяться совместно с одно- и двухточечной
мутацией – в результате образуется комбинированный оператор мутации. Работа
комбинированного оператора мутации схожа с работой комбинированного оператора кроссинговера.
Разработка алгоритма адаптации параметров комбинированных операторов случайных изменений. При проектировании генетических алгоритмов параметры операторов мутации и скрещивания обычно задаются постоянными величинами и определяются на основе опыта экспертов, либо экспериментально. 
Основными параметрами операторов являются: форма оператора (fc, fm –
формы операторов кроссинговера, мутации соответственно); вероятность применения оператора (pc, pm – вероятность применения кроссинговера, мутации соответственно).
Постоянные значения параметров операторов случайных изменений могут
негативно сказываться на качестве работы ГА, не позволяют оказывать достаточное влияние на процесс сходимости алгоритма и, как следствие увеличивают вероятность попадания его в локальный оптимум. Доказано, что адаптивные ГА, способные осуществлять самонастройку своих параметров, обладают лучшими качественными характеристиками, с большей вероятностью и за меньшее время находят глобальные решения [4].
На основании вышесказанного можно сделать вывод, что применение адаптивных ГА к задачам оптимизации более целесообразно, чем не адаптивных.
В процессе работы ГА происходит обмен генетической информацией между
хромосомами популяции. Чем дольше он осуществляется, тем более похожими
друг на друга становятся решения, происходит постепенное их вырождение. В том
случае, если удается найти хромосому, удовлетворяющую заданным требованиям
качества, выполняется условие остановки алгоритма, считается, что работа ГА
завершена успешно.
В случае попадания алгоритма в локальный оптимум, вырождении, снижении
степени генетического разнообразия хромосом, дальнейший поиск оптимальных
решений представляется проблематичным. В процессе работы генетического алгоритма планируется изменять следующие параметры операторов случайных изменений: степень вероятности применения оператора мутации; степень вероятности
применения каждой из форм оператора мутации; степень вероятности применения
каждой из форм оператора скрещивания (кроссинговера). Суть предлагаемого
подхода удобно представить в графическом виде, как показано на рис. 3. 
Первоначально возможность использования каждой из форм операторов мутации и скрещивания является одинаковой, корректируется в процессе работы ГА
пропорционально среднему значению функций приспособленности хромосом, полученных каждым из видов скрещивания, мутации.
Коррекция параметров операторов случайных изменений будет производиться с применением нечеткого контроллера (НК) [2].
Входными параметрами НК будут являться: степень генетического разнообразия популяции хромосом GD; степень успешности применения j-ой формы оператора скрещивания F(cj); степень успешности применения j-ой формы оператора
мутации F(mj).
Выходными параметрами НК будут являться: вероятность применения оператора мутации (pm); вероятности применения каждой из форм операторов скрещивания, мутации (pcj, pmj).
Результаты сравнительного анализа эффективности разработанного алгоритма и аналогов для оптимизации функций многих переменных, обучения нейронных сетей приведены на рис. 4. 
Анализ эффективности ГА1 - ГА10 по данным рис. 4 позволяет говорить о
большей эффективности ГА9 по сравнению с рассматриваемыми аналогами. ГА9
обладает лучшим соотношением числа итераций, требуемых для получения решений заданной точности, остановок генетического алгоритма в локальных оптимумах. 