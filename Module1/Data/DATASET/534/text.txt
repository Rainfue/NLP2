CSS — каскадные таблицы стилей — язык, применяющийся для стилизации веб-страниц. Актуальная версия языка на сегодняшний день — CSS3. Без CSS уже давно не обходится ни один сайт —
код присутствует либо в виде отдельного файла с расширением CSS, либо внутри самого файла HTML
— внутри тега-контейнера “style”, либо в атрибуте “style” к различным тегам. Основные задачи, которые
выполняет CSS:
 Назначение шрифта, его оформления, размера и цвета;
 Назначение цвета, тени и свечения элементов;
 Позиционирование объектов на странице;
 Задание размера элементов;
 Создание структуры страницы;
 Назначение переходных состояний элементов в зависимости от взаимодействия с ними.
Общий синтаксис языка CSS: вписывается селектор (элемент, класс, id и т. д.) и его свойства в
фигурных скобках. Далее вписывается следующий селектор и так далее.
При создании современных сайтов, код в CSS принимает внушительный объём, при котором появляются определённые сложности. Например, такой код становится тяжело исправлять при необходимости — появляются повторяющиеся значения и фрагменты кода, параметры начинают конфликтовать между собой — всё это отнимает массу времени при frontend-разработке сайтов.
Для упрощения работы с большими CSS файлами было придумано расширение под названием
SASS (Syntactically Awesome Stylesheets). Оно имеет преимущества, используя которые можно исключить дублирование кода — переменные, миксины и прочие. После редактирования файлы SASS он
компилируется в CSS при помощи различных средств. Для примера — таск-менеджер GULP преобразует SASS-файл в CSS автоматически при его сохранении. Более того, GULP преобразует получившийся файл в минимизированный CSS — код, записанный в одну строку. Это позволяет уменьшить
размер файла, что значительно сокращает время загрузки страниц массивных веб-сайтов.
Для того, чтобы пользоваться компиляцией CSS-файлов при помощи GULP, необходимо установить и создать проект [1]:
1) Установить Node.js;
2) Установить GULP;
3) Создать папку проекта;
4) Установить GULP в папку проекта;
5) Загрузить плагин gulp-sass;
6) Создать проект;
7) Запустить проект в GULP.
Помимо компиляции SCSS, GULP также выполняет следующие действия:
 Минимизация и конкатенация CSS и Javascript файлов;
 Минимизация HTML;
 Использование прочих препроцессоров CSS, отличных от SASS;
 Оптимизация изображений;
 Валидация кода и тестирование.
Всё это делает GULP очень полезным приложением не только для компиляции CSS, но и для
frontend-разработки в целом.
Существует также фреймворк для работы с SASS, который называется Compass. Он упрощает
работу с SASS, тем самым ещё сильнее упрощая работу с CSS. Compass позиционируется разработчиками как дизайнерский фреймворк, который позволяет больше сконцентрироваться на стилизации и
не тратить усилия на поддержку старых браузеров. Compass имеет широкий функционал и работает с
множеством фреймворков [2]:
 Всевозможные встроенные миксины для работы с изображениями, шрифтами, CSS3;
 Утилиты для работы с цветом, спрайтами и стилизации базовых элементов таких как списки,
таблицы, ссылки;
 normalize.css;
 HTML5 Boilerplate, Blueprint, Bootstrap;
 Системы сеток
 И многое другое.
Работа с CSS сильно изменилась. С одной стороны, она упростилась, с другой стороны — сам язык
усложняется и с его помощью можно реализовывать когда-то невозможные для этого языка элементы.
На сегодняшний день CSS позволяет выполнять очень эффектные заголовки, как на рисунках 2–4.
Раньше, чтобы осуществить подобное, загружалось растровое изображение, что сильно увеличивало размер страницы и время её загрузки. С использованием современных векторных редакторов
стало возможно создавать изображения, не теряющие четкость и имеющие гораздо меньший размер,
чем растровые изображения. Недостаток векторных изображений в качестве заголовка — они, как и
растровые изображения, не являются текстом и не распознаются поисковыми машинами, в то время
как в заголовках, как правило, содержится самый релевантный запрос к сайту. В данный момент средствами CSS создаётся именно текст, который занимает совсем небольшое количество памяти и индексируется поисковыми машинами. С помощью CSS также создаются изображения наручных и настенных часов, смартфонов, книг и прочего. В комбинации с SVG-элементами появляется возможность создать невероятные по красоте элементы сайта.
Язык CSS стал неотъемлемой частью всех современных сайтов. Претерпев массу изменений, CSS
позволяет добиться впечатляющего визуального эффекта от сайта, не занимая большого объема памяти.