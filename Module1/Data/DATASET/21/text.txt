Работа детского сада, помимо обучения детей, связана с накоплением 
информации о детях, родителях, сотрудниках детского сада. Информационная 
система детского сада позволит сэкономить массу времени по внесению 
данных, их обработке, составлению отчетов. Хранение информации в файлах 
компьютера дешевле, чем на бумаге. Базы данных позволяют хранить, 
структурировать информацию и извлекать оптимальным для пользователя 
образом. Использование компьютера позволяет сберечь значительные 
средства и время для получения необходимой информации, а также упрощает 
доступ и ведение, поскольку основывается на комплекснойобработке данных. 
В этом состоит актуальность и значимость данного проекта.
Перед нами была поставлена задача – разработать web-приложение для 
детского сада, с помощью которого можно будет осуществлять следующие 
функции:
 добавление, изменение и удаление данных из созданных таблиц;
 просмотр данных о детях, группах, сотрудниках, кружках, 
родителях;
 поиск, фильтрацию и сортировку данных для более удобного 
представления их пользователю.
Таким образом, система должна обеспечивать возможность добавления, 
изменения и удаления данных в базе и иметь удобный интерфейс для работы 
пользователей.
Для реализации поставленной задачи был выбран язык PHP. PHP, 
фактически, является самым распространенным языком для Webпрограммирования. В достижении этого статуса он прошел множество этапов, 
от простого языка для Web-программирования который уступал многим, до 
сегодняшнего быстрого, мощного и расширяемого[4].
PHP - скриптовый язык общего назначения, интенсивно применяемый 
для разработки web-приложений. В настоящее время поддерживается 
подавляющим большинством хостинг-провайдеров и является одним из 
лидеров среди языков, применяющихся для создания динамических webсайтов[3].
Для создания удобного интерфейса применялся фреймворк Ext JS. Ext 
JS представляет собой библиотеку JavaScript для разработки Web-приложений 
и пользовательских интерфейсов. Прежде всего, Ext JS предназначен для 
создания RIA-приложений, то есть таких интернет-приложений, которые 
отличаются богатым и насыщенным интерфейсом[2].
В качестве СУБД была выбрана MySQL. MySQL – компактный 
многопоточный сервер баз данных, характеризующийся большой скоростью, 
устойчивостью и легкостью в использовании [3].
Важным этапом в создании информационной системы является 
проектирование web-приложения. Оно состоит из двух этапов:
 проектирование информационного обеспечения;
 проектирование программного обеспечения.
Этап проектирования информационного обеспечения включает в себя 
разработку логической и физической моделей БД [1].
Была разработана логическая модель, отражающая взаимные 
зависимости между сущностями по определенным атрибутам. Структура 
логической модели представлена на рис. 1.
Разработка физической модели БД - процесс подготовки описания 
реализации базы данных на вторичных запоминающих устройствах. 
Физическая модель БД отображает таблицы и их названия, поля таблиц, их 
типы и размеры, и связи между таблицами. Ключевыми полями в таблицах 
являются поля id. Для полей, содержащих текст, выбран тип данных varchar. 
Для полей, содержащих только цифры, выбран тип данных int. На рис. 2 
представлена физическая модель БД.
После этапа проектирования и создания информационного обеспечения, 
в нашем случае БД, необходимо перейти к разработке программного 
обеспечения. Необходимо выделить модули, которые будут составлять наше 
приложение, определить назначение этих модулей и их связь друг с 
другом [5].
Для наглядного отображения модулей приложения и связей между 
этими модулями, разработаем модульную схему приложения. Она поможет 
нам разобраться в назначении каждой страницы.
После того, как проектирование Web-приложения закончено, следует 
перейти непосредственно к реализации проекта.
Рассмотрим реализацию доступа к базе данных. Основные настройки, 
необходимые для подключения к БД вынесены для удобства в отдельный 
файл «dbsetting». Это сделано для того, чтобы при необходимости можно 
было быстро сменить настройки подключения к БД только в одном файле 
«dbsetting», а не изменять настройки в каждой странице, где используется 
подключение.
Содержимое файла «dbsetting» представлено в листинге 1.
Листинг1.Содержимоефайла «dbsetting»
server=172.23.64.64;
user=973533;
pass=****;
dbname=db_973533;
Конец листинга
Поиск данных реализован при помощи модулей «find_kids.php» и
«find_kids_form.php». На странице «find_kids_form.php» происходит 
формирование параметров поиска: мы можем осуществить поиск по 
нескольким критериям (фамилия, имя, отчество, дата рождения). После этого, 
модуль «find_kids.php» формирует и производит запрос к БД и производит 
вывод результатов поиска. Поискпроизводитсяспомощьюзапроса select * from 
table_name where field_name like ‘%search_parametr%’. Где table-name –
название таблицы. Field-name – название поля таблицы. Search_parametrпараметр поиска.
Листинг 2. Содержимое файла « find_kids »
<?php
header('Content-type: text/html; charset=utf-8');
require_once('dbconnect.php');
$db = dbConnect();
echo '<html>
<title>Поиск информации по воспитанникам</title>
<head>
<link rel=stylesheet href="css.css">
</head>
<body>';
$name = trim($_POST['name']);
$surname = trim($_POST['surname']);
$patronymic = trim($_POST['patronymic']);
$idGroup = (int)$_POST['id_group'];
$birthday = trim($_POST['birthday']);
if($name) {
 $name = addslashes($name);
}
if($surname) {
 $surname = addslashes($surname);
}
if($patronymic) {
 $patronymic = addslashes($patronymic);
}
if($birthday) {
 $birthday = addslashes($birthday);
}
$query = "SELECT * FROM kids WHERE name like '%{$name}%' AND
surname like '%{$surname}%' AND
patronymic like '%{$patronymic}%' AND
birthday like '%{$birthday}%'";
$res = mysql_query($query);
if(mysql_num_rows($res)) {
$no = 1; //Номерпопорядку
while($info = mysql_fetch_array($res)) {
$linkWithName = "<a 
href='personal_page.php?id={$info['id']}'>{$info['name']} {$info['surname']} 
{$info['patronymic']}</a>";
echo "{$no}. $linkWithName (д.р. {$info['birthday']})<br>";
$no++;
 }
} else {
echo 'По переданным параметрам не найден ни один ребенок';
}
echo '<br><a href="index.php">Вернутьсяназад</a>';
exit();
Конец листинга
Запросы к данным в БД реализованы при помощи модулей
«edit_kids.php», «edit_kids_form.php» и «edit_kids_list.php». Сначала 
формируется запрос $query. Затем с помощью функции mysql_query мы 
присваиваем переменной $resutl указатель на результат запроса. Затем, для 
вывода таблиц, формирования списков используются функции 
mysql_query($query), mysql_num_rows($result), mysql_fetch_array($result)
Функция mysql_query($query) - Посылает запрос MySQL
Функция mysql_num_rows($result) - Возвращает количество рядов 
результата запросов.
Функция mysql_fetch_array($result) - Обрабатывает ряд результата 
запроса, возвращая ассоциативный массив, численный массив или оба.
Удаление данных в БД реализовано при помощи модулей 
«delete_kids.php» и «delete_kids_form.php».
В итоге мы осуществили задачу по проектированию и созданию webприложения для ее администрирования с использованием HTML, JavaScript, 
PHP и СУБД MySQL. В проекте использовались современные средства 
разработки, что является крайне важным, поскольку в области 
программирования для Интернет смена технологий происходит крайне 
быстро и необходимость обучения «на лету» является неотъемлемой частью 
профессии. Приложение совершает реализацию доступа к БД, добавление 
данных в БД, поиск данных, реализацию запросов к данным в БД. Таким 
образом, задачи, поставленные в начале работы, были выполнены, а цель -
достигнута.