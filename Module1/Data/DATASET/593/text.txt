В начале этой статьи дадим определение что такое библиотеки Django языка
программирования Python.
Библиотека Django является фреймворком для создания веб-приложений посредством
языка программирования Python. Django был разработан в 2005 году, при условиях, когда
веб-разработчики из газеты Lawrence Journal-World стали использовать Python в качестве
языка для создания веб-сайтов для газеты. В 2008 году вышел первый публичный релиз
фреймворка Django. Сегодня он продолжает развиваться. Ну и также постоянно выходят
подверсии.
Django достаточно известен, нашел свое применение на многих сайтах, в том числе
таких, как Pinterest, PBS, Instagram, BitBucket, Washington Times, Mozilla и многих других.
Фреймворк является бесплатным. Он прогрессирует как open source, его первичный
код открыт.
Фреймворк Django выполняет архитектурный паттерн Model-View-Template или
сокращенно MVT, что по существу служит модификацией распространенного в вебпрограммировании паттерна MVC (Model=-View-Controller).
Описательно допускается представление архитектуру MVT в Django последующим
способом:
Рис.1. Структура архитектуры MVT в Django
Главные составляющие паттерна:
ВЕСТНИК КЫРГЫЗСТАНА, №1 (2), 2021
181
• URL dispatcher: при принятии запроса на основании запрошенного адреса URL
определяется наличие ресурса, который обрабатывает данный запрос.
• View: принимает запрос, подвергает его обработке и посылает пользователю некий
ответ. View может взаимодействовать с моделью и базой данных при необходимости
обработки запроса. Для сформирования ответа может использовать Template или шаблоны. В
архитектуре MVC этому компоненту соответствуют контроллеры.
• Model: представляет сведения, используемые в приложении. Таблицам в базе данных
соответствуют как правило, отдельные классы.
• Template: демонстрирует логику представления в образе сгенерированной разметки
html. View, то есть представления соответствует этому компоненту в MVC.
При поступлении запроса к приложению, URL dispatcher предопределяет какой ресурс
сопоставляется с данным запросам, при этом происходит передача запрос выбранному
ресурсу. Ресурсом фактически представляется функция или View, который в свою очередь
принимает запрос и по-своему обрабатывает его. В процессе обработки View может
обращаться к моделям и базе данных, получать из нее данные, или, наоборот, сохранять в
нее данные. Итоги обработки запроса переотправляется обратно, и это может видеть
пользователь в своем браузере. Как правило, итоги обработки запроса представляет
сгенерированный html-код и для его генерации используются шаблоны (Template).
Кроме реализации архитектуры «модель-контроллер-шаблон», библиотека Django
имеет следующий перечень возможностей и это далеко не последние:
• реализация принципа DRY (Don’t Repeat Yourself, не повторяйся), в результате чего
однажды написанный код может быть применен повторно;
• унифицированные средства для работы с базами данных разных поддерживаемых
форматов: SQLite, MySQL, PostgreSQL, Oracle, Microsoft SQL Server, Firebird и др;
• мощный шаблонизатор, построенный на специальных тегах, с допустимостью
наследования шаблонов;
• богатые средства для работы с формами;
• инструменты для выполнения разграничивания доступа;
• встроенные средства для поддержки возможности комментирования, пагинации,
генерирования каналов RSS и Atom, рассылки электронной почты и многие другие;
• встроенный административный сайт с настройкой, который используется для работы
с данными;
• простая и разборчивая структура образуемых сайтов:
• каждый раздел сайта является отдельным приложением, его в свою очередь можно
отчуждать и использовать для другого сайта;
• все эти отдельные приложения можно объединять в один проект, собственно, и
представляющий собой сайт.
Таким образом, данный фреймворк предоставляет возможность разрабатывать
насыщенные, динамичные, привлекательные сайты в минимальные сроки. Django устроен
так, чтобы разработчик был сконцентрирован на решении увлекательных, массивных задач,
и не отвлекался на повторяющуюся рутинность. Для достижения своей цели он может
применять общеупотребительные шаблоны веб-разработки высокого уровня абстракции,
инструменты для быстрой реализации многократно встречающихся задач программирования
ВЕСТНИК КЫРГЫЗСТАНА, №1 (2), 2021
182
и конкретные соглашения о методах решения проблем. В то же время Django стремится не
мешать программисту, предоставляя возможность при надобности выходить за рамки
фреймворка.
