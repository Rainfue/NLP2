API (application programming 
interface) – это посредник между разработчиком приложений и какой-либо 
средой, с которой это приложение должно взаимодействовать. API упрощает создание кода, поскольку предоставляет набор готовых классов, 
функций или структур для работы с имеющимися данными [1].
API ВКонтакте позволяет работать с событиями пользователя или 
сообщества в реальном времени. Это нужно для отображения нового сообщения, для моментальной реакции на комментарий в сообществе, для 
создания чат-ботов или для анализа текстовых данных [2].
Чтобы использовать методы API VK, необходимо изначально получить токен, для этого в первую очередь требуется регистрация приложения. Это можно сделать на странице «Создание приложения» по ссылке 
https://vk.com/editapp?act=create. Для того чтобы помимо добавления в 
альбомы и диалоги была возможность загружать изображения на стену, в 
графе платформа следует выбрать Standalone-приложение (рисунок 1).
При переходе в настройки приложения доступна информация об ID
приложения (рисунок 2).
Далее следует сгенерировать ссылку для авторизации в приложении. 
Для этой цели реализована функция authorizationVk (листинг 1).
Для корректной ссылки нужно 6 параметров:
 client_id – ID приложения;
 display. Данный аргумент указывает тип отображения страницы 
авторизации, по умолчанию page. Всего 3 типа: 
1) page, предусматривающий форму авторизации в отдельном 
окне;
2) popup, предполагающий всплывающее окно;
3) mobile, означающий авторизацию для мобильных устройств.
 redirect_uri – адрес, на который будет переадресована страница, 
после авторизации;
 scope – набор прав доступа приложения;
 response_type – запрашиваемый тип данных;
 v – версия API VK.
При переходе по ссылке будет запрошен доступ к аккаунту (точнее, 
указанным значениям scope) приложением (рисунок 3).
После разрешения произойдет переадресация на страницу, URL которой будет содержать полученный access_token. Следует присвоить access_token в переменную $token, после этого реализовать алгоритм по загрузке фотографии, первой инструкцией которого является получение адреса сервера для загрузки фотографии. Для этого написана функция 
getWallUploadServer, которая принимает массив параметров из токена и 
версии API VK (листинг 2).
В переменную $server_img вернется массив, где в uploud_url хранится адрес сервера (рисунок 4).
Вторым действием является отправка изображения, применяя технологию cURL. 
cURL – это технология, которая предназначена для передачи/получения данных посредством URL. Технология cURL поддерживает такие 
распространенные протоколы как HTTP, FTP, HTTPs и другие. Изначально cURL был инструментом командной строки, однако разработчики PHP 
не поленились и создали библиотеку в PHP, чем облегчили жизнь миллионам программистам [3].
Используя функцию curlPhoto, отправляем фотографию на полученный раннее URL-адрес (листинг 3). В функции принимаются два параметра: 
 $file – полный адрес к изображению;
 $upload_url – адрес сервера для загрузки.
$img_file = __DIR__ . '\img\post\test.jpg';
$upload_url = $server_img['response']['upload_url'];
$curl_photo =curlPhoto($img_file,$upload_url);
function curlPhoto($file, $upload_url)
{
 $curl = curl_init();
 $file = curl_file_create($file, mime_content_type($file), 
pathinfo($file)['basename']);
 curl_setopt($curl, CURLOPT_URL, $upload_url);
 curl_setopt($curl, CURLOPT_POST, true);
 curl_setopt($curl, CURLOPT_HTTPHEADER, ['Content-type: multipart/form-data;charset=utf-8']);
 curl_setopt($curl, CURLOPT_POSTFIELDS, ['file' => $file]);
 curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
 curl_setopt($curl, CURLOPT_TIMEOUT, 10);
 curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);
 return json_decode(curl_exec($curl), true);
}
В переменную $curl_photo вернется массив из 3 значений: hash, photo, server (рисунок 5).
После выполнения указанных процедур изображение сохраняется 
методом «photos.saveWallPhoto». Для этого применяется функция 
savePhoto, принимающая массив с параметрами (листинг 4).
В переменную $save_photo вернется массив, хранящий информацию 
о загруженной фотографии (рисунок 6).
Загрузка изображений через API VK требует определенных навыков работы с методами и технологиями. В статье было рассмотрено как создать приложение в VK developer, получить токен пользователя, получить адрес сервера, загрузить фото, применив cURL технологию, а 
также сохранить его в VK. Далее имея id фотографии возможна его публикация на стену социальной сети, в альбом или же в диалог.