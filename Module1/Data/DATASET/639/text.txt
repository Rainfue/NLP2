Несмотря на то, что Интернет давно вошел в жизнь человечества,
многие люди не понимают, что даст создание собственного сайта? Создание
собственного сайта обеспечит быструю подачу информацию широкому кругу лиц,
улучшит имидж компании и повысит ее популярность, создаст обратную связь с
клиентами и оперативную связь с представителями за рубежом, будет полноценным
маркетинговым инструментом и будет способствовать привлечению покупателей и
клиентов. Единственное необходимо понять, что ни один другой ресурс не даст столько
возможностей, сколько собственный сайт.
Существует 4 способа создания сайтов: конструкторы, языки программирования,
с фреймворки или CMS (система управления контентом). Из всех способов самыми
предпочитаемыми считаются использование конструкторов и языков
программирования. Конструкторы – это ―... система, позволяющая любому
пользователю интернета самостоятельно создать собственный сайт‖. К этим сервисам
прибегают владельцы малого бизнеса когда лишних средств на профессиональные
услуг нет или новички, осваивающие веб-разработку [3] с использованием
конструкторов создаются статические сайты, имеющие следующие недостатки:
невозможность динамической генерации содержимого, отсутствие серверной
платформы, программной части и серверной части базы данных.
Во избежании таких недостатков применяются языки программирования. Часто
используемыми языками программирования при создании сайтов считаются: JavaScript,
PHP, Java, Python. Но большую популярность набрал язык JavaScript. Для работы на
JavaScript существуют очень много современных интегрированных сред
разработки(IDE).
Они позволяют разработчикам сократить время и усилия, затраченные на разработку,
снимая с разработчика часть рутинных задач. Современные IDE предоставляют
широкий спектр различных инструментов, включая синтаксический и статический
анализы кода, подсветку синтаксиса, автодополнение кода и многое другое. К ним
относятся редакторы, фреймворки и библиотеки.
Целью данного исследования является разработка сайта с помощью современных
инструментов веб-программирования. Для достижения данной цели были
предопределены следующие задачи:
1. Выбор более подходящего IDE для разработки сайтов.
2. Загрузка, установка IDE для разработки сайтов.
3. Использование необходимых инструментов веб-программирования для
разработки сайтов.
4. Разработка клиентской части сайта.
5. Разработка админ.страницы сайта.
В данном исследовании изложено использование современной интегрированной
среды программирования для разработки сайтов – WebStorm. Эта среда представляет
собой интегрированную среду разработки, предназначенная преимущественно для
разработки веб-приложений, поддерживающая большинство современных webфреймворков, таких как React.js, Angular, AngularJS, Vue.js и т.д.
WebStorm [1] – это одна из наиболее популярных сред разработки на JavaScript,
поддерживающая, в том числе, разработку мобильных приложений на React Native.
Помимо стандартных возможностей, предоставляемых большинством IDE, таких как
синтаксический анализ, подсветка кода, автодополнение и отладка, WebStorm включает
в себя множество других дополнительных возможностей, таких как визуальный
инструмент для работы с системами контроля версий git, svn и mercurial, обширный
инструментарий рефакторинга кода, интеграция с инструментами контроля качества кода, таких как JSLint [1]. Помимо стандартного инструментария, WebStorm
предоставляет часть функционала, ориентированного исключительно на разработку
React Native приложений, таких как, встроенная поддержка утилиты создания React
Native проектов react-native-cli, конфигурация файлов отладки и тестирования
скомпилированных IOS и Android приложений [1].
Материал и методы исследования. Для разработки сайтов впервую очередь
необходимо загрузить с официального сайта производителя и установить. Объем
загруженного файла составляет около 300Мб. Установка данной программы
представляет собой логически упорядоченную последовательность команд, выполняя
которых приведет к полной установке программы. Процесс установки по времени
займет лишь несколько минут.
В процессе разработки сайта были использованы встроенные инструменты такие,
как фреймворк Vue.js, библиотека Bootstrap и плагин для работы с базой данных
Database Navigator. Фреймворк Vue.js используется для разработки клиентской части
разработки и применяется при разработке одностраничных сайтов, сайтов с высокой
нагрузкой, адаптивных сайтов и разделов личных кабинетов и пользовательских
страниц. Библиотека Bootstrap - это свободный набор инструментов для создания
сайтов и веб-приложений. Включает в себя HTML- и CSS-шаблоны оформления для
типографики, веб-форм, кнопок, меток, блоков навигации и прочих компонентов вебинтерфейса, включая JavaScript-расширения. С помощью данной веб-технологии
практически любой заинтересованный пользователь сможет самостоятельно создать
современный динамический и адаптивный сайт. Минимальные требования к
использованию данной технологии являются знания HTML, CSS и JavaScript [4].
Плагин Database Navigator предназначен для работы с базой данных и установить его
можно выбрав из списка плагинов в самом редакторе WebStorm.
Сайт был разработан по модели ―клиент-сервер‖. Это модель которое состоит из
двух взаимодополняющихся компонентов: клиента и сервера. Клиент - это компьютер,
который отсылает запросы серверу для выполнения определенных задач. Сервер -
более мощное по сравнению клиентским компьютером, который предназначен для
выполнения сервисного обслуживания по клиентским запросам. Принцип работы
данной архитектуры такова: клиент оправляет запрос серверу, сервер принимает
обращение и выполняет поставленную задачу и обратно отправляет результат
проделанной работы клиенту. Именно с этой архитектурой связаны термины front-end и
back-end. Эти два понятия неотделимы друг от друга, потому, что они в целом
представляю собой веб-приложение. Но по функциональности они отличаются друг от
друга.[2]
Различие заключается в том, что Front-end разработка сосредоточена на
пользовательском интерфейсе, например, создание адаптивного дизайна для
мобильных версий веб-приложения. Чтобы контент веб-приложения подстраивался
под разные разрешения и хорошо смотрелся независимо от размера дисплея.
Back-end разработка ориентирована на ту часть веб-приложения, которая
невидима клиенту, но непосредственно несет ответственность за корректное
выполнение функций веб-приложения.[2]
Клиентская часть сайта — это проект, называемый ―kulinar‖ и состоящий из
следующих взаимосвязанных страниц: главная страница, страницы ―о нас‖ и
―контакты‖, страница для авторизации, страница выхода, страница рецептов, страница
категорий рецептов и страница для поиска рецептов.
Админстраница сайта – это проект ―kulinar nodejs‖, состоящий из модулей,
предназначенных для поиска, авторизации и выхода из админстраницы, а также из sqlфайла, использующий для доступа, управления и извлечения данных из подключенной
базы данных. 
В целом, редактор WebStorm представляет собой самый эффективный и
умный редактор для создания сайтов. Содержит встроенные инструменты для
разработчиков сайтов. Также он хорош тем, что есть очень много плагинов
(расширений), например, плагин по работе с базой данных. Работа в редакторе
WebStorm требует лишь знаний скриптов на JavaScript. 