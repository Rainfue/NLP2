Технология Bluetooth упростила взаимодействие различных МБУ и многочисленных IoTустройств (Internet of Things, IoT). В ранних версиях спецификации Bluetooth постоянные 
MAC-адреса устройств регулярно транслировались в открытом виде, что приводило к возможности их отслеживания [1]. С введением стандарта BLE производители оборудования 
разработали технологию рандомизации MAC-адреса для предотвращения отслеживания
МБУ [1]. Однако требования к реализации встроенных алгоритмов предотвращения несанкционированной идентификации местоположения в настоящее время четко не определены и 
носят рекомендательный характер. Необязательность реализации функций обеспечения конфиденциальности в МБУ с поддержкой BLE привела к тому, что не все такие устройства используют рандомизацию MAC-адресов и, как следствие, позволяют осуществлять несанкционированную идентификацию местоположения их пользователей.
Использование современными BLE-устройствами (в том числе, работающими под управлением операционных систем (ОС) Windows 10, macOS и iOS 12.x) широковещательных незашифрованных каналов позволяет потенциальному нарушителю анализировать информацию об устройстве и его пользователе, даже несмотря на использование технологии 
рандомизации адресов. Выявление идентифицирующих токенов, которые являются уникальными для каждого МБУ и остаются статичными достаточно долгое время, позволяет их использовать в качестве вторичных идентификаторов наряду с MAC-адресами. В данном случае нарушитель использует тот факт, что идентифицирующие токены и случайный адрес не 
изменяются синхронно.
Таким образом, нарушитель имеет возможность отслеживать устройства, которые используют динамически рандомизированные адреса, изменяющиеся в зависимости от параметров регенерации, установленных производителями МБУ. Кроме того, дефекты в алгоритмах рандомизации адресов МБУ на базе ОС Android позволяют определять типы устройств с помощью MACпрефиксов, MAC-адресов, а также информации, содержащейся в передаваемых WPS-атрибутах. 
Нарушитель может использовать пассивный метод отслеживания, основанный на отложенном 
извлечении идентифицирующих токенов в полезной нагрузке BLE-сообщений.
Bluetooth – это протокол беспроводной связи в диапазоне ISM 2,4 ГГц. Спецификация 
BLE представлена в 2010 г. одновременно с выходом Bluetooth 4.0. Спецификация Bluetooth
5.0, являющаяся дальнейшим развитием BLE, включает многочисленные функциональные дополнения и расширяет дальность связи до 400 м [1, 2]. Это значительно расширяет радиус действия потенциального нарушителя, а в совокупности с возможностью автоматизированной 
удаленной координации деструктивных действий может обеспечить несанкционированную 
идентификацию местоположения МБУ в режиме времени, близком к реальному.
Технология BLE работает на 40 физических каналах, разнесенных с шагом 
2 МГц от 2402 МГц до 2480 МГц. Три из них являются так называемыми рекламными каналами, функционирующими на частотах 2402, 2426 и 2480 МГц. Эти каналы используются 
для трансляции рекламных сообщений различных типов: периодических объявлений о присутствии МБУ, запросов сканирования, адресованных другим устройствам, маяков (beacons), 
содержащих метаданные местоположения, и другую общедоступную информацию. Остальные каналы применяются для передачи данных между сопряженными устройствами и используют схему скачкообразного изменения псевдослучайного канала, которая согласовывается между двумя сторонами при соединении, чтобы избежать помех с другим трафиком 
полосы ISM. 
Рассмотрим формат рекламного пакета (рис. 1,a), поскольку именно данные пакеты могут 
быть использованы для идентификации местоположения BLE-устройств. Пакет состоит из 
преамбулы, адреса доступа (AA), блока данных полезной нагрузки (Protocol Data Unit –
PDU) и поля CRC. PDU рекламного канала состоит из заголовка и полезной нагрузки в зависимости от типа PDU, определенного в заголовке (рис. 1,б).
Полезная нагрузка содержит рекламный (Advertising Address – AdvA) и целевой (Target 
Address – TargetA) адреса (рис. 2). При этом только устройства с целевым адресом могут 
инициировать соединение, отправив запрос на подключение.
Широковещательная передача рекламных пакетов позволяет любому МБУ, принимающему PDU, ответить на соответствующий запрос. Полезная нагрузка PDU для данного типа пакетов содержит рекламный адрес (Advertising Address – AdvA) и рекламные данные (Advertising Data – AdvData), которые могут содержать одну или несколько AD-структур. 
Наконец, типы AD определяют содержимое данных AD, содержащихся в каждой ADструктуре. Результаты анализа различных типов данных AD, используемых в процессе декодирования BLE-трафика, приведены в табл. 1
Тип данных 0xFF заслуживает особого внимания, поскольку дает производителям 
устройств гибкость при определении дополнительных структур в поле AD. На рис. 3 показан 
формат структуры AD, позволяющий производителям разрабатывать собственные протоколы (например: Apple iBeacon, Google Eddystone, Radius Networks Alt Beacon и др.).
Адрес, показанный на рис. 2 и 3, является 48-битным MAC-адресом МБУ, передающего рекламный пакет. Этот адрес может быть публичным или случайным, в зависимости от флага 
TxAdd в PDU-заголовке. Публичный адрес (TxAdd=0) является стандартным 48-битным 
MAC-адресом, присвоенным IEEE, в котором 24 младших бита назначены производителем, а 
24 старших – представляют назначенный IEEE идентификатор компании. Данные адреса 
связаны с конкретным аппаратным обеспечением, что делает их уязвимыми для долгосрочного отслеживания, если они используются в процессе информационного обмена.
Случайные адреса (TxAdd=1) могут быть статическими. В этом случае они генерируются 
случайным образом всякий раз, когда МБУ перезагружается или переподключается, что также делает их уязвимыми для долгосрочного отслеживания. Случайные адреса могут быть 
либо неразрешимыми, состоящими из набора случайных чисел, либо могут быть разрешены 
в качестве постоянного адреса доверенными устройствами, имеющими ключ восстановления 
(Identity Resolving Key – IRK). Разрешаемые и неразрешимые случайные адреса можно различить по их двум старшим значащим битам, установленным в 0b01 и 0b00 соответственно.
Исходя из вышеизложенного, в работе рассматривается пассивный внешний нарушитель, 
который постоянно перехватывает и читает, но никогда не удаляет и не изменяет анализируемый BLE-трафик. В частности, нарушитель никогда не отправляет запросы на сканирование
или запросы на установление соединения и остается полностью пассивным во время атаки, 
не инициируя двунаправленного взаимодействия с целевым МБУ. Также нарушитель способен отслеживать текущий BLE-трафик для фиксации изменений в рекламных сообщениях по мере их возникновения.
На идентифицируемом МБУ активирован (включен) Bluetooth. Нарушителю необходимо 
только наблюдать рекламные Bluetooth-сообщения, отправляемые в открытом виде, и не требуется анализировать зашифрованные данные или следить за переключением каналов. Кроме 
того имеется возможность использования программно-определяемого радиоустройства 
(Software-Defined Radio – SDR) для мониторинга одного из Bluetooth-каналов (37, 38 или 39). 
Собранные и декодированные пакеты дополнительно анализируются на предмет наличия 
специфичных данных, которые могут быть использованы для идентификации местоположения МБУ и пользователя.
В определенный момент появляется возможность установить связь между произвольным 
идентификатором в рекламном сообщении и связанным с ним реальным устройством, а также постоянно наблюдать текущий рекламный BLE-трафик, чтобы отслеживать МБУ в течение максимально длительного времени. Успех нарушителя определяется как способность отслеживать МБУ в течение временного интервала рандомизации его адреса с помощью 
локального, пассивного, непрерывного наблюдения. МБУ отслеживаются для последующей 
идентификации их пользователей, поэтому способность отслеживать МБУ подразумевает 
возможность отслеживать его пользователя.
Предлагаемые метрики ориентированы на способность нарушителя отслеживать МБУ с 
течением времени по некоторой наблюдаемой сигнатуре. В частности, пусть коэффициент
анонимности ASu представляет множество пользователей, которых невозможно выделить из 
общего числа пользователей u, т. е. 
Следующей метрикой, представляющей практический интерес, является максимальное 
время отслеживания (Maximum Tracking Time – MTT), которое определим как совокупное 
время, в течение которого пользователь u может быть однозначно идентифицирован, т. е.
Алгоритм отслеживания МБУ состоит из этапа предварительной обработки данных в автономном режиме и этапа онлайн-идентификации.
На этапе предварительной обработки анализируются файлы, содержащие декодированные 
рекламные BLE-пакеты (см. рис. 1) и их полезные данные PDU в необработанном формате. 
Все собранные дампы обрабатываются в автономном режиме [3] для выявления потенциальных идентифицирующих токенов, содержащихся в рекламных сообщениях, которые позволяют отличить одно устройство от другого по соответствующему рекламному адресу. Идентифицирующий токен для данного устройства должен оставаться фиксированным в течение 
определенного периода времени и является уникальным (его значения не вступают в коллизии со значениями, сгенерированными другими устройствами в пределах соответствующего 
временного интервала).
Набор идентифицирующих токенов для заданного класса МБУ зависит от его ОС и аппаратных (программных) функций, специфичных для данных устройств, поскольку все эти 
факторы определяют структуру и содержание рекламных сообщений. В этом смысле универсальный MAC-адрес является идеальным идентифицирующим токеном, поскольку он гарантированно уникален для МБУ и постоянно связан с устройством. Идентификация токенов может осуществляться либо путем просмотра необработанной полезной нагрузки PDU
(Protocol data unit – блок протокольных данных) и выделения последовательности байт, удовлетворяющей изложенным выше требованиям, либо путем разбивки полезной нагрузки в 
соответствии со спецификацией протокола Bluetooth и определения подходящих элементов 
метаданных.
Чтобы избежать коллизий между идентифицирующими токенами, важно, чтобы длина n
бит идентифицирующего токена была достаточно большой. Если нарушитель стремится отслеживать BLE-устройство в течение определенного периода времени, например, одной недели, в области, содержащей не более m других BLE-устройств с одинаковыми типами идентифицирующих токенов (МБУ с разными идентифицирующими токенами несложно 
различить), где каждое устройство меняет свой идентифицирующий токен со скоростью не 
быстрее, чем раз в 15 минут (проведенные эксперименты показали, что значение 15 минут 
является верхней границей частоты смены идентифицирующих токенов), то целевое МБУ 
будет генерировать не более k = 672 токенов в неделю [2].
Пусть каждый идентифицирующий токен генерируется случайным образом равномерно 
(предположение, основанное на полученных экспериментальных данных). Вероятность того, 
что другое Bluetooth-устройство выдаст токены, которые не конфликтуют с одним из этих k 
токенов, составляет не менее (1 - k / 2n)
k
.
Следовательно, применив неравенство Бернулли [4], вероятность того, что все другие m
устройств выдают токены, отличные от целевого устройства, составляет не менее.
Поэтому, можно обеспечить вероятность 
коллизии, меньшую, чем p. Например, для m = 1000 устройств и p = 10−3 получаем n ≥ 39 бит. 
Следовательно, идентифицирующие токены, которые имеют длину по меньшей мере 40 бит 
(5 байт), удовлетворяют этому неравенству.
Выполнение предварительной обработки требуется только один раз для каждого класса 
устройств. Как только для класса устройств найден подходящий набор идентифицирующих 
токенов, его можно применять для отслеживания любого отдельного МБУ в данном классе.
На этапе онлайн-отслеживания нарушитель применяет алгоритм переноса адреса, который 
непрерывно отслеживает изменения адреса и любые другие идентифицирующие токены, обнаруженные на этапе предварительной обработки. Алгоритм прослушивает входящие рекламные сообщения mi
, когда они транслируются на одном из рекламных BLE-каналов с целью отслеживания целевого МБУ D за пределами точки, в которой оно рандомизирует свой 
рекламный адрес.
Если входящее сообщение содержит правильные идентифицирующие токены для соответствующего класса устройств, к которому относится D, токены извлекаются. Затем, если входящий рекламный адрес идентичен существующему рекламному адресу, аналитик 
по-прежнему знает идентификатор устройства и обновляет хранимые значения идентифицирующих токенов, если обнаружены какие-либо изменения. В противном случае, если 
рекламный адрес изменился, попытка сопоставления выполняется с использованием любого из доступных идентифицирующих токенов в качестве псевдоидентификации – в 
случае успешного сопоставления адрес устройства D может быть обновлен с помощью 
входящего адреса, и перенос адреса будет успешным. В любом из этих случаев счетчик 
тайм-аута сбрасывается, указывая, что устройство D успешно отслеживается. Если в течение определенного периода времени Tmax совпадений ни адреса, ни идентифицирующего токена не обнаружено, предполагается, что отслеживание устройства не выполнено и 
алгоритм завершается.
Для формирования идентифицирующих токенов использовалась модифицированная версия BLE-анализатора на базе SDR Xianjun Jiao’s, а также Bluetooth-анализатор для исследования различных реализаций Bluetooth и анализа необработанных данных, которые, как правило, отбрасываются сетевым стеком физического уровня. Рассматривался трафик, 
содержащий два типа рекламных сообщений: OS Advertising и Accessory Activation. 
На этапе предварительной обработки исследовались идентифицирующие токены, которые 
могут использоваться для отслеживания МБУ за пределами их рандомизации адресов. МБУ 
на базе Windows 10 объявляют полезную нагрузку PDU только с одной структурой AD типа 
данных. Специфичные данные производителя представлены на рис. 4.
Специфичные данные производителя, содержащиеся в PDU, начинаются с идентификатора компании (для Microsoft 0x0006) и 27 байт проприетарных данных (рис. 4), состоящих из 
четырех фиксированных байт, за которыми следуют 23 переменных байта. Первые фиксированные байты не различаются между устройствами, т. е. не подходят для использования в 
качестве идентифицирующих токенов. Однако 23 переменных байта выглядят равномерно 
случайными и фактически являются уникальными для каждого устройства (рис. 5).
Кроме того, полезная нагрузка остается неизменной в течение приблизительно одного часа.
Устройства под управлением macOS и iOS также регулярно обозначают свое присутствие. 
Скорость отправки рекламных сообщений в macOS и iOS намного выше, чем в Windows 10, 
до двух рекламных сообщений в секунду. Время жизни адреса варьируется: от секунд до 
двух часов, в среднем около 20 мин.
Типичный формат сообщения, как и в Windows 10, содержит поле данных, специфичное 
для производителя. Специфичные для производителя данные (рис. 6) используются для 
определенных функций в iOS/macOS, чему способствует технология BLE. Из наблюдаемых 
типов данных наиболее часто встречаются nearby и handoff.
Структура типа nearby состоит из 5 байт данных. Структура данных handoff состоит из 14 
байт данных, в которых первые байты всегда нулевые, а оставшиеся могут принимать произвольные значения, делая данную структуру хорошим кандидатом на роль идентификационного токена.
Очевидно, что типы данных, которые редко появляются в рекламных сообщениях, не подходят для идентификации токенов. Поэтому в статье рассматриваются nearby- и handoffструктуры данных как наилучшие кандидаты, поскольку они появляются на порядок чаще, 
чем любой другой тип данных.
Тип данных airdrop позволяет пользователям обмениваться файлами, используя специфичную для Apple комбинацию Wi-Fi и Bluetooth для одноранговой передачи файлов. Airdrop
генерирует значительное число рекламных событий, которые запускаются всякий раз, когда 
пользователь нажимает кнопку «Обмен» в соответствующей ОС. Для этой цели Airdrop использует отдельный случайный рекламный адрес, который нельзя связать с обычным адресом, используемым для другой рекламы, что делает его непригодным в качестве идентифицирующего токена.
Эксперименты показали, что в целом не наблюдается различий в поведении рекламных 
сообщений между наблюдаемыми устройствами iOS/macOS и Astra Linux, которые указывали бы на заметные поведенческие [3] различия между Linux-системами. 
При этом МБУ под управлением ОС Linux имеют два идентифицирующих токена (nearby, 
handoff), которые меняются через разные интервалы. В большинстве случаев, значения идентифицирующих токенов изменяются синхронно с адресом. Однако в некоторых случаях смена токена происходит не в один и тот же момент, что позволяет алгоритму переноса идентифицировать следующий случайный адрес.
Проведенные исследования показали, что автоматизация процедуры отключения/включения настроек Bluetooth в панели управления МБУ под управлением ОС 
Windows 10 не восстанавливает полезную нагрузку и адрес, используемые для широковещательного обмена, а лишь приостанавливает широковещательный обмен, приводя к 
сбросу, как рекламного адреса, так и полезной нагрузки. На рис. 7 показана схема алгоритма, обеспечивающего защиту МБУ от атак отслеживания, циклически выполняя сброс 
каждые x секунд, когда устройство не находится в состоянии соединения (чтобы не прерывать текущую связь).
Следует отметить, что для МБУ под управлением ОС Linux применяется тот же подход, 
что показан на рис. 7. Выключение и включение Bluetooth в системных настройках приведет 
к случайному выбору адреса и изменению полезной нагрузки.
Также в качестве эффективного механизма противодействия несанкционированной идентификации фактов переноса адресов на МБУ и соответствующих пользователей в будущем 
необходимо реализовать алгоритм синхронизации изменения полезной нагрузки и рандомизации адресов.
Многочисленные производители МБУ/IoT-устройств по-разному подходят к реализации 
алгоритма рандомизации адресов, поддерживаемого технологией BLE, как в силу объективных требований по ограничению энергопотребления и использованию памяти на уровне 
устройства, так и в силу сложности программного обеспечения, а также в целях минимизации затрат на разработку.
Большинство операционных систем МБУ по умолчанию используют рандомизацию адресов в качестве средства предотвращения долгосрочного пассивного отслеживания, исходя из 
того, что постоянные идентификаторы не передаются. Однако, как было показано выше, устройства под управлением Windows 10, Linux регулярно передают сообщения, содержащие 
специфичные структуры данных, которые используются для обеспечения взаимодействия 
платформы с другими устройствами в BLE-диапазоне. Наблюдая за поведением этих ОС, 
определено, что части этих структур данных позволяют реализовать мониторинг устройств 
за пределами рандомизации адресов.
Таким образом, любое устройство, которое регулярно передает данные, содержащие подходящие рекламные токены, будет уязвимо для алгоритма переноса, если оно не меняет все 
свои идентифицирующие токены синхронно с рекламным адресом. Указанная проблема 
нарушения конфиденциальности усугубляется ввиду широкого распространения вредоносных ботнет-сетей на основе BLE-устройств и дополнительными угрозами, связанными с удаленным мониторингом пользователей через скомпрометированные Wi-Fi-маршрутизаторы. 
Кроме того, дополнительные метаданные, такие как транзакции электронных платежей, а 
также другие цифровые отпечатки, могут быть объединены посредством технологии отслеживания МБУ для создания детального профиля местоположения его пользователя.
Дальнейшие исследования в данном направлении необходимо сосредоточить на анализе 
дополнительных факторов, таких как учет времени размещения рекламных сообщений. Другим интересным аспектом может быть снятие отпечатков МБУ на физическом уровне с использованием технологии SDR. Кроме того, требуется исследование других типов и классов 
угроз на канальном уровне модели ISO/OSI, реализуемых в отношении МБУ.
