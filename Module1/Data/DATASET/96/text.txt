В силу произошедших преобразовании информационной среды 
вследствие обострения напряжённости в киберпространстве между 
хакерскими группировками различных стран (по сути кибервойны), принятых 
санкций против РФ, ухода зарубежных IT компаний, предоставлявших 
комплексные решения для обеспечения безопасности, а также появления 
новых законодательных актов, таких как указ Президента Российской 
Федерации от 01.05.2022 № 250 "О дополнительных мерах по обеспечению 
информационной безопасности Российской Федерации", возникла 
необходимость в создании и внедрении отечественных продуктов. Это в 
равной степени относится к аппаратной инфраструктуре и программному 
обеспечению [1]. В связи с этим всё большую популярность в TLS обретают 
приобретают стандарты ГОСТ.
Для установления TLS-соединения требуется три обращения к серверу. 
На первом этапе происходит согласование параметров TCP-соединения. На 
втором этапе клиент и сервер обмениваются сообщениями TLS, начиная с 
Client Hello и Server Hello, на этом этапе стороны договариваются о том, какая 
криптосистема будет использоваться. Последний цикл включает проверку 
целостности установления связи TLS [3].
Концепция TLS основывается на нескольких основных 
криптографических элементах.
1. Хэш-функция. Она нужна на всех этапах работы TLS-соединения, 
от операций электронной подписи, до вычисления кодов аутентификации 
TLS-сообщений.
2. Криптосистема электронной подписи. Требуется для 
аутентификации узлов.
3. Алгоритм получения ключа для симметричного шифрования. 
Обычно используются ассиметричные алгоритмы шифрования, для 
безопасной передачи симметричного секрета.
4. Симметричный шифр. Используется для эффективного 
шифрования данных без потери производительности сервера.
Криптография по ГОСТу подразумевает использование российских 
криптографических алгоритмов только для перечисленных выше элементов. 
То есть с точки зрения архитектуры и решаемых задач TLS по ГОСТу 
идентичен обычному TLS, но с подключением российской криптографии.
Например, широко используемый в TLS алгоритм SHA-256 легко 
заменяется алгоритмом ГОСТ Р 34.11 «Стрибог», который работает в 
разрядности – 256 бит, что аналогично SHA-256. Внутри эти хэш-функции 
устроены по-разному, однако с точки зрения TLS они не имеют радикальных 
отличий [2].
Для криптосистемы электронной подписи обычно применяется 
алгоритм ECDSA, базирующийся на эллиптических кривых. Этот алгоритм 
можно заменить отечественным стандартом ГОСТ Р 34.10-2018, который 
обладает схожим математическим аппаратом. Стандарт ГОСТ Р 34.10-2018 
описывает процессы формирования и проверки электронной цифровой 
подписи, осуществляемые с применением операций в группе точек 
эллиптической кривой, определенной над конечным простым полем. [4].
Для установления общего секрета, применяемого при симметричном 
шифровании в протоколе TLS, применяют алгоритмы ассиметричного 
шифрования, часто используя варианты протокола Диффи-Хеллмана. В случае 
протокола ГОСТ-TLS до версии 1.3 применяется набор алгоритмов 
согласования секретов, который отличается от используемых в стандартных 
вариантах протокола TLS. Однако в более современной версии ГОСТ-TLS 1.3 
данная часть стандарта эквивалентна соответствующей части стандартной 
версии TLS. [3].
Для защиты передаваемых данных с использованием симметричных 
шифров используют разнообразные алгоритмы, такие как EAS. В контексте 
ГОСТ стоит выделить современные симметричные криптосистемы, 
представленные в ГОСТ Р 34.12–2015 и ГОСТ Р 34.13–2015. Эти стандарты 
описывают алгоритмы блочного шифрования, такие как Кузнечик и Магма, а 
также способы их применения. Основной принцип блочного шифрования 
заключается в разбиении открытой информации на блоки по n бит в каждом, 
где n представляет собой заданное количество бит (последний блок 
дополняется при необходимости). Каждый блок обрабатывается с помощью 
специального алгоритма, зависящего от ключа. В результате обработки 
каждого блока, получаются блоки зашифрованного текста [3].
Алгоритмы, используемые в стандарте ГОСТ и не в стандарте ГОСТ для 
TLS, отличаются на низком уровне, и их реализации различаются по 
производительности. Например, в контексте шифрования, AES обладает 
аппаратной поддержкой во многих процессорах, что существенно улучшает 
производительность по сравнению с программной реализацией. Таким 
образом, на совместимой аппаратуре шифр AES (не-ГОСТ) может 
значительно превосходить в скорости "Кузнечика" (ГОСТ), даже при том, что 
вычислительная сложность этих шифров практически идентична.
Тем не менее, оптимизированные варианты реализации "Кузнечика" 
демонстрируют достаточную производительность, сопоставимую с 
пропускной способностью типичной конфигурации TCP-стека, 
использующего современный и быстрый сетевой интерфейс в основе и 
работающего под управлением ядра Linux. В связи с этим можно утверждать, 
что ГОСТ-шифры вполне подходят для использования в веб-пространстве. 
Аналогичное утверждение справедливо и для хеш-функций.
Рассмотрим настройку ГОСТ-TLS на веб-сервере nginx, работающем 
под управлением операционной системы "ALT Workstation 10.1.990 
(Autolycus)". Для этого нам потребуется установить пакет расширения с 
поддержкой гост для криптографической библиотеки с открытым исходным 
кодом OpenSSL 1.1.1w. Для этого выполняем команду:
# apt-get install openssl-gost-engine
И включаем control-скрипт для включения поддержки ГОСТ:
# control openssl-gost enabled
Чтобы проверить доступны ли шифры ГОСТ для OpenSSL нужно 
выполнить команду:
# openssl ciphers|tr ':' '\n'|grep GOST
Корректный вывод команды выглядит следующим образом:
Далее создадим закрытый ключ и сертификат алгоритмом ГОСТ Р 
34.10-2012 TК26 (длина секретного ключа – 256 бит, публичного – 512 бит) 
OID алгоритма подписи –1.2.643.7.1.1.3.2, OID алгоритма публичного ключа –
1.2.643.7.1.1.1.1. Для этого выполним следующую команду, которая потребует 
ввести данные, которые будут отображаться в сертификате:
# $ openssl req -x509 -md_gost12_256 -nodes -days 365 -newkey gost2012_256 -
pkeyopt paramset:A -keyout nginx-selfsigned.key -out nginx-selfsigned.crt
Теперь, когда у нас есть сертификат и ключ, в конфигурации 
виртуального хоста nginx необходимо указать используемый пакет шифров:
ssl_ciphers GOST2012-GOST8912-GOST8912;
Так же в директивах ssl_certificate и ssl_certificate_key указываем 
расположение нашего сертификата и приватного ключа.
Таким образом производиться базовая настройка tls по ГОСТу. 
Интеграция стандартов ГОСТ в TLS предоставляет эффективное решение для 
обеспечения криптографической безопасности в веб-пространстве, не 
уступающее по скорости и производительности мировым стандартам. 