Возможность моделирования распространения «вирусных» программ в локальной
вычислительной сети вытекает из того, что каждая рабочая станция может
находиться только в двух состояниях – «зараженном» и «незараженном». В
качестве возможных процессов взаимодействия рабочих станций будем рассматривать
обмен информацией. В данной работе рассматривается только случай одноранговой
сети, поэтому средняя интенсивность обмена информацией между любой парой
рабочих станций считается одной и той же. Также необходимо предусмотреть
защиту от вирусов, которая может быть двух видов. Во-первых, это межсетевые
экраны, препятствующие проникновению вредоносных программ, а во-вторых,
антивирусные программы, обнаруживающие «вирусы» и уничтожающие их.
Построим формальную модель вычислительной сети, отражающую процесс
распространения «вирусных» программ. Прежде всего сопоставим локальной
сети невзвешенный граф, вершины которого представляют собой отдельные
рабочие станции. Случай невзвешенного графа соответствует одноранговой
сети, для рассмотрения сети с выделенным сервером необходимо ребрам графа
сопоставить веса, соответствующие относительной интенсивности информационного
обмена между двумя рабочими станциями.
Каждую рабочую станцию будем представлять как формальный нейрон.
При этом роль синапсов будут играть ребра графов, а величина Si(t) – характеристика 
аксона. Как и в других моделях, время в компьютерной сети можно рассматривать
как дискретную величину, тогда состояние отдельного нейрона в момент времени
t будет определяться сигналами, поступившими в предыдущий момент времени
t − 1. Сигнал, передаваемый по синапсам, может иметь два значения – 0 или
1. Ноль соответствует информации, не содержащей вредоносных программ,
а единица – распространению «вируса». Будем считать вирусы активными, то
есть «зараженная» рабочая станция передает только «зараженную» информацию.
Наличие межсетевых экранов у рабочих станций будет выражаться величиной
ri
, определяющей пороговое значение объема вредоносной информации, выше
которого происходит переключение нейрона в единичное значение, что соответствует
заражению рабочей станции. Однако это пороговое значение может повышаться
или понижаться в результате деятельности пользователя. Причем деятельность
пользователя носит случайный характер как по времени воздействия на систему
защиты, так и по величине. В результате выполнения задач, решаемых на
рабочей станции, уровень защиты может как повышаться, так и понижаться.
Кроме того, пользователь может инициировать процессы, которые могут «вылечивать»
зараженный компьютер. Этот процесс также носит случайный характер. Чтобы
учесть описанные случайные процессы, в модель необходимо ввести случайную
величину, воздействующую на уровень защищенности. В дальнейшем межсетевой
экран в момент времени t будет записываться в виде ri(1 − ζ(i, t)) , где ζ(i, t) –
случайная величина с нормальным распределением.
Важную роль в нейронных сетях играет функция отклика отдельного нейрона
θ(v), где v – сигнал, подаваемый на синапсы. В данной работе был рассмотрен
простейший случай ступенчатой функции отклика.
Таким образом, состояние рабочей станции в i-ом узле в момент времени t
может быть найдено из соотношения.
Здесь oti – суммарное воздействие «вирусов» соседних узлов на i-ую рабочую
станцию, суммирование производится по ближайшим соседям (индекс j пробегает
номера узлов, непосредственно связанных с i-ым). Рабочая станция переходит
в зараженное состояние, если воздействие вирусов превышает порог защиты.
Введем вектор состояния системы в момент времени V (t) в момент времени
t в пространстве {0, 1}
N , где N – количество узлов сети. Координатами V (t)
будут величины Si(t)
Обозначим через M матрицу связности графа сети, тогда эволюция системы
во времени будет описываться уравнением.
Здесь Θ - ступенчатая вектор-функция, R = (r1, r2, ..., rN ) – вектор пороговых
значений уровня защиты рабочих станций, I – единичная матрица, Z(t) –
матрица случайных величин.
Для характеристики скорости заражения введем время перехода локальной
сети в зараженное состояние T как минимальное время, через которое все
рабочие станции оказываются «зараженными» (Si(T) = 1,i = 1, N).
Очевидно, что наибольшим временем заражения обладает линейная цепочка
с начальным заражением крайней рабочей станции, так как в каждый момент
времени может быть заражена только одна рабочая станция, и каждый узел
испытывает воздействие только одного соседнего узла. Обозначим время заражения
линейной цепочки через T0. Для сетей, обладающих другой топологией, введем
относительное время заражения.
В начальный момент времени заражена только одна рабочая станция S1(0) =
1, S2(0) = 0, ..., SN (0) = 0.
Авторами были рассмотрены различные топологии локальных вычислительных
сетей, для которых уравнение (1) решалось численно. Для каждой топологии
локальной сети время заражения вычислялось 10 раз с дальнейшим усреднением.
Так, для широко распространенных топологий «кольцо» и «звезда» были получены
значения Tr = 0.5 и Ts = 2/N при ri = 0.5 для всех i = 1, N.
Далее был осуществлен поиск схем соединения N = 20 рабочих станций,
обладающих наибольшим относительным временем заражения τ для одинакового
порогового значения r = 0.5 для всех рабочих станций.
Поиск наиболее устойчивых к заражению топологий сети осуществлялся
методом Монте-Карло. В качестве исходной бралась матрица связности, состоящая
только из единиц. Затем применялся следующий алгоритм:
1. Изменяем выбранный случайным образом элемент матрицы.
2. Вычисляем время заражения.
3. Если, в результате такого изменения, время заражения увеличивается,
то новая топология считается более выгодной и оставляется, иначе происходит
возврат к прежней матрице связности.
4. Переход к пункту 1.
Алгоритм выполняется до тех пор, пока изменения в матрице связности не
приводят к увеличению времени заражения. При реальных расчетах вычисления прерывались, если пятьдесят подряд следующих попыток изменения матрицы
отбрасывались.
Вычисления показали, что наличие петель и ответвлений в линейной цепочке
существенно уменьшает время заражения.
