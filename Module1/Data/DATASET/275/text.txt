Node.js - чрезвычайно мощная основанная на JavaScript платформа, используемая для разработки приложений онлайн-чата, сайтов потокового видео, одностраничных приложений и многих других
веб-приложений с интенсивным вводом-выводом и веб-приложений. Построенный на движке JavaScript
V8 от Google Chrome, он используется как крупными, известными компаниями, так и новичками (например, Netflix, Paypal, NASA и Walmart).
Node.js является открытым исходным кодом и полностью бесплатен, используется тысячами
разработчиков по всему миру. Он приносит множество преимуществ, что делает его лучшим выбором,
чем другие серверные платформы, такие как Java или PHP.
Node.js - это кроссплатформенная среда выполнения JavaScript с открытым исходным кодом и
библиотека для запуска веб-приложений вне браузера клиента. Райан Даль разработал его в 2009 году, а его последняя версия v13.8.0 была выпущена 30 января. Node.js используется для создания серверных веб-приложений и идеально подходит для приложений, интенсивно использующих данные, поскольку он использует асинхронное событие.
Node.js стал де-факто инструментом для разработки серверных и сетевых приложений.
Node.js действительно быстр, поскольку он построен на движке JavaScript Google Chrome V8, его
библиотека чрезвычайно быстра для выполнения кода.Node Package Manager (NPM): Node Package Manager имеет более 50 000 пакетов, поэтому любые функции, необходимые для приложения, можно легко импортировать из NPM.
Node.js использует асинхронное программирование: все API библиотеки Node.js являются асинхронными (то есть неблокирующими), поэтому сервер на основе Node.js не ожидает API возврата данных. Сервер вызывает API, и в случае, если данные не возвращаются, сервер переходит к следующему API, а модуль Events в Node.js помогает серверу получить ответ от предыдущего вызова API. Это
также помогает со скоростью Node.js.
Без буферизации. Node.js значительно сокращает время обработки при загрузке аудио и видео
файлов. Приложения Node.js никогда не буферизуют данные и просто выводят их порциями.
Однопоточный. Node.js использует однопотоковую модель с зацикливанием событий. В результате он может обслуживать гораздо большее количество запросов, чем традиционные серверы, такие
как Apache HTTP Server.
Высокая масштабируемость. Сервер Node.js отвечает неблокирующим образом, что делает его
легко масштабируемым по сравнению с традиционными серверами, которые создают ограниченные
потоки для обработки запросов.
Эти причины более чем оправдывают популярность платформы Node.js и почему она используется большим количеством организаций и предприятий.
Модули. Модули похожи на библиотеки JavaScript, которые можно использовать в приложении
Node.js для включения набора функций. Чтобы включить модуль в приложение Node.js, используется
функция require () с круглыми скобками, содержащими имя модуля (рис. 1.).Потоки - это объекты, которые позволяют непрерывно читать или записывать данные. Существует четыре типа потоков:
 Читаемые - это типы потоков, из которых можно прочитать данные.
 Доступно для записи - это типы потоков, в которые могут быть записаны данные.
 Дуплекс - это как читаемые, так и записываемые потоки.
 Преобразование - потоки, которые могут манипулировать данными во время их чтения
или записи.
Буфер - это модуль, который позволяет обрабатывать потоки, которые содержат только двоичные данные.
Node.js включает в себя утилиту отладки, к которой может получить доступ встроенный клиент
отладки. Отладчик Node.js не упакован, но поддерживает простую проверку кода. Отладчик можно использовать в терминале с помощью ключевого слова «inspect» перед именем файла JavaScript. 