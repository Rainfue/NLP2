Протокол TCP/IP
Протокол TCP/IP, в основном разработанный для научных исследований, при своей разработке мало 
учитывает проблемы безопасности. Протокол TCP/IP, который сегодня широко применяется на практике[1], 
стал стандартом для сетевых протоколов связи.
Модель взаимодействия TCP/IP делится на 4 уровня: уровень приложения, транспортный уровень, сетевой уровень и канальный уровень[2, 3]. Отношения между уровнями представлены в таблице 1.
TCP – это полнодуплексный транспортный протокол, ориентированный на соединение. Установление 
TCP-соединения представляет собой процесс трехэтапного рукопожатия, описанный ниже.
Пакет №1: клиент отправляет пакет с установленным флагом SYN и случайным числом «x», включенным в поле порядкового номера (sequence number).
Пакет №2: при получении пакета №1 сервер в ответ отправляет пакет с установленным флагом SYN, 
а также с установленным флагом ACK. Поле порядкового номера будет содержать новое случайное число «y», 
а поле номера подтверждения будет содержать значение порядкового номера клиента, увеличенного на единицу (то есть «x+1»). Таким образом, он будет соответствовать следующему порядковому номеру, который сервер 
ожидает получить от клиента.
Пакет №3: в ответ на пакет SYN от сервера (пакет №2) клиент отправляет пакет с установленным флагом 
ACK и полем номера подтверждения с числом «y+1». По аналогии это число будет соответствовать следующему порядковому номеру, который клиент ожидает получить от сервера.
TCP поддерживает полнодуплексный режим для передачи данных, что означает, что данные могут передаваться в обоих направлениях одновременно. Перед передачей данных TCP фактически устанавливает соединение в обоих направлениях посредством трехэтапного рукопожатия. Поэтому после завершения передачи соединение в обоих направлениях должно быть закрыто. Установление TCP-соединения представляет собой процесс трехэтапного рукопожатия. Процесс завершения TCP-соединения, который представляет собой четырехстороннее рукопожатие, описанное ниже.
Клиент намеревается разорвать соединение, поэтому он отправляет сегмент данных, помеченный FIN 
и порядковым номером «u».
Сервер отвечает сегментом данных, помеченным ACK, порядковым номером «v» и порядковым номером 
подтверждения «u+1» для подтверждения сообщения FIN клиента. Клиент намеревается разорвать соединение, 
поэтому он отправляет сегмент данных, помеченный FIN, ACK, порядковый номер «w» и порядковый номер 
подтверждения «u+1».
Сервер отвечает сегментом данных, помеченным ACK, порядковым номером «u+1» и порядковым номером подтверждения «w+1» для подтверждения сообщения FIN клиента.
Существует множество потенциальных методов защиты связи с различными механизмами и расположением на уровнях протокола TCP/IP. На рисунке 1 показаны протоколы безопасности, относящиеся к каждому 
уровню стека протоколов TCP/IP. Протоколы безопасности SSL и TLS работают на транспортном уровне. Они 
используют открытые ключи для аутентификации, а затем используют симметричные ключи для обеспечения 
конфиденциальности. На прикладном уровне находятся протоколы Secure Shell (SSH) и Pretty Good Privacy 
(PGP), которые отвечают конкретным требованиям безопасности через подход, ориентированный на установление соединений и управления им [4].
Недостатки, присущие протоколу, могут быть одним из основных факторов, вызывающих уязвимости 
системы при атаках. Сетевой протокол – это общее правило для взаимодействия, которое должно соблюдаться 
повсеместно. Протокол TCP/IP, применяемый в качестве основного протокола для сети Интернет, в своей первоначальной версии уделял чрезмерное внимание развитию и удобству, не уделяя должного внимания безопасности. Поэтому многие сетевые протоколы, с присущими им недостатками безопасности, уязвимы для атак. Что 
еще хуже, некоторые уязвимости в безопасности из недочетов протокола могут быть напрямую использованы 
злоумышленниками для атаки на системы клиентов. В данной статье подробно рассматриваются проблемы безопасности, присущие протоколу TCP/IP. 
TCP устанавливает соединение посредством трехстороннего рукопожатия. При этом происходит обмен 
тремя пакетами сообщений. Первый – это пакет SYN; второй – пакет SYN/ACK, указывающий на ответ на первый пакет SYN и продолжающий процесс рукопожатия; третий - просто ответ, представленный в виде пакета 
ACK. Если сторона A является клиентом (активным участником), а сторона B – получателем, возможная угроза 
будет заключаться в следующем: 
− Злоумышленник может прослушать SYN/ACK сообщение стороны B. 
− Злоумышленник отправляет пакет RST на сторону B, а затем SYN на фиктивную сторону A для установления нового соединения. 
− Сторона B отвечает на новое соединение SYN/ACK. 
− Злоумышленник снова имитирует сторону A, чтобы отправить ACK стороне B. 
Таким образом, злоумышленник успешно разрушил соединение. Если он воспользуется возможностью 
инъекции пакетов данных, это приведет к более серьезным последствиям. Данные, передаваемые через соединение по протоколу TCP, воспринимаются как сегменты с указанным порядковым номером из 32-ух 32-битных 
целых чисел. Начальный порядковый номер (ISN) генерируется при рукопожатии TCP. Механизм генерации 
зависит от протокола. Злоумышленник может получить ISN предыдущего соединения, отправив запрос на соединение на целевой узел. Он может измерить время в пути между атакующим узлом и целевым узлом. Узнав 
ISN и RTT последнего соединения, легко предсказать ISN следующего соединения. Если атакующий выдает 
себя за доверенный узел, чтобы отправить TCP-соединение целевому узлу, и ему удается предсказать порядковый номер TCP целевого узла, он может создать поддельный вредоносный пакет, который будет принят целевым узлом. 
Протокол IP обеспечивает передачу данных без соединений между сетями. Протокол IP отправляет пакеты данных в соответствии с адресом назначения в заголовке пакета IP. То есть, когда IP маршрутизирует пакет, 
он не проверяет адрес источника, указанный в заголовке, считая, что адрес источника в заголовке пакета является IP-адресом, который отправляет этот пакет. Таким образом, у многих служб, которые полагаются на подтверждение адресов источника IP, возникнут неполадки. Одним из самых серьезных способов атак является 
атака через подмену IP-адреса[5]. 
Возьмем в качестве примера брандмауэр, некоторые сетевые брандмауэры проверяют подлинность IPпакетов только от надежных ресурсов. Однако при проверке IP-адреса не проверяется, является ли IP-адрес источника в пакетах истинным адресом узла-источника. Злоумышленник может подделать доверенный адрес источника IP, чтобы обойти этот брандмауэр. Кроме того, некоторые IP-адреса назначены в качестве разрешений 
безопасности для сетевых приложений, злоумышленник может легко получить такое разрешение, подменив 
доверенный IP-адрес источника. Фактически, любой злоумышленник может воспользоваться такой возможностью, чтобы незаметно атаковать через поддельный IP-адрес. 
Защититься от SYN-атак довольно сложно. Однако для их предотвращения можно принять следующие 
меры:
− Установить соответствующие параметры ядра, чтобы заставить систему сбросить таймаут пакета запроса соединения SYN. В то же время, система может быстро обработать недействительный пакет запроса 
SYN, уменьшив значение тайм-аута и удлинив очередь ожидания;
− Внести коррективы в маршрутизацию сегмента сети, которые могут включать ограничение потока 
и количества полуоткрытых пакетов SYN;
− Выполнить соответствующий перехват TCP на маршрутизаторе. Только те пакеты данных, которые 
завершают процесс трехстороннего рукопожатия TCP, могут попасть в сегмент сети, чтобы защититься от таких атак;
− Отказаться от стратегии аутентификации на базе адресов;
− Использовать фильтрацию пакетов. Сервер на внутренней локальной сети должен с осторожностью 
относиться к любым хостам за пределами локальной сети;
− Использовать декодирование. Простым способом защиты от поддельных IP-адресов является запрос на 
передачу и аутентификацию с помощью декодирования. Декодирование может быть наиболее эффективным 
методом среди описанных.
Описанные методы защиты протокола TCP/IP позволяют решить проблему безопасности сетей от SYNатак. Что в свою очередь поомжет поддерживать устойчивость сетевых ресурсов организации к данному типу 
киберугроз.