В настоящее время существует большое количество программных платформ, которые помогают разработчику создать качественный продукт в кратчайшие
сроки. Необходимо учитывать тот факт, что у каждой
такой среды есть свои достоинства и недостатки, которые определяются исходя из поставленной задачи.
Именно поэтому выбор наиболее удобного и облегчающего разработку каркаса (framework), который
определит структуру программной системы, является
актуальной проблемой для программистов. В ходе
рассмотрения и сравнения ряда платформ разработчику необходимо учитывать достаточно большое число характеристик, которые влияют на скорость работы готовой программы, функциональность, объем
исходного кода и т. д. Таким образом, разработчикам
необходим простой, но в тоже время эффективный
инструментарий, позволяющий представлять информацию компактно, не упуская важных деталей. Таковым может выступить метод Data Envelopment
Analysis [1].
Целью данной работы является рассмотрение метода DEA для оценки эффективности использования
различных PHP-каркасов. Метод Data Envelopment
Analysis был предложен в 1978 году учеными
A. Charnes, W. W. Cooper, E. Rhodes [1]. Первоначально метод предназначался для оценки эффективности функционирования организаций некоммерческого типа. Данная методика постоянно развивается и
совершенствуется. В России ее используют около двадцати лет. Основой метода DEA является построение границы эффективности в многомерном пространстве
входных и выходных переменных, которые описывают объекты, требующие определения эффективности
[4]. Данный метод принадлежит классу граничных
методов. Граница эффективности строится по реальным данным и является оценкой производственной
функции для случая, когда выход является векторным. Степень эффективности определенного объекта
зависит от расстояния между ним и границей эффективности: чем дальше объект находится от границы,
тем его эффективность ниже. Объекты, которые находятся на границе, являются эффективными. Каждый
оцениваемый объект описывается совокупностью показателей. Метод подразумевает разделение показателей на входные и выходные. Входные показатели –
это используемые ресурсы, а выходные – это полученные результаты. Необходимо собрать исходные
данные для всех показателей. Затем в многомерном
пространстве с координатами, соответствующими
выбранным показателям, нужно представить точки,
соответствующие исследуемым объектам. Если теперь построить гиперповерхность, охватывающую эти
точки, то это и будет граница эффективности. Если
точка, соответствующая исследуемому объекту, расположена на границе эффективности, то функционирование такого объекта считается эффективным. Объекты, у которых соответствующие им точки расположены не на границе эффективности – неэффективные.
Чем они дальше от границы эффективности, тем нижеих уровень эффективности [5]. Конечно, для построения границы эффективности и проведения всех необходимых вычислений используются математические
модели и программное обеспечение. Программным
путем вычисляется и показатель эффективности для
каждого исследуемого объекта. При использовании
метода DEA важную роль играет такое понятие, как
эффект масштаба (returns to scale). Эффект масштаба
означает следующее. Если при n-кратном увеличении
объема ресурсов имеет место также n-кратное увеличение объема продукции, тогда эффект масштаба будет постоянным. Если же при n-кратном увеличении
объема ресурсов увеличение объема продукции не
будет в точности n-кратным (оно может быть, как
больше n, так и меньше), тогда эффект масштаба будет переменным [2].
В данной работе сравниваются 16 каркасов [3]
по 5 параметрам: производительность, занимаемая
память, время выполнения, количество подключаемых файлов и число поддерживаемых версий PHP (в
данной работе использованы такие версии, как PHP
5.6, PHP 7.0, PHP 7.1). Для применения метода анализа среды функционирования была использована программа DEAP, являющаяся бесплатной и находящейся в открытом доступе. На вход программе подавались значения каждого из 5 параметров для всех каркасов. 