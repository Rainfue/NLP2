Каждая учетная запись должна иметь пароль, который может быть установлен либо 
администратором базы данных (DBA), либо самим пользователем. База данных хранит зашифрованную 
версию пароля в таблице словаря данных. Если учетная запись напрямую связана с учетной записью 
операционной системы, проверку пароля можно обойти. Начиная с ORACLE8, срок действия паролей 
может истекать, и администратор базы данных определяет, при каких условиях пароль можно 
использовать повторно. Профили можно использовать для обеспечения соблюдения стандартов паролей, 
таких как минимальная длина, а также существует возможность автоматической блокировки учетных 
записей после нескольких последовательных неудачных попыток подключения. Однако доступ к базе 
данных возможен только в том случае, если у вас сначала есть прямой или косвенный доступ к серверу, 
на котором работает база данных. Поэтому первым шагом к обеспечению безопасности вашей базы 
данных является защита платформы и сети, в которых находятся компоненты. В этом случае должна быть 
гарантирована безопасность операционной системы. ORACLE использует ряд файлов, к которым у 
пользователя не должно быть прямого доступа. Например, файлы данных и файлы онлайн-журналов 
считываются и записываются только фоновыми процессами ORACLE. Это означает, что только 
администратор базы данных, который создает и удаляет эти файлы, нуждается в прямом доступе на 
уровне операционной системы. Файлы резервных копий, такие как файлы экспортного дампа, также 
должны быть защищены [4, c. 199-204].
Материалы и методы
Использован сравнительный метод для анализ существующих моделей построения системы 
защиты. Также был задействован описательный метод для выделения основных факторов построения 
системы защиты. В качестве материалов взяты научные работы Пола Симонса, Роберта Деша, Харви 
Ньюмена и других. 
Результаты
Для контроля доступности системных команд можно использовать роли системного уровня, что 
упрощает администрирование базы данных. База данных предлагает определенные роли системного 
уровня и стандартные роли. Эти роли могут предоставлять разрешения, которые можно передать через 
предложение «с опцией предоставления» команды «grant» [5, c. 3]. Существуют различные роли 
системного уровня, которые можно сопоставить с ролями администрирования базы данных. Эти роли 
важны для облегчения управления журналом аудита. Также важно отметить, что для создания учетных 
записей базы данных требуются разрешения администратора базы данных, поэтому рекомендуется 
внимательно просмотреть процесс настройки учетной записи пользователя и тщательно выбрать 
необходимые разрешения. Профили позволяют устанавливать ограничения на ресурсы системы и базы 
данных, а также управлять политикой паролей для пользователей. Если в базе данных не определены 
конкретные роли, используется профиль по умолчанию, который устанавливает неограниченные ресурсы 
для всех пользователей.
Начиная с ORACLE8, профили можно использовать для управления поведением пароля, включая 
срок действия пароля, его повторное использование и сложность. Например, срок действия пароля может 
быть ограничен, а учетная запись может быть заблокирована, если пароль слишком старый. Пароли также 
могут иметь определенный уровень сложности, и учетная запись может быть заблокирована, если 
определенное количество попыток входа в систему окажется неудачным. Например, учетная запись будет 
заблокирована, если пять последовательных попыток входа не удастся, если для ресурса 
FAILED_LOGIN_ATTEMPTS установлено значение 5. Можно изменить профиль, используя команду 
изменения профиля, чтобы настроить параметры. Важным параметром является «PASSWORD_LIFE_TIME», 
определяющий срок действия пароля в днях. Если срок действия пароля истек, его необходимо изменить 
при следующем входе в систему, если в вашем профиле не установлен льготный период 
«PASSWORD_GRACE_TIME» [6, c. 713-716]. Если пароль не будет изменен в течение этого льготного 
периода, учетная запись будет деактивирована. Чтобы предотвратить повторное использование пароля, 
вы можете использовать параметры «PASSWORD_REUSE_MAX» или «PASSWORD_REUSE_TIME». Эти 
параметры активируются отдельно или одновременно, что позволяет указать, сколько дней должно 
пройти, прежде чем пароль можно будет использовать повторно, или сколько раз пароль необходимо 
изменить, прежде чем его можно будет использовать повторно. Эти меры призваны повысить 
безопасность, предотвращая повторное использование пользователями одних и тех же паролей.
Сложность пароля также может быть повышена для соответствия определенным стандартам 
безопасности. Вы можете установить минимальные требования, такие как длина пароля, избегать простых 
слов и требовать цифры или специальные символы. Это контролируется параметром 
«PASSWORD_VERIFY_FUNCTION», который задает имя функции, проверяющей пароль. Если пароль 
пользователя не соответствует указанным критериям, он будет отклонен. Управление политиками и 
профилями паролей важно для обеспечения безопасности базы данных и обеспечения того, чтобы 
пользователи использовали надежные пароли. Это важный механизм защиты, позволяющий 
предотвратить несанкционированный доступ к базе данных и обеспечить целостность данных. Когда 
вносятся изменения в профиль DEFAULT, важно убедиться, что эти изменения применяются ко всем 
пользователям профиля. Это также влияет на пользователей SYS и SYSTEM, чьи пароли должны 
управляться в соответствии с политиками профиля. Чтобы упростить управление профилями, вы можете 
создать новую роль и назначить ее всем пользователям, не являющимся администраторами баз данных 
и не использующим приложения [7, c. 26156-26162].
Обсуждение
Однако важно отметить, что вы можете забыть назначить профиль новым пользователям. 
Рекомендуется выбрать для функции проверки пароля осмысленное имя, а не «VERIFY_FUNCTION». Это 
имя должно быть легко понять и запомнить, чтобы другие администраторы баз данных могли понять эту 
функцию. Например, подходящим именем может быть «VERIFY_ORACLE_PASSWORD». Oracle Enterprise 
Manager (OEM) Security Manager предоставляет простой в использовании способ создания профилей и 
настройки параметров ресурсов и паролей, управляемых профилями. Это значительно упрощает 
управление политиками и профилями паролей. При использовании предложения «идентифицировано 
извне» проверка базы данных осуществляется через учетную запись операционной системы, 
используемую для доступа к базе данных. Имена учетных записей системы и базы данных должны быть 
идентичными. Другой метод — создать учетную запись с «невозможным паролем», который объясняется 
далее в этой главе. Это гарантирует, что пользователь сможет войти в учетную запись базы данных только 
с использованием соответствующей системной учетной записи. Разрешения на уровне объекта позволяют 
пользователям получать доступ к данным, которые им не принадлежат. Роли можно использовать для 
упрощения управления разрешениями. Кроме того, при определенных условиях необходимы явные 
разрешения. Разрешения создаются с помощью команды «grant» и записываются в словарь данных. 
Пользователям может быть предоставлен доступ к различным объектам, включая таблицы, 
представления, последовательности и процедуры [8, c. 1172].
Представление USER_PASSWORD_LIMITS описывает параметры профиля пароля для пользователя и 
содержит те же столбцы, что и USER_RESOURCE_LIMITS. Версии этого представления для администратора 
баз данных не существует, поскольку оно содержит только информацию о текущих сеансах пользователей. 
Затраты на все доступные ресурсы можно просмотреть в представлении «RESOURCE_COST». 
Администратор базы данных может просмотреть все ограничения ресурсов профиля через DBA_PROFILES. 
Столбец Resource_Type в DBA_PROFILES указывает, является ли это профилем PASSWORD или KERNEL. 
Отзыв разрешений, предоставленных с помощью опции «с опцией администратора», выполняется 
немного другим способом. Например, если вы дадите MCGREGOR системное разрешение с опцией «с 
опцией администратора», MCGREGOR сможет передать это разрешение BPOTTER. Однако если вы 
отзовете разрешение MCGREGOR, BPOTTER сохранит новое системное разрешение. Представление 
USER_PASSWORD_LIMITS описывает параметры профиля пароля для пользователя и содержит те же 
столбцы, что и USER_RESOURCE_LIMITS. Версии этого представления для администратора баз данных не 
существует, поскольку оно содержит только информацию о текущих сеансах пользователей. Если вы 
хотите просмотреть затраты на все доступные ресурсы, вы можете сделать это с помощью представления 
RESOURCE_COST. Администратор базы данных может просмотреть все ограничения ресурсов для всех 
профилей через «DBA_PROFILES». Столбец Resource_Type в DBA_PROFILES показывает, является ли это 
профилем PASSWORD или KERNE [9, c. 810-819].
В SQLPlus доступен дополнительный уровень безопасности, который позволяет отключать 
определенные команды для определенных пользователей. Это можно использовать, чтобы пользователи 
с разрешениями UPDATE для таблицы не могли, например, использовать CLI SQLPlus для 
неконтролируемого обновления таблицы. Эта функция также позволяет администратору базы данных 
запрещать пользователям доступ к операционной системе через SQLPlus (с помощью команды «host»). 
Этот метод полезен, когда приложение включает доступ SQLPlus и вы не хотите, чтобы пользователи 
каким-либо образом получали доступ к операционной системе. По умолчанию, когда вы подключаетесь с 
клиентского компьютера к серверу базы данных или от одной базы данных к другой, используя ссылку на 
базу данных, Oracle передает пароли в незашифрованном виде, если не указано иное. 
Начиная с Oracle8, вы можете установить параметры, которые заставят Oracle шифровать пароли перед 
передачей. Чтобы включить шифрование пароля, установите следующие параметры: для ваших 
клиентских компьютеров установите для параметра «ORA_ENCRYPT_LOGIN» значение TRUE в файле 
«sqlnet.ora». Для ваших серверных компьютеров установите для параметра «DBLINK_ENCRYPT_LOGIN» в 
файле «init.ora» значение TRUE. После установки этих параметров (а также после завершения работы и 
перезапуска базы данных) ваши пароли будут шифроваться при передаче от клиента к серверу и с одного 
сервера на другой [10, c. 171-187].
Заключение
С учетом постоянно растущей угрозы кибератак и утечек данных, придерживаться современных 
стандартов безопасности становится необходимостью, а не просто рекомендацией. Важно подчеркнуть, 
что безопасность – это не только технические меры, но и сознательный и организованный подход к 
управлению данными и доступом к ним. Это включает в себя регулярное обновление систем, мониторинг 
и реагирование на потенциальные угрозы, обучение персонала и соблюдение соответствующих законов 
и регуляций. Применение передовых методов шифрования, многократная проверка данных, установка 
сильных паролей и аутентификация двухфакторным методом – все это ключевые составляющие 
безопасности данных. Также не следует забывать о регулярных аудитах безопасности и тестировании на 
проникновение для выявления уязвимостей. В современном мире, где ценность данных становится все 
более высокой, компании и организации не могут позволить себе пренебрегать защитой данных. 
Безопасность данных должна быть включена в бизнес-стратегию с самого начала, чтобы обеспечить 
долгосрочную устойчивость и доверие клиентов.