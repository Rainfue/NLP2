В настоящее время веб-приложения используются в самых разных 
сферах жизни человека, как для индивидуального использования, так и 
в коммерческих целях. Большинство современных веб-приложений 
представляют собой довольно сложные проекты, которые являются результатом работы большого количества разработчиков [1].
Существует множество различных технологий разработки вебприложений. Одним из наиболее используемых для разработки серверной части, является язык программирования PHP, который обладает 
следующими преимуществами: с помощью него web-разработчик может быстро создать профессиональный web-сайт; PHP код можно внедрять в HTML страницу; поддержка большого количества БД «из коробки».
С течением времени, для программистов на первый план выходят 
такие аспекты, как скорость и качество разработки. Поэтому все большую и большую популярность за последнее время набрали PHPфреймворки. Благодаря их использованию, экономится большое количество временных ресурсов, появляется возможность избавления от 
проблем, связанных с повторением кода и уменьшается нагрузка на процесс разработки программного продукта.
В настоящее время основой большинства PHP - фреймворков является архитектура MVC (Model View Controller), позволяющая изменить логику приложения, не затрагивая интерфейсной части, что помогает упростить весь процесс разработки и дает возможность избежать 
путаницы [2]. Front Controller - шаблон проектирования, который является составной частью фреймворков, так же широко используется в 
мире информационных технологий. Он является диспетчером запросов 
и, в зависимости от URL запускает нужный контроллер с нужными параметрами. В этом ему помогает Router, занимающийся непосредственно разбором URL и применением различных правил. Без Front
Controller разработка с применением какого-либо фреймворка не имела 
бы смысла. В ходе выполнения работы был проведен анализ с целью выявления особенностей использования, преимуществ и недостатков существующих фреймворков. Было выделено 4 наиболее популярных PHP –
фреймворка:
1. ZEND FRAMEWORK – созданный и поддерживаемый компанией Zend, сотрудники которой являются авторами языка PHP. Основывается на объектно-ориентированных (ОО) принципах, простоте в использовании, и тщательно тестируемом коде с применением agile методов [3]. 
Основные преимущества:
1) реализует много объектно-ориентированных концепций, 
например, интерфейсы и наследование классов, что позволяет 
реализовать собственный индивидуальный функционал и использовать его в других проектах;
2) огромное количество компонентов, позволяющих использовать 
готовое решение для большинства задач;
3) простота в интеграции других библиотек;
4) поддерживает множество различных баз данных включая MySQL, 
Microsoft SQL Server, SQLite, MariaDB, Oracle, IBM DB2, 
PostgreSQL, and Informix Dynamic Server.
Недостатки:
1) сложен в освоении для новичка, так как имеется огромный материал для изучения и много нюансов для понимая;
2) из-за большого количества компонентов, ZF занимает много памяти;
3) слабое русскоязычное сообщество;
4) медленная скорость развития.
ZF целесообразно использовать при разработке несложного приложения, работа которого в основном заключается в извлечении данных 
из БД и выводу на экран; или при недостаточном количестве опыта, 
чтобы сделать каркас для своего приложения;
2. CODEIGNITER – MVC фреймворк с открытым исходным кодом, написанный на языке программирования PHP. 
Основные преимущества:
1) простой в освоении для новичка;
2) фреймворк дает свободу программисту, не создавая каких –
либо структурных ограничений и конвенций;
3) является одним из наболее быстрых и не требовательных к ресурсам фреймворков;
4) поддерживает множество различных баз данных включая 
MySQL, Microsoft SQL Server, SQLite, Oracle, PostgreSQL.
Недостатки:
1) из-за поддержки PHP4 содержится большое количество лишнего кода;
2) нет встроенной ORM (Object Relational Mapping);
3) отсутствие гибкого API и консоли;
4) нет встроенной системы разделения прав;
5) неустойчивость к CSRF (Сross Site Request Forgery) – атакам.
CodeIgniter – PHP-фреймворк с очень простым процессом установки, требующим минимальной конфигурации. Главными его достоинствами является простота в использовании и наличие отличной документации. Кроме того, к плюсам так же можно отнести быстродействие 
сайтов, разработанных на CodeIgniter. 
3. CakePHP – это быстроразвивающийся фреймворк, предоставляющий расширяемую архитектуру для разработки, развертки и обслуживания веб-приложений. Как и в объектно-реляционных фреймворках 
он использует шаблон проектирования MVC [4]. 
Основные преимущества:
1) наличие компонентов для авторизации, списка контроля доступа, управления сессиями и cookies;
2) поддержка компонентов для генерации и заполнения форм, 
управления cache, деления на страницы;
3) поддержка Simple Test;
4) автогенератор кода.
Недостатки:
1) небольшая производительность;
2) неполная документация и отсутствие сформированного русского сообщества;
3) низкая скорость развития;
4) неустойчивость к CSRF (Сross Site Request Forgery) – атакам.
В основе CakePHP лежит парадигма, позволяющая увеличить продуктивность разработки и позволяющая программисту писать меньше 
кода. Благодаря легкости в использовании и следованию принципу “соглашение важнее конфигурации” данный фреймворк стал очень популярным. 
Главный недостаток у CakePHP это небольшая производительность и низкая скорость развития, из-за чего часть разработчиков смотрят в сторону других фреймворков.
4. YII – это высокоэффективный PHP-фреймворк, в основе которого лежит компонентная структура. Он позволяет максимально применить концепцию повторного использования кода, что позволяет существенно ускорить процесс веб-разработки [5].
Основные преимущества:
1) высокая производительность относительно других фреймворков, 
написанных на PHP;
2) поддержка интерфейсов ActiveRecord и DAO для работы с БД;
3) высокий уровень безопасности кода, а также поддержка аутентификации и авторизации;
4) простота в интеграции других библиотек;
5) поддержка REST (Representational State Transfer).
Недостатки:
1) относительно сложный в освоении для новичков;
2) обладает сильной зависимостью классов;
3) фреймворк сравнительно молодой по сравнению с конкурентами.
Фреймворк YII опережает своих главных конкурентов CakePHP и 
CodeIgniter по гибкости и безопасности. Он идеально подходит для разработки веб сайтов и приложений с большим объемом кода. Благодаря 
высокой скорости исполнения кода и способности противостоять многим кибер-атакам, фреймворк является привлекательным выбором для 
использования в разработке крупномасштабных web-проектов, несмотря на относительную сложность в освоении.
Выбирая PHP-фреймворк необходимо знать, для чего он 
предназначен, и что должен делать. При неправильном выборе фреймворка может быть сильно усложнен процесс разработки, а также готовое 
приложение может нерационально использовать доступные ресурсы.
Каждый из рассмотренных фреймворков по-своему хорош и удобен. Поэтому при планировании разработки необходимо тщательно 
взвесить все “за” и “против”.