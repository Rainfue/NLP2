Данная статья посвящена изучению инструментов, которые участвуют в процессе создания webприложений. Необходимо уделить особое внимание актуальности инструментов при выборе с дальнейшей перспективой развития без необходимости их изменения. Данная исследовательская работа
нацелена на рассмотрение инструментов для web-разработки, а также выделения основных критериев,
на которые стоит первостепенно ориентироваться до начала разработки. В результате данного исследования сделаны выводы относительно инструментов для разработки web приложений с точки зрения
их эффективности, а также выделены основные критерии, на которые необходимо опираться при создании web-приложения
Прежде, чем приступать к разработке web-приложения, необходимо определиться относительно
инструментов, которые будут использоваться при разработке. Web-приложение можно разделить на
три условные части: серверную часть, клиентскую часть и базу данных (БД). Инструменты, которые
будут использоваться в разработке, включают в себя языки программирования, специализированное 
программное обеспечение (ПО) с включёнными в него средами разработки и дополнительные системы,
с помощью которых производиться управление БД. Фреймворком называют среду разработки, которая
включает в себя базовые функции и логические конструкции, упрощающие процесс разработки.
Разработка по направлению front-end создаёт клиентскую часть приложения, программный интерфейс, с помощью которого пользователь может взаимодействовать с ограниченных количеством
возможностей, предоставляемых сервером. В эту сферу разработки входят модальные окна, кнопки,
таблицы и разного рода блоки, использующиеся в web-приложении.
Разработка по направлению back-end направлена на создание основной функциональности webприложения с применением логических операций и вычислений. Back-end принимает запросы пользователя, который работает с front-end частью web-приложения. Back-end задействует данные, которые
хранятся в БД, которая в свою очередь используется в web-приложениях для того, чтобы хранить данные, используемые в back-end и отображаемые front-end. Информация, хранящаяся в БД, может быть
разного рода: от личной информации пользователей до внутренних идентификаторов, присваиваемых
сущностям, фигурирующим в web-приложении [1].
Анализируя вышесказанное можно сделать вывод, какие пункты необходимо определить перед
разработкой web-приложения:
? Язык программирования, который будет использоваться при разработке серверной части
web-приложения;
? Фреймворк, который будет использоваться в процессе разработки клиентской части webприложения;
? Инструменты для взаимодействия между клиентом и сервером;
? Систему управления данными, которая будет использоваться в web-приложении, для управления БД;
При разработке web-приложения необходимо определить на каком уровне абстракции будет
производиться разработка. Существует три уровня:
1. К первому уровню абстракции относится разработка исключительно на языке программирования без использования фреймворков. Этот уровень достаточно тяжёлый в исполнении и используется в исключительных случаях, когда по каким-то причинам существует ограничение на использования
фреймворка, который содержит базовые функции для упрощения и ускорения процесса разработки.
Данный уровень также подходит для небольших программ, которые не нуждаются в дальнейшей модернизации и развитии.
2. Ко второму уровню абстракции можно отнести разработку с использованием выбранного
фреймворка. Данный уровень используется для реализации приложений средних размеров и потенциально развивающихся. Сложность заключается в переходе от одного фреймворка к другому и в изменении уровня абстракции, потому как потенциально развивающееся среднее приложение имеет возможность разрастись и превратится в крупное.
3. К третьему уровню абстракции причисляют разработку web-приложений с помощью CMS
(Сontent management system). CMS является комплексом решений в виде конструктора, с помощью которого создаётся каркас и в последствии реализуется структура web-приложения, состоящая из модулей. В данном подходе отсутствует использование каких-либо языков программирования и фреймворков, а соответственно оптимизировать подобное приложение крайне сложно, потому к глубинной структуре доступ отсутствует [2].
При разработке серверной части приложения необходимо определить язык программирования.
Существует множество вариантов, однако, самыми частыми вариантами являются:
? Python – является универсальным и самым часто используемым языком в мире, хорошо
подходит для серверной разработки и имеет простой синтаксис. Для данного языка существует огромное количество библиотек, которые упрощают разработку.
? JS (Java Script) – быстроразвивающийся язык программирования, имеющий огромный потенциал. Изначально данный язык задумывался как инструмент для анимаций в браузерах, однако, на 
настоящие время на Java Script пишется 95% front-end, а также создана возможность использовать JS в
качестве серверного языка.
? Java – для работы с данным инструментом требуется много опыта, это тяжёлый в изучении
и использовании язык программирования имеющий специфические возможности. Подходит для крупных проектов с большой командой разработчиков. Порог входа в эту технологию также большой.
Следующим шагом в разработке web-приложения является выбор системы управления БД
(СУБД). Чаще всего используются следующие инструменты:
? PostgreSQL – является объектно-реляционной системой с помощью которой можно управлять БД. Базируется данный инструмент на распространённом, специализированном языке для баз
данных SQL.
? MySQL – является реляционной системой, с помощью которой производится процесс управления БД. Данная СУБД на данный период времени самая популярная система управления БД в контексте web-приложений.
На рисунке 1 представлено сравнение вышеперечисленных СУБД. Основанием выбора пунктов
сравнения являются самые распространённые критерии при выборе подобных технологий.
Для разработки клиентской части web-приложения разработчиками используется стандартный
набор инструментов. Существует три базовых инструмента с помощью которых выстраивается основа
web-приложения: HTML, CSS, JavaScript.
? HTML – это инструмент, с помощью которого выстраивается каркас, являющий собой структуру web приложения. HTML (hypertext markup language) - язык гипертекстовой разметки, представляет
из себя множество ссылок, соединяющих web-страницы и формирующих из этих страниц единую структуру. Данный инструмент обязателен в использовании и лежит в основе любого из фреймворков, которые способны выстраивать структуру страницы. В настоящее время стабильной и самой последней 
версией данного инструмента является HTML5. Эта версия поддерживается подавляющим большинством браузеров за исключением старых или почти не использующихся.
? CSS –инструмент, предназначенный для стилизации web-страниц с помощью взаимодействия с HTML. Путём специализированных механизмов и техник при использовании CSS можно изменить поведение сущностей структуры, а также визуальные составляющие и характеристики блоков. С
помощью CSS возможно создавать различные анимации при взаимодействии пользователя с содержимым web-приложения. Сейчас существуют модернизированные инструменты, которые предоставляют доступ к расширенным возможностям при использовании CSS, это LESS и SASS.
Leaner Style Sheets (LESS) – является динамическим языком стилизации, созданным в 2009 году. Это препроцессор, преобразующий CSS в LESS-программу с подобным с точки зрения семантики
наполнением.
Syntactically Awesome Style Sheets (SASS) – является метаязыком стилизации, который ускоряет написание CSS, а также является препроцессором и имеет свой синтаксис.
? Возможность создания динамики на web-странице предоставляет такой инструмент разработки, как JavaScript, являющийся объектно-ориентированным языком программирования верхнего
уровня. Данный инструмент позволяет напрямую взаимодействовать с элементами web-страницы и
отслеживать действия пользователя.
Инструменты, перечисленные выше, являются необходимым минимумом для построения клиентской части web-приложения, однако, в последнее время сфера front-end превратилась в отдельное
направление, требующее чёткого понимания, процессов и технологий, в ней присутствующих [3].
Существуют инструменты, которые уже содержат в себе ряд базовых функций, часто используемых при разработке клиентской части, а также при помощи данных инструментов возможно легко решать задачи, чаще всего появляющиеся перед разработчиками в процессе разработки, такие инструменты называют фреймворками. Фреймворк – является программной платформой, которая способна
определять структуру программной системы. Фреймворк является программным обеспечением, которое облегчает разработку больших программных продуктов.
На данный момент существует три популярных фреймворка, которые лидируют на рынке в сфере front-end. Лидирующим фреймворком является React. Интерес к данному инструменту вызван хорошо организованной рекламной компанией. На Рисунке 2 можно увидеть график распределения приложений на рынке в зависимости от выбранного фреймворка. 
