Уже несколько десятилетий веб-приложения востребованы практически во всех сферах
деятельности человека и их популярность только увеличивается. В связи с этим растет и качество разработки. Практически каждую неделю появляется новая библиотека, фреймворк, нововведение в языке программирования или даже язык для веб-разработки.
Все это замечательно, но есть и обратная сторона такого стремительного развития. Практически все начинающие программисты, желающие начать разрабатывать веб-приложения, теряются во всем этом множестве новых веб-технологий и языков программирования. А опытные разработчики редко говорят о вспомогательных библиотеках и инструментах, работающих только в связке с конкретным фреймворком (Vue, Angular, React). Но без этих инструментов нельзя построить полноценное веб-приложение. Рассмотрим один из современных
подходов разработки веб-приложений: с помощью фреймворка Vue.
Инструменты для веб-разработки на основе Vue.js
Vue – современный веб-фреймворк для создания пользовательских интерфейсов, который быстро развивается. Он может легко интегрироваться со множеством библиотек и с существующими веб-приложениями. Чаще всего Vue применяют для реализации одностраничных приложений [1]. Для создания полноценного сайта, фреймворк необходимо использовать с современными инструментами и дополнительными библиотеками. Наиболее популярными из таких инструментов и библиотек являются:
Vuex – библиотека для управления состоянием приложения;
Vue Router – библиотека маршрутизации по сайту;
Vue-devtools – браузерный инструмент разработчика;
Vuetify – библиотека пользовательского интерфейса;
Рассмотрим каждый инструмент подробнее.
При создании крупных или средних одностраничных приложений в большинстве случаев возникает потребность глобально отслеживать состояние всего приложения, а не только
в определенном компоненте Vue. Для решения этой проблемы самым лучшим вариантом является использование библиотеки Vuex, которая представляет собой централизованное хранилище всего приложения. Vuex помогает управлять состоянием за счет написания дополнительного кода [2].
Работу Vuex можно разделить на четыре шага.
1) Из компонента Vue происходит вызов некоторого действия.
2) В действии происходит асинхронное общение с сервером и передача от него
данных в приложение. После этого совершается инициирование мутации.
3) В мутации выполняется некоторая обработка данных, иногда с применением
инструментов разработчика и запись в хранилище.
4) Компонент Vue подгружает в себя новые данные из хранилища.
Ни одно полноценное одностраничное приложение не может обойтись без маршрутизации. Для ее реализации на базе Vue необходимо использовать библиотеку Vue Router. C
Vue-router и Vue создавать маршрутизацию довольно легко: требуется сопоставить компоненты с маршрутами и объяснить Vue-router что по какому маршруту отображать [3].
Также одним из необходимых Vue-разработчику инструментов является расширение
Vue-devtools. Данное расширение работает в браузерах Chrome и Firefox. Для разработки в
других браузерах существует возможность установить отдельное приложение: нужно всего
лишь ввести несколько команд в терминал.
Для работы с данным расширением необходимо открыть панель разработчика, либо же
кликнуть по любому элементу страницы и выбрать «Inspect Vue component». После открытия
панели появляется возможность переместиться к дереву компонентов [4]. При выборе компонента из левого окна - в правом отображается информация о выделенном элементе.
Components – показывает все представленные на данной странице элементы;
Vuex – отображает текущее состояние приложения;
Наукосфера 2020, №4
ISSN 2542-0402 99
Events – отображает все выполненные события;
Refresh – совершает перезагрузку панели разработчика;
Routing – отображает существующие маршруты и историю переходов.
Благодаря широкой функциональности инструмента Vue-devtools, у разработчиков появляется возможность создавать приложения более легко и удобно.
Библиотека пользовательских интерфейсов Vutify позволяет существенно сэкономить
время на разработке и избежать лишней работы по ui-ux дизайну и созданию множества
сложных компонентов. Vutify является самой популярной ui-библиотекой для Vue. Ее цель
состоит в предоставлении всего, что необходимо для создания богатых и интересных вебприложений, используя спецификацию Material Design [5].
Таким образом, были рассмотрены проблемы изучения современных подходов вебразработки. Подробно описан один из видов разработки одностраничных приложений: с помощью фреймворка Vue. Проведен анализ основных инструментов для полноценной разработки на основе Vue, таких как Vuex, Vue Router, Vue-devtools и Vuetify