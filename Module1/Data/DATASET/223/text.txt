В соответствии с утвержденной Правительством РФ стратегией
развития транспортной отрасли в России предполагается активное
внедрение цифровых технологий по всем направлениям развития
транспортного комплекса, а именно:
 повышение уровня цифровизации пассажирских и грузовых перевозок;
 развитие цифровых решений для взаимодействия с клиентами и
их информационного обеспечения;
 повышение уровня проникновения цифровых технологий по
всему жизненному циклу транспортной инфраструктуры и транспортных средств для всех видов транспорта;
 повышение уровня цифровизации при организации управления
транспортным комплексом.
В настоящее время наиболее активно цифровая трансформация,
включая услуги всех видов водного транспорта, происходит в области
взаимодействия с клиентами. CRM (Customer Relationship Management,
– система управления взаимоотношениями с клиентами) позволяют
автоматизировать и оптимизировать все процессы взаимодействия с
клиентами путем эффективного управления информацией о клиентах.
Российский рынок CRM сформировался к 2004 году. За этот период развитие IT-технологий в области искусственного интеллекта
привело к изменению парадигм в программировании, т.е. изменились
подходы, принципы и методы, используемые при разработке программного обеспечения, в т.ч. и CRM-систем. В качестве технологических решений все чаще используются мобильные и Web-приложения,
которые позволяют повысить эффективность решаемых CRM задач на
стадии маркетинга, автоматизации процесса продаж, управления обслуживаем клиентов после совершения сделки, автоматизации данных
о работе компании.
В большинстве случаев архитектура современных Webприложений реализуется по принципу «клиент-сервер», т.е. все приложения состоят из двух частей – клиентской (front-end) и серверной
(back-end). Преимущества данного подхода оцениваются по критериям:
 гибкость и масштабируемость;
 тестируемость и сопровождаемость; независимость бизнес-логики и предметной области;
 эффективность работы.
Одной из динамично развивающихся платформ, используемых
для построения эффективных и масштабируемых REST API’s приложений, является платформа Node.js, которая представляет собой
OpenSource кроссплатформенную среду выполнения для JavaScript (JS)
– одной из основ front-end разработки. В качестве «привлекательных»
особенностей Node.js можно рассматривать следующие: быстродействие, асинхронность, простоту, наличие большого количества
frameworks (фреймворков) и других вспомогательных инструментов.
По данным сайта Stackoverflow (сообщества профессиональных
разработчиков IT-продуктов, https://stackoverflow.com) в рамках проводимого опроса Developer Survey 2021 JS уже девятый год подряд
остается самым востребованным языком программирования. Его используют около 69% профессиональных IT-разработчиков, а платформу Node.js более 36 %.
Используемая в Node.js архитектура платформы в два раза повышает выполнение JS кода по сравнению с кодом, написанным на компилируемых языках, например, на C или Java, и на порядки быстрее интерпретируемых языков Python или Ruby. Сценарий JS кода исполняется
на клиентском компьютере в браузере, а не на Web-сервере, и не зависит
от операционной системы, установленной на стороне клиента.
Используемый в Node.js интерпретируемый язык программирования JS был разработан для интерактивного взаимодействия с Webстраницами и состоит из трёх частей:
 ядра (ECMAScript, ES) – базовой функциональности JS;
 объектной модели документа (Document Object Model, DOM) –
средства для работы с содержимым Web-страниц;
 объектной модели браузера (Browser Object Model, BOM) –
средства для взаимодействия с браузером.
Ядром JS является спецификация ES, описывающая типы данных,
инструкции, ключевые и зарезервированные слова, операторы, объекты, регулярные выражения. Используемая в JS модель DOM, обеспечивает множество предустановленных функций для различных объектов на страницах, что делает язык программирования легким при разработке сценария для решения пользовательской цели. JS отлично работает с другими языками и может использоваться в самых разных
приложениях. Объектные модели BOM поддерживаются практически
всеми популярными браузерами.
Особенность Node.js так же заключается в том, что в отличии от
других технологических платформ она поддерживает неблокирующий
497
асинхронный ввод-вывод, который управляется событиями. Node.js не
создает для каждого запроса новый поток или новый процесс, а «прослушивает» конкретные события и когда событие происходит – реагирует на них соответствующим образом. Node.js предоставляет разработчику неблокирующие базовые механизмы ввода - вывода.
Инфраструктура пакетного менеджера состоит из консольного
клиента (npm) и доступной онлайн базы данных публичных и приватных пакетов – npm registry. Клиент позволяет скачивать пакеты из реестра и устанавливать их. Менеджер пакетов имеет в своем реестре
более полумиллиона OpenSource пакетов, которые можно свободно
использовать.
Для упрощения разработки и «облегчения» жизни программистам
для Node.js создано огромное количество библиотек и фреймворков. С
выпуском ES6 и таких фреймворков, как Angular, Node, Express и
React, разработчики начали использовать JS для создания клиентского
и серверного программного обеспечения. По данным Google Trends за
последние 5 лет в число наиболее востребованных разработчиками
фреймворков JS входят React и Angular. React и Angular распространяются с открытым исходным кодом, что означает, что вокруг них
«вырастают» дополнительные инструменты, которые формируют целую экосистему.
React в настоящее время является лидером в области инфраструктуры JS. Компании, использующие React: Facebook, Instagram, Netflix,
New York Times, Yahoo, Khan Academy, Whatsapp, Codecademy, Dropbox, Airbnb, Asana, Atlassian, Intercom, Microsoft, Slack, Storybook и др.
Angular – это MVC-фреймворк, одна из самых мощных сред JS.
Компании, использующие Angular: Microsoft, Autodesk, MacDonald’s,
UPS, Cisco Solution Partner Program, AT&T, Apple, Adobe, GoPro, ProtonMail, Clarity Design System, Upwork, Freelancer, Udemy, YouTube, Paypal, Nike, Google, Telegram, Weather, iStockphoto, AWS, Crunchbase и др.
Обе технологии имеют свой набор преимуществ и сходств, и их
выбор в качестве среды разработки зависит от реализуемого в приложении функционала. С высокой долей вероятности на рынке ITразработок будут преобладать следующие тренды:
1) SPA (single page application) или одностраничные приложения
и сайты, в которых при переходе между страницами не требуется перезагрузки, что ускоряет работу и делает взаимодействие с сайтом более удобным для пользователя.
2) PWA – прогрессивные веб-приложения, которые могут работать без подключения к интернету с несколько ограниченным функционалом. Такая возможность достигается за счет кеширования данных.
498
Благодаря этому они занимают сравнительно мало места на устройстве
пользователя, но дают ему возможность корректной работы в условиях
нестабильного или отсутствующего интернет-соединения.
3) Использование технологии SSR на серверной части ускоряет
работу приложения на стороне пользователя, позволяет ускорить и
улучшить качество индексации контента на сайте поисковыми роботами, что улучшает ранжирование в поисковой выдаче.
4) Типизация TypeScript доступна во всех фреймворках, основанных на языке JS. На этапе разработки позволяет ускорить сам процесс работы, выявить возможные ошибки, улучшить общую читабельность кода, что положительно скажется на поддержки проекта другими разработчиками.
Описанные выше тренды отлично реализуются с помощью
фреймворков Angular и React. Несмотря на то, что в основе обоих
фреймворков лежит JS, технически они имеют отличия, влияющих как
на работу всего проекта, так и на рабочий процесс.
