Постановка проблемы. При работе с API VK часто приходится
взаимодействовать с загрузкой либо удалением определенных медиаэлементов. Так как в этом процессе, в отличие от многих других задач, где
нужно вызывать всего один метод, приходится выполнять алгоритм из
трех шагов, то многие новички делают ошибки на разных этапах. Для решения этой проблемы и была написана данная статья.
Цель статьи – рассмотреть параметры, требуемые для работы с API
VK, а также реализовать код на языке программирования PHP, позволяющий загрузить изображение на сервер VK.
Изложение основного материала. API (application programming
interface) – это посредник между разработчиком приложений и какой-либо
средой, с которой это приложение должно взаимодействовать. API упрощает создание кода, поскольку предоставляет набор готовых классов,
функций или структур для работы с имеющимися данными [1].
API ВКонтакте позволяет работать с событиями пользователя или
сообщества в реальном времени. Это нужно для отображения нового сообщения, для моментальной реакции на комментарий в сообществе, для
создания чат-ботов или для анализа текстовых данных [2].
Чтобы использовать методы API VK, необходимо изначально получить токен, для этого в первую очередь требуется регистрация приложения. Это можно сделать на странице «Создание приложения» по ссылке
https://vk.com/editapp?act=create. Для того чтобы помимо добавления в
альбомы и диалоги была возможность загружать изображения на стену, в
графе платформа следует выбрать Standalone-приложение.
Далее следует сгенерировать ссылку для авторизации в приложении.
Для этой цели реализована функция authorizationVk (листинг 1).
Листинг 1.
AuthorizationVk
public static function authorizationVk()
{
 $request_params = [
 'client_id' => 6461477,
 'display' => 'page',
 'redirect_uri' => 'http://oath.vk.com/blank.html',
 'scope' => 'wall,offline,groups,status,photos,friends',
 'response_type' => 'token',
 'v' => '5.69'
 ];
 return $url = 'https://oauth.vk.com/authorize?'.
http_build_query($request_params);
}
Для корректной ссылки нужно 6 параметров:
 client_id – ID приложения;
 display. Данный аргумент указывает тип отображения страницы
авторизации, по умолчанию page. Всего 3 типа:
1) page, предусматривающий форму авторизации в отдельном
окне;
2) popup, предполагающий всплывающее окно;
3) mobile, означающий авторизацию для мобильных устройств.
 redirect_uri – адрес, на который будет переадресована страница,
после авторизации;
 scope – набор прав доступа приложения;
 response_type – запрашиваемый тип данных;
 v – версия API VK.
При переходе по ссылке будет запрошен доступ к аккаунту (точнее,
указанным значениям scope) приложением.
После разрешения произойдет переадресация на страницу, URL которой будет содержать полученный access_token. Следует присвоить access_token в переменную $token, после этого реализовать алгоритм по загрузке фотографии, первой инструкцией которого является получение адреса сервера для загрузки фотографии. Для этого написана функция
getWallUploadServer, которая принимает массив параметров из токена и
версии API VK.
Получение адреса сервера
$token =
'da9b866c77743ef0e5273d74b5c078167a193aafb684315b914fc4abb19348f774
5787ed4b1e438e188fb';
$request_params = [
 'access_token' => $token,
 'v' => '5.69'
];
$server_img = getWallUploadServer($request_params);
function getWallUploadServer(array $request_params)
{
 $url = 'https://api.vk.com/method/photos.getWallUploadServer?'
. http_build_query($request_params);
 return json_decode(file_get_contents($url), true);
}
В переменную $server_img вернется массив, где в uploud_url хранится адрес сервера.
Вторым действием является отправка изображения, применяя технологию cURL.
cURL – это технология, которая предназначена для передачи/получения данных посредством URL. Технология cURL поддерживает такие
распространенные протоколы как HTTP, FTP, HTTPs и другие. Изначально cURL был инструментом командной строки, однако разработчики PHP
не поленились и создали библиотеку в PHP, чем облегчили жизнь миллионам программистам [3].
Используя функцию curlPhoto, отправляем фотографию на полученный раннее URL-адрес (листинг 3). В функции принимаются два параметра:
 $file – полный адрес к изображению;
 $upload_url – адрес сервера для загрузки.
Отправка изображения через cURL
$img_file = __DIR__ . '\img\post\test.jpg';
$upload_url = $server_img['response']['upload_url'];
$curl_photo =curlPhoto($img_file,$upload_url);
function curlPhoto($file, $upload_url)
{
 $curl = curl_init();
 $file = curl_file_create($file, mime_content_type($file),
pathinfo($file)['basename']);
 curl_setopt($curl, CURLOPT_URL, $upload_url);
 curl_setopt($curl, CURLOPT_POST, true);
 curl_setopt($curl, CURLOPT_HTTPHEADER, ['Content-type: multipart/form-data;charset=utf-8']);
 curl_setopt($curl, CURLOPT_POSTFIELDS, ['file' => $file]);
 curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
 curl_setopt($curl, CURLOPT_TIMEOUT, 10);
 curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);
 return json_decode(curl_exec($curl), true);
}
В переменную $curl_photo вернется массив из 3 значений: hash, photo, server.
После выполнения указанных процедур изображение сохраняется
методом «photos.saveWallPhoto». Для этого применяется функция
savePhoto, принимающая массив с параметрами.
Сохранение изображения
$request_params_save = [
 'server' => $curl_photo['server'],
 'photo' => $curl_photo['photo'],
 'hash' => $curl_photo['hash'],
 'access_token' => $token,
 'v' => '5.69'
];
$save_photo = savePhoto($request_params_save);
function savePhoto(array $request_params)
{
 $url = 'https://api.vk.com/method/photos.saveWallPhoto?' .
http_build_query($request_params);
 return json_decode(file_get_contents($url), true);
}
В переменную $save_photo вернется массив, хранящий информацию
о загруженной фотографии.
Загрузка изображений через API VK требует определенных навыков работы с методами и технологиями. В статье было рассмотрено как создать приложение в VK developer, получить токен пользователя, получить адрес сервера, загрузить фото, применив cURL технологию, а
также сохранить его в VK. Далее имея id фотографии возможна его публикация на стену социальной сети, в альбом или же в диалог.
