Современный интернет активно развивается, что должно учитываться
владельцами web-сервисов. В последние годы наблюдается устойчивая
тенденция увеличения доли мобильного траффика. В 2019 году более половины
пользователей выходили в интернет с помощью смартфонов, и с каждым годом
эта цифра будет только расти [1].
Web-сервисы популярны среди бизнеса по причинам широкой
доступности и относительной простоты разработки. Недостатками являются
невозможность сохранить данные для offline просмотра страниц,
взаимодействия с сервисом без интернета, получение уведомлений от сервиса и
доступ к хранилищу устройства. Ранее эту роль на себя брали мобильные
приложения, размещаемые в магазинах приложений. Тем не менее это
позволить себе могли не все из-за необходимости ещё одной команды
мобильной разработки и стоимости поддержки приложения. Для решения этой
проблемы компания Google предложила своё видение улучшения web сервисов
[2]. Для этого была предложена концепция PWA. Progressive web app является
приложением, поставляемым пользователю с использованием таких web
технологий, как HTML, CSS и JavaScript [3].
Хоть PWA и не является web-сайтом, но тем не менее работает на основе
программных возможностей, предоставляемых браузерами. Запуск такого
приложения можно сравнить с открытием web-страницы в отдельном от
основного браузера окне, но со скрытой адресной строкой и панелью
навигации. Кроме этого приложение всё так же может быть доступно по ссылке
через браузер. Таким образом однажды написанный веб-сервис может быть
доступен тремя путями: по ссылке через браузер, установка через браузер,
установка через магазин приложений.
Важным показателем готовности технологии для массового
использования является хорошая поддержка современными браузерами. Для
этого воспользуемся сервисом «Can I use», предназначенным для получения
данных о поддержке браузерами нововведений в html, css, javascript и browser
API. Важнейшей технологией, вокруг которой и строится концепция PWA –
Service Workers. Данный метод позволяет браузерам получать доступ к
фоновым процессам для работы в том числе и offline режиме. Результаты
поддержки Service Workers современными мобильными и десктопными
браузерами представлены на рисунке 1 [4]. 
Из представленных на рисунке данных можно сделать вывод, что
большинство современных браузеров поддерживает технологию Service
Workers без каких-либо ограничений. При этом доля совместимых браузеров
составляет 93% [5]. Но стоит учитывать, что это позволяет лишь работать в
offline режиме. Для полноценной работы приложения с установкой на рабочий
стол через браузер необходима поддержка Web App Manifest. Это часть PWA
технологий, которая позволяет описать такие поля приложения, как название,
описание, иконки для рабочего стола, категории и тому подобное [6].
Результаты поддержки Web App Manifest современными мобильными и
десктопными браузерами представлена на рисунке 2 [7]. 
В случае этой технологии поддержка уже не такая хорошая, как у Service
Workers. Доля поддерживаемых браузеров составляет 62%. При этом ещё 20%
браузеров имеет частичную поддержку. В сумме это всё же составляет
значительную долю современных браузеров.
Две ранее рассмотренных технологии являются необходимым
минимумом для того, чтобы приложение считалось PWA совместимым. Так же
из полезных инструментов PWA можно назвать Web Storage, WebAssembly,
Database libraries, Push Notifications. С помощью Web Storage приложение
может получать доступ к хранилищу устройства и тем самым сохранять все
необходимые данные, как это делало бы нативное приложение для устройства.
Преимуществами такой технологии является отсутствие браузерных
ограничений, которые не позволяют разработчику сохранять какие-либо
данные на устройства пользователя. WebAssembly позволяет использовать
вставки кода на языке C для сложных вычислений. Это сильно расширяет
возможности сервиса и в сложных приложениях позволяет обойти
сравнительно невысокую производительность языка JavaScript. С помощью
Database libraries можно получить доступ к NoSQL базам данных. Важным для
удержания клиента и качественной обратной связи будет наличие уведомлений
Push Notification. Это привычное поведение приложений мобильных устройств,
когда приложение может сообщать статусные сообщения с помощью шторки
уведомлений.
Концепция PWA является коллекцией технологий, продвигаемых
разработчиками браузеров с целью упрощения разработки мобильных версий
приложений. Она не может полностью заменить мобильные приложения так
как последние не имеют никаких ограничений по работе offline или доступу к
аппаратным компонентам устройства. Скорость работы у нативных
приложений так же выше, как и спектр возможностей для оптимизации
приложения. Тем не менее для PWA существует крупная ниша на рынке. Те
приложения, которые не имеют сложной логики или не требовательны к
производительности, хорошо смогут раскрыть весь потенциал технологий, а
web разработчикам не составит труда адаптировать ранее разработанные
онлайн сервисы под PWA концепцию. Важнейшим преимуществом для бизнеса
будет невысокая стоимость и короткие сроки адаптации приложения. 