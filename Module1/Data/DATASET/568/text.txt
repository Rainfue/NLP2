В условиях цифровизации экономики
как в нашей стране, так и во всем мире, возникает большая потребность в квалифицированных кадрах в области информационных технологий и смежных дисциплин. Многие такие
специалисты должны обладать достаточным
уровнем квалификации в программировании.
Однако практика показывает, что, несмотря на
совершенствование методов преподавания
дисциплин компьютерного цикла в вузах, выпускникам, желающим устроиться на работу
по специальности, приходится самостоятельно
доучиваться для того, чтобы соответствовать
требованиям работодателей. К сожалению,
часто «выпускник с трудом представляет, что
ждет работодатель от молодого сотрудника, –
вчерашнего студента» [1]. Кроме не всегда
должного владения актуальными специальными знаниями и навыками, информационной
компетентностью, серьезной проблемой является недостаток навыков командной работы,
умения распределять функции, иногда – нехватка лидерских качеств.
При подготовке кадров для цифровой
экономики, особенно в тех областях (таких,
как ИТ-отрасли), где изменения происходят
ежедневно, важно использовать новые, ранее
не существовавшие формы, методы и средства
обучения, максимально приближающие учебную деятельность к деятельности профессиональной.
Для того, чтобы лучше подготовить
студентов к работе на реальном предприятии,
в ходе развития их информационной компетентности необходимо активно применять интегративный и профессиональноориентированный педагогические подходы
[2]. Мы полагаем, что с этой целью важно:
– включать в программу изучаемых
дисциплин такие темы, которые бы отражали
связь с профессией;
– применять методы и формы обучения, способные в достаточной степени передать содержание и структуру профессиональной деятельности;
– широко использовать интегративные
комплексные практические задания.
Мы, как и многие другие исследователи, признаем положительную роль использования специализированных электронных образовательных систем в образовательном процессе, таких, например, как LMS MOODLE,
или каких-либо аналогичных по функциям
собственных разработок конкретного вуза.
Вполне естественно, что особенно много внимания их использованию уделяется, когда
речь идет о формировании или развитии
именно информационной компетентности [2],
[3], [4].
Тем не менее, подобные среды всетаки являются скорее универсальными, и поэтому больше ориентированы именно на обучение, а не на предстоящую профессиональную деятельность. В целях увеличения интеграционной связи образовательного процесса
с предстоящей профессиональной деятельностью и лучшей информационной подготовки
студентов, в настоящей статье предлагается в
дополнение к вузовской электронной образовательной среде (а возможно даже в качестве
альтернативы) использовать на занятиях по
программированию сервис GitHub. Некоторые
способы его применения в образовательном
процессе рассматривают, например, в таких
работах как [5], [6], [7].
Технология Git изначально разрабатывалась не для обучения. Она была создана Линусом Торвальдсом для управления процессом
разработки ядра операционной системы Linux,
имеющей открытый исходный код. Однако со
временем GIT стал использоваться и другими
командами программистов, некоторые из которых присоединились к процессу его разработки.
Популярность данная система получила в результате наличия особого метода обработки и хранения файлов. Он позволяет сохранять промежуточные этапы работы над
проектом и при необходимости восстанавливать их по состоянию на любой момент времени. Используемая техника организации работы с файлами также позволяет объединять в
единый проект модули, написанные различными разработчиками, даже в том случае, если
производимые ими изменения затрагивали одни и те же файлы. Кроме того, поддержка рассматриваемой системы встроена в большинство современных сред разработки программного обеспечения, что также повышает удобство
ее использования.
Проекты, управляемые посредством
Git, могут существовать на локальных компьютерах, однако полную мощь способны продемонстрировать, когда размещаются в репозиториях на GIT-хостингах (сайтах, предоставляющих услуги по размещению данных в интернете). В сети можно обнаружить множество решений, поддерживающих данную технологию. Наиболее популярным среди подобных хостингов в России, пожалуй, является
сервис GitHub, о котором и идет речь в данной
статье.
На сегодняшний день GitHub нельзя
назвать просто хранилищем данных. Это полноценная социальная сеть для команд профессиональных программистов, индивидуальных
разработчиков программного обеспечения и
любителей. Полезен сервис и для тех, кто желает обучиться программированию: пишет
свои коды и хочет познакомиться с исходниками чужими проектов, находящихся в открытом доступе.
В отличие от систем, ориентированных
исключительно на обучение, GitHub организует материал не в виде отдельных тем определенной дисциплины, а в форме проектов. Его
владелец (преподаватель) может разместить в
нем полностью готовый вариант некоторого
приложения для того, чтобы предоставить
обучающимся полностью разобранный пример решения в качестве учебного пособия.
Ключевым его элементом будет являться полный набор файлов с исходными кодами проекта в различных версиях – репозиторий. Это
логично, поскольку система создавалась и,
прежде всего, ориентирована именно на контроль процесса разработки программ. При
этом у преподавателя имеется возможность
создать так называемые ветви, в которых размещаются модули (части общего проекта)
различных версий. Благодаря этому студенты
могут поэтапно знакомиться с процессом создания программного продукта или отдельных
его компонентов. Такой дозированный метод
чтения кода, в отличие от знакомства с полным текстом сразу, значительно облегчает
восприятие новой информации и ее анализ.
Однако текст проекта – далеко не
единственное, что можно найти в GitHub. Если рассмотреть возможности, имеющиеся в
сервисе, то среди них можно обнаружить аналоги или альтернативы многим элементам,
имеющимся в системах управления обучения,
таких как MOODLE.
Так, например, справочный материал,
касающийся разрабатываемого проекта, можно разместить на вкладке «Wiki». Таким образом у студентов появится возможность познакомиться с теоретическим материалом, предоставленным преподавателем, а также получить ссылки на внешние ресурсы сети интернет по соответствующей тематике.
GitHub может быть полезен и для решения часто встречающейся при обучении
программировании проблемы, связанной с
выбором уровня сложности лабораторных работ для самостоятельного выполнения студентами. Такие задания могут получиться либо
излишне адаптированными к уровню студенческой аудитории, но выполнимыми в обозримые сроки, либо быть достаточно комплексными и сопоставимыми с задачами профессиональной деятельности, но требующими
много времени на решение из-за наличия
большого количества рутинной работы. Для
того, чтобы задачи, решаемые обучающимися,
оставались приближенными по уровню к тем,
что встречаются на практике в реальных условиях, преподаватель может использовать два
варианта их размещения в системе.
Первый способ – предоставить студентам лабораторное задание, представляющее
собой заготовку проекта, которую требуется
доработать. Основные требования к решению
лабораторного задания можно указать для
студентов в виде технического задания в специальном разделе «Issues» – так называемого
списка проблем, требующих решения.
Второй вариант, рассчитанный на несколько более подготовленную аудиторию
(старшекурсников), – разместить техническое
задание по выполнению проекта и распределить его выполнение между всеми студентами
учебной группы, так, чтобы работа над ним
велась коллективно. В ряде случаев распределение компонентов технического задания и
ролей в команде разработчиков может быть
доверено самим студентам. Кроме того, здесь
также может быть применена модель классификации студентов на основе искусственных
нейронных сетей, предложенной в работе [8].
Этот подход позволяет решить сразу
несколько задач:
– сделать работу посильной для
выполнения каждым студентом в приемлемое
время;
– предоставить возможность
обучающимся избрать для себя наиболее
интересную часть проекта;
– организовать командную работу
над проектом, как это происходит в
коллективе профессиональных разработчиков;
– развивать коммуникативную
компетентность и лидерские качества;
– при выполнении нескольких
проектов совершенствовать разнообразные
навыки, попробовать себя в различных
профессиональных «ипостасях» и, возможно,
уточнить будущую специализацию.
Отметим также, что при таком подходе
студенты получают более полные навыки по работе с самой системой контроля версий git
(создание новых ветвей для разработки отдельных модулей проекта, генерация запросов
на включение своего кода в общий проект,
объединение и перемещение ветвей, слияние
результатов коллективной работы в готовый
проект и т.д.), которая наверняка будет использоваться ими в предстоящей профессиональной деятельности.
Система GitHub позволяет преподавателю не только получить и проверить, как очно, так и дистанционно, выполненные задания
студентов, но и собирать статистику работы
над проектом всего коллектива разработчиков
и, таким образом, контролировать активность
в работе над проектом каждого студента. Данная система может быть использована и для
выполнения (в том числе, в рамках НИРС и
УИРС, студенческих конференций) студентами реальных проектов, связанных с разработкой программного обеспечения управленческих, финансовых и производственных задач.
Кроме того, нам представляется не только
возможным, но и необходимым привлекать
студентов – будущих ИТ-специалистов к совершенствованию информационной образовательной среды в их вузе: конструированию
электронных ресурсов подразделений вуза,
созданию программного обеспечения учебного процесса, например, в области достаточно
сложной для преподавателя-предметника виртуальной реальности, которая является необходимой в процессе подготовки специалистов
для опасных производств [9].
Тем не менее, стоит добавить, что обучающимся полезно не только загружать выполненные задания в систему и работать удаленно, но и защищать их перед преподавателем и остальными студентами в очном порядке. В таком случае эта же технология может
быть применена на семинарских занятиях для
отработки навыков презентации результатов
своей профессиональной деятельности, зачетах (которые могут в этом случае проходить в
форме деловой игры или студенческой конференции) и экзаменах.
Можно сказать, что применение
GitHub позволяет решить сразу несколько педагогических задач: интеграции учебной и
профессиональной деятельности и дифференциации, даже индивидуализации обучения;
формирования специальных навыков и развития умений профессиональной коммуникации
и командной работы; повышения интереса,
учебной мотивации студентов и приближения
результатов обучения к требованиям работодателя.
Мы полагаем, что при подготовке ИТспециалистов в вузе этот сервис может стать
значимым средством обучения, а разработка
на его основе проектов, моделирующих профессиональные, является по сути новой, сетевой формой обучения, позволяющей организовать обучение очное и дистанционное, индивидуальное и групповое, под руководством
преподавателя и самостоятельное.
1. Большая потребность в
специалистах, которые призваны обеспечить
цифровизацию экономики, вызывает
необходимость в новых формах, методах и
средствах их подготовки, сближающих
учебную и профессиональную деятельность и
позволяющих сформировать на актуальном
уровне их профессиональную (в частности,
информационную и коммуникативную)
компетентность на момент окончания вуза.
2. Использование GitHub вместо
традиционных электронных образовательных
систем в рамках дисциплин компьютерного
цикла позволяет сместить акценты в процессе
обучения с чисто учебных действий и
операций на решение профессиональных
задач, средствами, применяемыми в
профессиональных сообществах, в командах
разработчиков программного продукта.
3. Сервис GitHub в образовательном
процессе при подготовке студентов ИТнаправлений может выступить эффективным
средством обучения, а групповая, но в то же
время индивидуализированная работа
студентов на основе этого сервиса может
рассматриваться как новая, сетевая форма
организации их обучения в рамках дисциплин
компьютерного цикла, программирования и
стать альтернативой или дополнением для
вузовской системы управления учебной
деятельностью.