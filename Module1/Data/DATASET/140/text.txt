Веб-сервер – это сервер, который принимает HTTP-запросы со стороны клиента, которые
обычно являются веб-браузерами, и выдает HTTP-ответ, который в основном отправляется
вместе с HTML-страницей, изображением, файлом или другими данными. Основным
принципом работы с веб-сервером, который изображен на Рисунке 1, является множественное
использование функции запрос-ответ.
Node.js – это программная платформа, которая основана на движке V8, который
разработан компанией Google и транслирующий JavaScript в машинный код. История
платформы начинается с 1996 года, когда компания Netscape пытались создать серверный
JavaScript, но в то время технология не получила достойного распространения. В 2009 году,
после двух лет экспериментов над серверными веб-компонентами, разработчик Райан Даль
разработал Node.js, и в ходе экспериментов установил, что традиционная модель
параллелизма на основе потоков не подходит для дальнейшей разработки и вместо нее
использовал событийно-ориентированные системы. Эта модель была выбрана из-за ее
простоты, низких расходов, если сравнивать с идеологией, что один поток на каждое
соединение, и быстродействия. Цель Райана Даль для создания Node.js была проста –
предложить более простой способ построения масштабируемых сетевых серверов.
Текущее положение Node.js среди веб-серверных платформ можно увидеть в отчете
StackOverflow за 2019 год [1], где можно увидеть, что платформа за 2019 год заработала
первое место и набрала очень большое количество сторонников, а значит сообщество Node.js
только расширяется, что стимулирует платформу развиваться очень быстро и перегонять уже
технологии, которые использовались много лет.
Благодаря развитию платформы, на ней уже разработали свой веб-сервер такие крупные
компании [2] как:
1. Walmart – сеть розничной торговли.
2. Netflix – самая крупная мировая платформа потокового видео фильмов и сериалов.
3. LinkedIn – социальная сеть.
4. Uber – приложения для поиска, вызова и оплаты такси.
5. Paypal – крупнейшая дебетовая электронная платежная система.
6. eBay – Интернет-аукцион и интернет магазин.
Разработка веб-серверов на платформе Node.js происходит на языке JavaScript, который до
относительно недавнего времени считался языком только браузерным для создания
динамичности страницы и запросов на веб-сервера. Одной из причин, почему Node.js стал так
интересен разработчикам, является идея использования одного языка как на стороне клиента,
так и сервера, что является одним из преимуществ Node.js.
Другие преимущества являются не менее существенными, так как в первую очередь, при
появлении новой платформы, сообщество рассматривает фактор скорости, который и вызвал
такую волну популярности и широкого использования. Как ранее было подмечено, вебприложения следуют клиент-серверной архитектуре, то есть клиент запрашивает ресурс у
сервера, а сервер отправляет ресурс в ответ клиенту. Значит, каждый запрос клиента на сервер
должен быть обработан, на что тратятся память, процессорное время и т.д., из-за чего для
обработки каждого последующего запроса клиента требуется дождаться завершения
обработки предыдущего запроса. Node.js такую проблему путем модели thread-per-request, в
которой для каждого запроса создается отдельный поток для его обработки. Под потоком в
данном контексте понимаются время и ресурсы, которые CPU выделяет на выполнение
инструкций. К другим преимуществам относят:
1. Легкость и скорость написания кода
2. Легковесность
3. NPM – огромная пакетная экосистема, которая позволяет скачивать библиотеки
Но преимущества могут оказывать и обратный эффект, например, преимущество гибкости
и скорости развития порождает постоянное слежение за обновлениями, которые могут быть
недостаточно протестированными. Также из недостатков стоит выделить сильную
зависимость от пакетного менеджера NPM, в которой удаление зависимости может привести
в нерабочее состояние уже разработанные сервисы.
Говоря о перспективе Node.js по сравнению с другими языками и технологиями, требуется
отметить, что неизвестно, заменит ли Node.js все остальные технологии, так как язык и
платформу принято выбирать по конкретную задачу и проблемы, которые требуется решить.
Node.js показывает хорошую скорость и низкий порог входа, но существуют недостатки,
которые покрываются решением другой платформы. Сейчас же мы можем утверждать, что
платформа уже доросла до состояния взрослого инструмента и продолжает развиваться, и
которую можно рекомендовать в качестве серверного решения для больших долгоживущих и
нагруженных проектов.
