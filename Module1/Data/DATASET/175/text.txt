OpenCV является библиотекой алгоритмов компьютерного зрения, обработки изображений и численных методов общего назначения с открытым кодом.
Реализована данная библиотека для языков С/С++, Python, Java, Rubt, 
Matlab и других языках. Распространяется на условиях лицензии BSD, а значит 
может свободно использоваться в академических и коммерческих целях.
Применяется библиотека OpenCV в сферах где необходимо компьютерное 
зрение. Эта отрасль IT работает с технологиями, которые позволяют устройству 
увидеть, распознать и описать изображение. Компьютерное зрение дает точную 
информацию о том, что изображено на картинке, с описанием, характеристиками и размерами (с определенной степенью достоверности) [1].
Также библиотека работает с машинным обучением – отраслью, которая 
обучает алгоритмы действовать тем или иным образом.
Библиотека OpenCV широко применяется в следующих сферах:
 промышленность – автоматизация контроля качества, считывание QRкодов, этикеток, сортировка продуктов и прочее;
 транспорт – разработка автопилотов, прогнозирование плотности и распределения транспортных потоков, определения номеров и т.д.;
 робототехника – ориентирование робота в пространстве, распознавание 
объектов и взаимодействия с ними;
 медицина – реализация точных методов диагностики, 3D-визуализация, 
определение диагноза по МРТ, УЗИ и т.д.
Для хранения и работы с изображениями, алгоритм OpenCV использует 
векторы и скаляры, матрицы и диапазоны. Они позволяют проводить математические преобразования, ориентироваться по изображению и выполнять множество других действий [2].
С помощью OpenCV можно работать с изображением как в графическом 
редакторе: обрезать, увеличивать или уменьшать, вращать. В основном программисты используют эту возможность для предварительной подготовки картинки перед ее расшифровкой – например, обрезают ненужные части.
Далее изображение представляют в оттенках серого или полностью чернобелым. Это важно для алгоритмов распознавания, которые работают с обесцвеченными изображениями. Можно изменять цветовой тон, размывать, сглаживать или геометрически изменять картинку, применяя различные фильтры.
Для распознавания элементов в OpenCV используются очертания объектов, 
сегментация по цветам, встроенные методы распознавания, которые можно 
настраивать в зависимости от объекта и чувствительности алгоритма [3].
Новые версии библиотеки поддерживают работу не только с изображениями, но и с видеофрагментами. Они могут считывать видео с использованием 
различных кодеков и форматов, анализировать происходящее в них, отслеживать движения и элементы. Это полезно, например, при программировании 
движущегося робота или создании программного обеспечения для камеры видеонаблюдения. Пример такой реализации приведен в данной статье.
Также структура библиотеки OpenCV включает в себя множество модулей 
для различных целей. К основным относятся [4]:
– хранения математических функций и вычислений, алгебры и структур 
данных;
– хранения моделей для машинного обучения;
– ввода и вывода картинок или видео, чтения и записи в файл;
– обработки изображения;
– детектирования примитивов;
– распознавание объектов – лиц, предметов и других;
– отслеживания и анализа движений на видео;
Использование библиотеки OpenCV продемонстрированно на примере видеофрагмента участка трассы с движущимися автомобилями и мотоциклами, 
применяя написанный программный код на языке программирования Python.
Прежде всего необходимо в среде разработки PyCharm установить библиотеку компьютерного зрения OpenCV и пакет math.
Для покадрового сравнения расположения движущихся объектов используется написанный файл отслеживания на основании расстояния между объектом 
на двух кадрах.
Используя функцию createBackgroundSubtractorMOG2 возвращается параметр алгоритма «коэффициент фона», а затем создается маска изображения.
Так как на изображении присутствует много шума, его необходимо отфильтровать, удалив все более мелкие элементы и сосредоточив внимание на объектах, которые больше определенной области. Далее отрисовываются контуры
изображения с помощью встроенной функции cv2.drawContours. Определение 
движущихся объектов определялось на отдельной полосе, поэтому нет необходимости анализировать все окно, а выделялась область интереса ROI и применялась маска только в этой области [5].
Далее происходит дополнительная очистка изображения от шума используя 
пороговое значения от 254 и 255, для отображения значений только белого или 
черного цвета. В листинге 3 показан программный код второй программы для 
отображения движущихся объектов.
Существует проблема неправильного определения объектов, которая решается добавлением новых классификаторов (например, для определения объекта 
с различного угла обзора) и их комбинаций или уменьшением скорости определения кадра на видеофрагменте.
Результат распознавания объектов на видеофрагменте показан на рис. 2.
Таким образом, используя библиотеку алгоритмов компьютерного зрения 
OpenCV возможно с малыми трудозатратами реализовать программу, способную распознавать движущиеся объекты на видеофрагменте. Результатом является программа, написанная на языке Python используя платформу PyCharm, 
которая покадрово переводит изображение в черно-белый формат и используя 
файл отслеживания определяет объекты сравнивая расстояние между нами на 
двух последовательных кадрах.