В настоящее время сеть Интернет проч- но вошла в жизнь почти каждого человека,
стала неотъемлемой средой поддержки бизнес-процессов [1]. С каждым годом технологии развиваются, и возникает необходимость в web-приложениях, которые имеют
быстрый отклик на действия в пользовательском интерфейсе и отлично работают
на всех устройствах (как на стационарных,
так и мобильных). Одновременно с увеличением количества таких систем в корпоративной инфраструктуре поднимается
вопрос о выборе программных продуктов
для воплощения в жизнь эффективной, со- временной и отказоустойчивой системы [2].
Поэтому обрели популярность Single Page
Application (далее SPA).
SPA-приложения – web-приложения,
которые используют HTML-документ как
оболочку для всех веб-страниц и органи- зовывают обмен информацией с пользователем через динамически подгружаемые
HTML, CSS, JavaScript.
Целью работы является проанализировать существующие фреймворки для
создания веб-приложений, определить их
особенности, плюсы и недостатки по различным характеристикам, выбрать подходящий фреймворк для реализации клиентской
части приложения.
Материалы и методы исследования
Главным SPA-архитектуры является
представление (View) – именно с этим взаимодействует пользователь системы. Зачастую представления основаны вокруг
шаблонов (Template) – заготовок, которые
преобразуются в HTML. Чтобы хранить
информацию, необходима модель (Model).
Моделью является набор данных и функций, необходимых для работы с событиями и данными. Вся информация модели
40
 SCIENTIFIC REVIEW № 1, 2020 
 TECHNICAL SCIENCES (05.09.00, 05.11.00, 05.12.00, 05.13.00) 
полностью сохраняется в памяти (Storage).
Для сохранения целостности информации представление отслеживает любые
изменения данных в модели. Аналогично
модель откликается на оповещение пред- ставления и предоставляет непрерывное
взаимодействие WEB-сервиса с сервером,
исполняя запросы на передачу информа- ции (в том числе с использованием REST)
(рис. 1) [3; 4].
Особенностью реализации SPA является
модульная структура. Это необходимо для
того, чтобы упростить рефакторинг и те- стирование, также улучшить и упростить
обслуживание приложения.
Модульная архитектура подразумевает
разделение приложения на отдельные па- кеты с явными зависимостями. Каждый па- кет – файл и модуль [4].
JavaScript – это язык Всемирной паути- ны. Изначально он представлял собой сред- ство управления определенными типами
элементов веб-страниц (например, изобра- жения и поля форм), но с тех пор этот язык
быстро развивается. На данный момент помимо создания клиентских сценариев, выполняемых браузером, JavaScript применяется для разработки кроссплатформенных
программ [5]. JavaScript входит в список
основных технологий современностей, ко- торые необходимо знать и уметь применять
веб-программистам: HTML (язык размет- ки), CSS (язык стилей) и язык программи- рования JavaScript, определяющий поведе- ние веб-страниц [6].
Для реализации клиентской части про- граммы используется JavaScript-библиотека
ReactJS. ReactJS – мощный инструмент для
реализации интерфейсов для пользователей.
Цель данного инструмента – предоставить
легкость и масштабируемость приложения,
обеспечение вывода на экран всего того, что
свойственно веб-страницам с высокой ско- ростью [7]. React позволяет разработчикам
моделировать состояние интерфейсов и де- кларативно описывать их. React – это всего
лишь JavaScript, у библиотеки очень ма- ленький API для изучения, всего несколько
функций и способы их использования, что
позволяет быстро изучить ее [8].
Рис. 1. Архитектура SPA-приложения
Таблица 1
Разница между модульным и немодульным приложением
Немодульное приложение Модульное приложение
Каждый участок кода является глобальным Пакеты предоставляют единственный публичный ин- терфейс
Переменные являются глобальными Переменные локальные в каждом пакете
Очередность загрузки имеет значение, потому что
что-либо может перезаписать или изменить что-то
Очередность загрузки не имеет значения благодаря
разделению по пакетам
Неявные зависимости от чего-либо глобального Детали реализации недоступны за пределами пакета
Файлы и модули не имеют связи по смыслу Каждый файл соответствует одному модулю
Явно объявленные зависимости
41
 НАУЧНОЕ ОБОЗРЕНИЕ № 1, 2020 
 ТЕХНИЧЕСКИЕ НАУКИ (05.09.00, 05.11.00, 05.12.00, 05.13.00) 
Рис. 2. Соотношение React и AngularJS
Основные концепции:
Элементы – объекты JavaScript, которые
представляют HTML-элементы.
Компоненты – элементы React, раз- работанные программистом приложения.
Зачастую являются частями интерфейса
пользователя, содержащими функциональ- ность и структуру. React значительно об- легчает создание интерфейсов благода- ря компонентам.
JSX – метод реализации элементов
и компонентов React. Например, это Reactэлемент, написанный на JSX:
<h1>Hello World</h1>
Реализация аналогичного элемента возможна и на JavaScript:
React.DOM.h1(null, 'Hello World');
С JSX необходимо намного меньше
усилий, он преобразовывается в JavaScript
перед запуском в браузере.
Сравним производительность. Созда- ется ассоциация между данными домена
и элементом DOM, назначая «ключ». При
изменении данных элемент DOM с со- ответствующим ключом будет обновлен.
Любые изменения элемента в массиве дан- ных вызывает соответствующее изменение
в DOM (табл. 2) [9]. Также одним из клю- чевых показателей является выделение па- мяти (табл. 3).
Результаты исследования
и их обсуждение
Рассмотрим плюсы и минусы React
и Angular 5 в табл. 4 и 5 [9].
Таблица 2
Сравнение производительности
Наименование angular-v4.1.2-
keyed
react-v15.5.4-
mobX-v3.1.9
vue-v2.3.3-
keyed
Создавать строки.
Продолжительность создания 1000 строк после загрузки страницы

Заменить все строки.
Продолжительность обновления всех 1000 строк та- блицы (с 5 итерациями прогрева)

Частичное обновление.
Время обновлять текст каждой 10-й строки (с 5 итерациями разминки)

Выберите строку.
Длительность выделения строки в ответ на щелчок
по строке (с 5 итерациями разминки)

Поменять строки.
Время поменять местами 2 строки в таблице 1К
(с 5 итерациями разминки)

Удалить строку.
Продолжительность удаления строки (с 5 итерациями разминки)

Создать много строк.
Продолжительность создания 10 000 строк

Добавить строки в большую таблицу.
Продолжительность добавления 1000 строк в таблицу из 10 000 строк

Очистить строки.
Продолжительность очистки таблицы, заполненной

 SCIENTIFIC REVIEW № 1, 2020 
 TECHNICAL SCIENCES (05.09.00, 05.11.00, 05.12.00, 05.13.00) 
Таблица 3
Использование памяти приложений
Наименование angular-v4.1.2-
keyed
react-v15.5.4-
mobX-v3.1.9
vue-v2.3.3-
keyed
Использование памяти после загрузки страницы 4.80.0

Использование памяти после добавления 1000 строк 10.90.1

Таблица 4
Плюсы Angular 5 и React
Angular 5 React
Современные функции, доработанный RXJS,
более быстрая компиляция, запуск HttpClient
Проще в изучении из-за его простоты с точки
зрения синтаксиса. Нет необходимости глубоко
обучаться TypeScript, по сравнению с Angular
Доступная документация, предоставляющая актуальную информацию
Максимальная гибкость и отзывчивость
Двусторонняя привязка данных. Это позволяет
уменьшить риск потенциальных ошибок
Виртуальный DOM, который позволяет упорядочивать документы в форматах HTML, XHTML
или XML в дерево, из которого лучше подходят
веб-браузеры при анализе различных элементов
веб-приложения
MVVM (Model-View-ViewModel), позволяет
программистам разрабатывать одновременно
один и тот же раздел программного продукта
с помощью одинакового набора данных
В совмещении с ES6 / 7 ReactJS система имеет
возможность работать под высокой нагрузкой
Внедрение зависимостей от компонентов, свя- занных с модулями и модульностью в целом
Нисходящая привязка данных, что означает, что
с этим типом потока данных дочерние элементы
не могут влиять на родительские данные
Таблица 5
Минусы Angular 5 и React
Angular 5 React
Достаточно сложный синтаксис, в основу кото- рого положена первая версия Angular
Нет легкодоступной документации, т.к. разраба- тывался ReactJS очень быстро
Могут возникнуть проблемы при переходе от
старой версии к более новой
Долгое время обучения. React JS требует глубоких знаний о том, как использовать инфраструктуру MVC