Фреймворк – это некий инструмент, облегчающий и сопровождающий процесс 
разработки систем. Фреймворки облегчают работу тем, что заранее содержат в себе 
определенные шаблоны либо функции, на которые уже не нужно тратить время и искать 
потенциальные просчеты и ошибки в ходе разработки. 
Раньше, когда не существовало определённого общепринятого подхода, все вебприложения писались вручную от А до Я и это вызывало проблемы с модификацией и 
развертыванием разрабатываемых приложений так, как только разработчик мог это 
сделать. В 1995 году проблемы были решены тем, что на свет появился общепринятый 
подход, который структурировал разработку веб-приложений. 
Фреймворки делятся на 2 основных типа: 
• Серверные фреймворки; 
• Клиентские фреймворки. 
Серверные фреймворки не предоставляют возможность разрабатывать 
современные интерфейсы этим они и отличаются от клиентских, но они способны 
формировать входные данные и организовывать защиту от различных атак. Серверные 
фреймворки в основном отвечают за логику определенных и критически важных частей, 
при разработке без которых разрабатываемая система не сможет корректно 
функционировать. 
Клиентские фреймворки используют в связке с серверными так как они никак не 
связанны с логической частью разработки. Использования клиентских фреймворков 
позволяет создавать различные анимации и пользовательские интерфейсы. 
Основная часть 
 Как упоминалось ранее ходе выполнения анализа были выявлены три основных 
лидирующих фреймворка, а именно: 
• Yii; 
• Laravel;
• Symfony. 
 Все вышеперечисленные фреймворки основываются на декомпозиции таких слоев 
как: 
• приложения; 
• модули. 
 Данная методика делает разработку очень гибкой и позволяет расширять 
функциональность основываясь на своих потребностях, использовать модифицированную 
версию вместе с кодом фреймворка либо использовать сторонние приложения. Так же 
фреймворки работают на основе схемы MVC которая изображена на рисунке 1 . 
 MVC – схема разделяющая данные, пользовательский интерфейс и логику 
разрабатываемой системы на три компонента: 
• Model; 
• View; 
• Controller. 
 Модель (Model) содержит все данные, правила, функции и уровни бизнес-логики. 
Модель реагирует на команды контролера тем самым изменяет свое состояние. 
Представление (View) используют для визуального отображения данных реагируя 
на изменение модели. 
 Контролер (Controller) считывает действия пользователей, оповещая модель о 
необходимости изменить состояние. 
В таблице 1 приведен анализ достоинств и недостатков, лидирующих PHP 
фреймворков которые предназначены для разработки высоконагруженных систем и 
масштабных проектов. 
Так же кроме всего вышеперечисленного фреймворк Symfony сильно повлиял на 
фреймворки Yii и Laravel, так как в этих фреймворках используются компоненты 
Symfony. Сам фреймворк является более низкоуровневым который чаще всего 
используют в крупных проектах. С помощью Symfony было разработано множество 
крупных проектов: 
• системы управления контентом: Magento, Drupal, Opencart; 
• сервис социальных закладок Delicious; 
• французский видеохостинг Dailymotion; 
• движок форума phpbb. 
Symfony позволяет устанавливать сторонние пакеты, библиотеки, компоненты и 
настраивать их с помощью конфигурации в форматах YAML, XML, PHP, а также. env 
файлах. Так же для работы с базой данных поддерживается тесная интеграция с Doctrine 
ORM. 
 Заключение 
В данной статье была поставлена и выполнена задача выявить на сегодняшний 
день наиболее эффективный PHP фреймворк для разработки высоконагруженных систем 
и использования его в крупных проектах. Использовался сравнительным метод 
исследования, а также были рассмотрены отзывы о данных. Таким образом было вялено 
что использование фреймворка Symfony на сегодняшний день является более 
эффективным чем использование таких фреймворков как Yii и Laravel. 