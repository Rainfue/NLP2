Sass расшифровывается как Systematicly Awesome Style Sheets.
Это препроцессор CSS. Это расширение CSS, которое используется для добавления мощи и
элегантности базовому языку. Он облегчает добавление переменных, вложенных правил, примесей,
встроенного импорта, наследования и т. д., и все это с полностью совместимым с CSS синтаксисом.
Sass — более стабильный и мощный язык расширений CSS, который четко и структурно описывает стиль документа. Очень полезно работать с большими таблицами стилей, сохраняя их хорошо
организованными и быстро запуская небольшие таблицы стилей.
Особенности Sass:
• Sass полностью совместим с CSS.
• Он более стабильный, мощный и элегантный, чем CSS.
• Он основан на JavaScript и является расширенным набором CSS.
• Он имеет собственный синтаксис и компилируется в удобочитаемый CSS.
Это препроцессор с открытым исходным кодом, который интерпретируется в CSS.
• Он поддерживает расширения языка, такие как переменные, вложенность и миксины.
• Он предоставляет множество полезных функций для управления цветами и другими значениями.
• Он предоставляет множество дополнительных функций, таких как директивы управления
для библиотек.
• Он обеспечивает хорошо отформатированный, настраиваемый вывод.
Преимущества:
• Sass позволяет вам писать чистый, простой и менее CSS в конструкции программирования.
• Он содержит меньше кода, поэтому вы можете писать CSS быстрее.
• Он более стабилен, мощен и элегантен, потому что является расширением CSS. Таким образом, дизайнеры и разработчики могут работать более эффективно и быстро.
• Он совместим со всеми версиями CSS. Таким образом, вы можете использовать любые доступные библиотеки CSS.
• Он обеспечивает вложенность, поэтому вы можете использовать вложенный синтаксис и
полезные функции, такие как управление цветом, математические функции и другие значения.
Недостатки:
• У разработчика должно быть достаточно времени, чтобы изучить новые функции, представленные в этом препроцессоре, прежде чем использовать его.
• Использование Sass может привести к потере преимуществ встроенного в браузер инспектора элементов.
Sass поддерживает два синтаксиса:
Синтаксис SCSS: SCSS (Sassy CSS) можно указать как расширение синтаксиса CSS. Это просто
означает, что каждый допустимый CSS также является допустимым SCSS. SCSS упрощает поддержку
больших таблиц стилей. Он использует расширение ".scss".
Синтаксис с отступом: синтаксис с отступом является более старым синтаксисом и называется
Sass. Вы должны написать CSS лаконично для использования такого типа синтаксиса. Он использует
расширение .sass".
Переменные Sass используются для хранения информации, которую можно повторно использовать в таблице стилей, когда вам это нужно. Вы можете хранить такие вещи, как цвета, стеки шрифтов
или любое значение CSS в соответствии с возможностью повторного использования в будущем.
CSS достаточно для обработки простой таблицы стилей, но если таблицы стилей больше и
сложнее, их сложнее поддерживать. Препроцессор может помочь в этом случае. Sass предоставляет
некоторые расширенные функции, недоступные в CSS, такие как переменные, вложенность, примеси,
наследование и другие полезные функции, которые делают его совместимым для обработки всех типов таблиц стилей.
Когда вы начнете работать с Sass, он возьмет ваш предварительно обработанный файл Sass и
сохранит его как простой файл CSS, который позже будет использоваться на вашей веб-странице.
После установки sass вы можете просматривать отдельные файлы или целые каталоги с флагом
--watch . Посмотрите синтаксис запуска Sass при просмотре всего каталога.
Обычно HTML написан в виде четкой вложенной и визуальной иерархии, а CSS — нет. Sass
упрощает вложение селектора CSS таким образом, чтобы он следовал той же визуальной иерархии
вашего HTML. Вы должны быть очень осторожны при вложении, потому что чрезмерно вложенные
правила могут вызвать сложность, и их трудно поддерживать.